{"source": "/home/ilyachch/Projects/OpenSource/django-rest-framework-rusdoc/.reference/api-guide/exceptions.md", "blocks": [{"block_type": "SeparatorBlock"}, {"translated_data": "\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a:\n- exceptions.py", "children": [{"text": "source:\n    - exceptions.py", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# \u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f", "children": [{"text": "Exceptions", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "> \u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f... \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0447\u0438\u0441\u0442\u043e \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u043e\u0448\u0438\u0431\u043e\u043a \u0432 \u0446\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u043e\u043c \u0438\u043b\u0438 \u0432\u044b\u0441\u043e\u043a\u043e\u0443\u0440\u043e\u0432\u043d\u0435\u0432\u043e\u043c \u043c\u0435\u0441\u0442\u0435 \u0432 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b.\n>\n> &mdash; Doug Hellmann, [Python Exception Handling Techniques](https://doughellmann.com/blog/2009/06/19/python-exception-handling-techniques/)", "children": [{"children": [{"text": "Exceptions\u2026 allow error handling to be organized cleanly in a central or high-level place within the program structure.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"block_type": "NewlineBlock"}, {"children": [{"text": "&mdash; Doug Hellmann, ", "block_type": "TextBlock"}, {"children": [{"text": "Python Exception Handling Techniques", "block_type": "TextBlock"}], "url": "https://doughellmann.com/blog/2009/06/19/python-exception-handling-techniques/", "title": null, "block_type": "LinkBlock"}], "block_type": "Paragraph"}], "block_type": "BlockQuote"}, {"translated_data": "## \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u0432 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u0445 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430 REST", "children": [{"text": "Exception handling in REST framework views", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430 REST \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0442 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043e\u0442\u0432\u0435\u0442\u044b \u043d\u0430 \u043e\u0448\u0438\u0431\u043a\u0438.", "children": [{"text": "REST framework's views handle various exceptions, and deal with returning appropriate error responses.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u043c\u044b\u043c\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f:", "children": [{"text": "The handled exceptions are:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "* \u041f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u044b `APIException`, \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u044e\u0449\u0438\u0435 \u0432\u043d\u0443\u0442\u0440\u0438 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u0430 REST.\n* \u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 Django `Http404`.\n* \u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 Django `PermissionDenied`.", "children": [{"children": [{"text": "Subclasses of ", "block_type": "TextBlock"}, {"code": "APIException", "block_type": "CodeSpanBlock"}, {"text": " raised inside REST framework.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"text": "Django's ", "block_type": "TextBlock"}, {"code": "Http404", "block_type": "CodeSpanBlock"}, {"text": " exception.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"text": "Django's ", "block_type": "TextBlock"}, {"code": "PermissionDenied", "block_type": "CodeSpanBlock"}, {"text": " exception.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "\u0412 \u043a\u0430\u0436\u0434\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a REST \u0432\u0435\u0440\u043d\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u0441 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c \u043a\u043e\u0434\u043e\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0438 \u0442\u0438\u043f\u043e\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e.  \u0412 \u0442\u0435\u043b\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 \u0431\u0443\u0434\u0443\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c\u0441\u044f \u043b\u044e\u0431\u044b\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043e \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0435 \u043e\u0448\u0438\u0431\u043a\u0438.", "children": [{"text": "In each case, REST framework will return a response with an appropriate status code and content-type.  The body of the response will include any additional details regarding the nature of the error.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0411\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u043d\u0430 \u043e\u0448\u0438\u0431\u043a\u0438 \u0431\u0443\u0434\u0443\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043a\u043b\u044e\u0447 `detail` \u0432 \u0442\u0435\u043b\u0435 \u043e\u0442\u0432\u0435\u0442\u0430.", "children": [{"text": "Most error responses will include a key ", "block_type": "TextBlock"}, {"code": "detail", "block_type": "CodeSpanBlock"}, {"text": " in the body of the response.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0437\u0430\u043f\u0440\u043e\u0441:", "children": [{"text": "For example, the following request:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "DELETE http://api.example.com/foo/bar HTTP/1.1\nAccept: application/json", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u043b\u0443\u0447\u0435\u043d \u043e\u0442\u0432\u0435\u0442 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u043c\u0435\u0442\u043e\u0434 `DELETE` \u043d\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0440\u0435\u0441\u0443\u0440\u0441\u0430:", "children": [{"text": "Might receive an error response indicating that the ", "block_type": "TextBlock"}, {"code": "DELETE", "block_type": "CodeSpanBlock"}, {"text": " method is not allowed on that resource:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "HTTP/1.1 405 Method Not Allowed\nContent-Type: application/json\nContent-Length: 42\n\n{\"detail\": \"Method 'DELETE' not allowed.\"}", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0438\u043d\u0430\u0447\u0435, \u0438 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043a\u043b\u044e\u0447\u0435\u0439 \u0432 \u043e\u0442\u0432\u0435\u0442\u0435 \u0431\u0443\u0434\u0443\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u044b \u0438\u043c\u0435\u043d\u0430 \u043f\u043e\u043b\u0435\u0439. \u0415\u0441\u043b\u0438 \u043e\u0448\u0438\u0431\u043a\u0430 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u043d\u0435 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043a \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u043c\u0443 \u043f\u043e\u043b\u044e, \u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043a\u043b\u044e\u0447 \"non_field_errors\", \u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0435 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0435 \u0434\u043b\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 `NON_FIELD_ERRORS_KEY`.", "children": [{"text": "Validation errors are handled slightly differently, and will include the field names as the keys in the response. If the validation error was not specific to a particular field then it will use the \"non_field_errors\" key, or whatever string value has been set for the ", "block_type": "TextBlock"}, {"code": "NON_FIELD_ERRORS_KEY", "block_type": "CodeSpanBlock"}, {"text": " setting.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u0440\u0438\u043c\u0435\u0440 \u043e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c:", "children": [{"text": "An example validation error might look like this:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "HTTP/1.1 400 Bad Request\nContent-Type: application/json\nContent-Length: 94\n\n{\"amount\": [\"A valid integer is required.\"], \"description\": [\"This field may not be blank.\"]}", "language": null, "block_type": "CodeBlock"}, {"translated_data": "## \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0430\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439", "children": [{"text": "Custom exception handling", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439, \u0441\u043e\u0437\u0434\u0430\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u044e-\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f, \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u044e\u0449\u0438\u0435 \u0432 \u0432\u0430\u0448\u0438\u0445 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u0445 API, \u0432 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u043e\u0442\u0432\u0435\u0442\u0430.  \u042d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u0430\u043c \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0438\u043b\u044c \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u043d\u0430 \u043e\u0448\u0438\u0431\u043a\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0439 \u0432\u0430\u0448\u0438\u043c API.", "children": [{"text": "You can implement custom exception handling by creating a handler function that converts exceptions raised in your API views into response objects.  This allows you to control the style of error responses used by your API.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u043f\u0430\u0440\u0443 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432, \u043f\u0435\u0440\u0432\u044b\u0439 \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 - \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u043c\u043e\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435, \u0430 \u0432\u0442\u043e\u0440\u043e\u0439 - \u0441\u043b\u043e\u0432\u0430\u0440\u044c, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u043b\u044e\u0431\u043e\u0439 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u043c\u043e\u0435 \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435. \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u043b\u0438\u0431\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442 `Response`, \u043b\u0438\u0431\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c `None`, \u0435\u0441\u043b\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043e.  \u0415\u0441\u043b\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 `None`, \u0442\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u043f\u043e\u0434\u043d\u044f\u0442\u043e, \u0438 Django \u0432\u0435\u0440\u043d\u0435\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442 HTTP 500 \"\u043e\u0448\u0438\u0431\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\".", "children": [{"text": "The function must take a pair of arguments, the first is the exception to be handled, and the second is a dictionary containing any extra context such as the view currently being handled. The exception handler function should either return a ", "block_type": "TextBlock"}, {"code": "Response", "block_type": "CodeSpanBlock"}, {"text": " object, or return ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": " if the exception cannot be handled.  If the handler returns ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": " then the exception will be re-raised and Django will return a standard HTTP 500 'server error' response.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0437\u0430\u0445\u043e\u0442\u0435\u0442\u044c \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u0432\u0441\u0435 \u043e\u0442\u0432\u0435\u0442\u044b \u043d\u0430 \u043e\u0448\u0438\u0431\u043a\u0438 \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0442 \u043a\u043e\u0434 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f HTTP \u0432 \u0442\u0435\u043b\u0435 \u043e\u0442\u0432\u0435\u0442\u0430, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0442\u0430\u043a:", "children": [{"text": "For example, you might want to ensure that all error responses include the HTTP status code in the body of the response, like so:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "HTTP/1.1 405 Method Not Allowed\nContent-Type: application/json\nContent-Length: 62\n\n{\"status_code\": 405, \"detail\": \"Method 'DELETE' not allowed.\"}", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0427\u0442\u043e\u0431\u044b \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0441\u0442\u0438\u043b\u044c \u043e\u0442\u0432\u0435\u0442\u0430, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439:", "children": [{"text": "In order to alter the style of the response, you could write the following custom exception handler:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "from rest_framework.views import exception_handler\n\ndef custom_exception_handler(exc, context):\n    # Call REST framework's default exception handler first,\n    # to get the standard error response.\n    response = exception_handler(exc, context)\n\n    #\u00a0Now add the HTTP status code to the response.\n    if response is not None:\n        response.data['status_code'] = response.status_code\n\n    return response", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442 context \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u043c \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u043d\u043e \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u043b\u0435\u0437\u0435\u043d, \u0435\u0441\u043b\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0443 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u043d\u0443\u0436\u043d\u0430 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u043c\u043e\u0435 \u0432 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435, \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u0430\u043a `context['view']`.", "children": [{"text": "The context argument is not used by the default handler, but can be useful if the exception handler needs further information such as the view currently being handled, which can be accessed as ", "block_type": "TextBlock"}, {"code": "context['view']", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u0442\u0430\u043a\u0436\u0435 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d \u0432 \u0432\u0430\u0448\u0438\u0445 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u0445, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043a\u043b\u044e\u0447 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 `EXCEPTION_HANDLER`. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:", "children": [{"text": "The exception handler must also be configured in your settings, using the ", "block_type": "TextBlock"}, {"code": "EXCEPTION_HANDLER", "block_type": "CodeSpanBlock"}, {"text": " setting key. For example:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "REST_FRAMEWORK = {\n    'EXCEPTION_HANDLER': 'my_project.my_app.utils.custom_exception_handler'\n}", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 `'EXCEPTION_HANDLER'` \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u0439 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u043e\u043c REST:", "children": [{"text": "If not specified, the ", "block_type": "TextBlock"}, {"code": "'EXCEPTION_HANDLER'", "block_type": "CodeSpanBlock"}, {"text": " setting defaults to the standard exception handler provided by REST framework:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "REST_FRAMEWORK = {\n    'EXCEPTION_HANDLER': 'rest_framework.views.exception_handler'\n}", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u043e\u0442\u0432\u0435\u0442\u043e\u0432, \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u0434\u043d\u044f\u0442\u044b\u043c\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f\u043c\u0438.  \u041e\u043d \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u043e\u0442\u0432\u0435\u0442\u043e\u0432, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0445 \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a \u043e\u0442\u0432\u0435\u0442\u044b `HTTP_400_BAD_REQUEST`, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442\u0441\u044f \u043e\u0431\u0449\u0438\u043c\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u043c\u0438 \u043f\u0440\u0438 \u043d\u0435\u0443\u0434\u0430\u0447\u043d\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0435 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430.", "children": [{"text": "Note that the exception handler will only be called for responses generated by raised exceptions.  It will not be used for any responses returned directly by the view, such as the ", "block_type": "TextBlock"}, {"code": "HTTP_400_BAD_REQUEST", "block_type": "CodeSpanBlock"}, {"text": " responses that are returned by the generic views when serializer validation fails.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# API Reference", "children": [{"text": "API Reference", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "## APIException", "children": [{"text": "APIException", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "**\u041f\u043e\u0434\u043f\u0438\u0441\u044c:** `APIException()`.", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "APIException()", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "**\u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441** \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439, \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u044e\u0449\u0438\u0445 \u0432\u043d\u0443\u0442\u0440\u0438 \u043a\u043b\u0430\u0441\u0441\u0430 `APIView` \u0438\u043b\u0438 `@api_view`.", "children": [{"text": "The ", "block_type": "TextBlock"}, {"children": [{"text": "base class", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " for all exceptions raised inside an ", "block_type": "TextBlock"}, {"code": "APIView", "block_type": "CodeSpanBlock"}, {"text": " class or ", "block_type": "TextBlock"}, {"code": "@api_view", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0427\u0442\u043e\u0431\u044b \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435, \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441 `APIException` \u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b `.status_code`, `.default_detail` \u0438 `default_code` \u0434\u043b\u044f \u043a\u043b\u0430\u0441\u0441\u0430.", "children": [{"text": "To provide a custom exception, subclass ", "block_type": "TextBlock"}, {"code": "APIException", "block_type": "CodeSpanBlock"}, {"text": " and set the ", "block_type": "TextBlock"}, {"code": ".status_code", "block_type": "CodeSpanBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"code": ".default_detail", "block_type": "CodeSpanBlock"}, {"text": ", and ", "block_type": "TextBlock"}, {"code": "default_code", "block_type": "CodeSpanBlock"}, {"text": " attributes on the class.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0435\u0441\u043b\u0438 \u0432\u0430\u0448 API \u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0439 \u0441\u0435\u0440\u0432\u0438\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u043d\u043e\u0433\u0434\u0430 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0437\u0430\u0445\u043e\u0442\u0435\u0442\u044c \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043a\u043e\u0434\u0430 \u043e\u0442\u0432\u0435\u0442\u0430 HTTP \"503 Service Unavailable\".  \u042d\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c:", "children": [{"text": "For example, if your API relies on a third party service that may sometimes be unreachable, you might want to implement an exception for the \"503 Service Unavailable\" HTTP response code.  You could do this like so:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "from rest_framework.exceptions import APIException\n\nclass ServiceUnavailable(APIException):\n    status_code = 503\n    default_detail = 'Service temporarily unavailable, try again later.'\n    default_code = 'service_unavailable'", "language": null, "block_type": "CodeBlock"}, {"translated_data": "#### \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 API", "children": [{"text": "Inspecting API exceptions", "block_type": "TextBlock"}], "level": 4, "block_type": "HeadingBlock"}, {"translated_data": "\u0421\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0440\u044f\u0434 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0441\u0432\u043e\u0439\u0441\u0442\u0432, \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f\n\u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f API. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u0445 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439\n\u0434\u043b\u044f \u0432\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430.", "children": [{"text": "There are a number of different properties available for inspecting the status\nof an API exception. You can use these to build custom exception handling\nfor your project.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u043c\u0438 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430\u043c\u0438 \u0438 \u043c\u0435\u0442\u043e\u0434\u0430\u043c\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f:", "children": [{"text": "The available attributes and methods are:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `.detail` - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0448\u0438\u0431\u043a\u0438.\n* `.get_codes()` - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043a\u043e\u0434\u0430 \u043e\u0448\u0438\u0431\u043a\u0438.\n* `.get_full_details()` - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u0430\u043a \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435, \u0442\u0430\u043a \u0438 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043a\u043e\u0434\u0430.", "children": [{"children": [{"code": ".detail", "block_type": "CodeSpanBlock"}, {"text": " - Return the textual description of the error.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": ".get_codes()", "block_type": "CodeSpanBlock"}, {"text": " - Return the code identifier of the error.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": ".get_full_details()", "block_type": "CodeSpanBlock"}, {"text": " - Return both the textual description and the code identifier.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "\u0412 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0435 \u0441\u043b\u0443\u0447\u0430\u0435\u0432 \u0434\u0435\u0442\u0430\u043b\u044c \u043e\u0448\u0438\u0431\u043a\u0438 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0441\u0442\u044b\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u043c:", "children": [{"text": "In most cases the error detail will be a simple item:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": ">>> print(exc.detail)\nYou do not have permission to perform this action.\n>>> print(exc.get_codes())\npermission_denied\n>>> print(exc.get_full_details())\n{'message':'You do not have permission to perform this action.','code':'permission_denied'}", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0448\u0438\u0431\u043e\u043a \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0434\u0435\u0442\u0430\u043b\u044c \u043e\u0448\u0438\u0431\u043a\u0438 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u043e\u0431\u043e\u0439 \u043b\u0438\u0431\u043e \u0441\u043f\u0438\u0441\u043e\u043a, \u043b\u0438\u0431\u043e\n\u0441\u043b\u043e\u0432\u0430\u0440\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432:", "children": [{"text": "In the case of validation errors the error detail will be either a list or\ndictionary of items:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": ">>> print(exc.detail)\n{\"name\":\"This field is required.\",\"age\":\"A valid integer is required.\"}\n>>> print(exc.get_codes())\n{\"name\":\"required\",\"age\":\"invalid\"}\n>>> print(exc.get_full_details())\n{\"name\":{\"message\":\"This field is required.\",\"code\":\"required\"},\"age\":{\"message\":\"A valid integer is required.\",\"code\":\"invalid\"}}", "language": null, "block_type": "CodeBlock"}, {"translated_data": "## ParseError", "children": [{"text": "ParseError", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "**\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435:** `ParseError(detail=None, code=None)`.", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "ParseError(detail=None, code=None)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0412\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442, \u0435\u0441\u043b\u0438 \u0437\u0430\u043f\u0440\u043e\u0441 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0435 \u043a `request.data`.", "children": [{"text": "Raised if the request contains malformed data when accessing ", "block_type": "TextBlock"}, {"code": "request.data", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u044d\u0442\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a \u043e\u0442\u0432\u0435\u0442\u0443 \u0441 \u043a\u043e\u0434\u043e\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f HTTP \"400 Bad Request\".", "children": [{"text": "By default this exception results in a response with the HTTP status code \"400 Bad Request\".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## AuthenticationFailed", "children": [{"text": "AuthenticationFailed", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "**\u041f\u043e\u0434\u043f\u0438\u0441\u044c:** `AuthenticationFailed(detail=None, code=None)`.", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "AuthenticationFailed(detail=None, code=None)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0412\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442, \u043a\u043e\u0433\u0434\u0430 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0443\u044e \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e.", "children": [{"text": "Raised when an incoming request includes incorrect authentication.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u044d\u0442\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a \u043e\u0442\u0432\u0435\u0442\u0443 \u0441 \u043a\u043e\u0434\u043e\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f HTTP \"401 Unauthenticated\", \u043d\u043e \u043e\u043d\u043e \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043e\u0442\u0432\u0435\u0442\u0443 \"403 Forbidden\", \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u043e\u0439 \u0441\u0445\u0435\u043c\u044b \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438.  \u0411\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0441\u043c. \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 [authentication documentation](authentication.md).", "children": [{"text": "By default this exception results in a response with the HTTP status code \"401 Unauthenticated\", but it may also result in a \"403 Forbidden\" response, depending on the authentication scheme in use.  See the ", "block_type": "TextBlock"}, {"children": [{"text": "authentication documentation", "block_type": "TextBlock"}], "url": "authentication.md", "title": null, "block_type": "LinkBlock"}, {"text": " for more details.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## NotAuthenticated", "children": [{"text": "NotAuthenticated", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "**\u041f\u043e\u0434\u043f\u0438\u0441\u044c:** `NotAuthenticated(detail=None, code=None)`.", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "NotAuthenticated(detail=None, code=None)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0412\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442, \u043a\u043e\u0433\u0434\u0430 \u043d\u0435\u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043f\u0440\u043e\u0448\u0435\u043b \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u043d\u0430 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435.", "children": [{"text": "Raised when an unauthenticated request fails the permission checks.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u044d\u0442\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a \u043e\u0442\u0432\u0435\u0442\u0443 \u0441 \u043a\u043e\u0434\u043e\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f HTTP \"401 Unauthenticated\", \u043d\u043e \u043e\u043d\u043e \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043e\u0442\u0432\u0435\u0442\u0443 \"403 Forbidden\", \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u043e\u0439 \u0441\u0445\u0435\u043c\u044b \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438.  \u0411\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0441\u043c. \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 [authentication documentation](authentication.md).", "children": [{"text": "By default this exception results in a response with the HTTP status code \"401 Unauthenticated\", but it may also result in a \"403 Forbidden\" response, depending on the authentication scheme in use.  See the ", "block_type": "TextBlock"}, {"children": [{"text": "authentication documentation", "block_type": "TextBlock"}], "url": "authentication.md", "title": null, "block_type": "LinkBlock"}, {"text": " for more details.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## PermissionDenied", "children": [{"text": "PermissionDenied", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "**\u041f\u043e\u0434\u043f\u0438\u0441\u044c:** `PermissionDenied(detail=None, code=None)`.", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "PermissionDenied(detail=None, code=None)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0412\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442, \u043a\u043e\u0433\u0434\u0430 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043f\u0440\u043e\u0448\u0435\u043b \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u043d\u0430 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435.", "children": [{"text": "Raised when an authenticated request fails the permission checks.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u044d\u0442\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a \u043e\u0442\u0432\u0435\u0442\u0443 \u0441 \u043a\u043e\u0434\u043e\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f HTTP \"403 Forbidden\".", "children": [{"text": "By default this exception results in a response with the HTTP status code \"403 Forbidden\".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## NotFound", "children": [{"text": "NotFound", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "**\u041f\u043e\u0434\u043f\u0438\u0441\u044c:** `NotFound(detail=None, code=None)`.", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "NotFound(detail=None, code=None)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0412\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442, \u043a\u043e\u0433\u0434\u0430 \u0440\u0435\u0441\u0443\u0440\u0441 \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 URL. \u042d\u0442\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u043d\u043e \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u043c\u0443 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044e `Http404` Django.", "children": [{"text": "Raised when a resource does not exist at the given URL. This exception is equivalent to the standard ", "block_type": "TextBlock"}, {"code": "Http404", "block_type": "CodeSpanBlock"}, {"text": " Django exception.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u044d\u0442\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a \u043e\u0442\u0432\u0435\u0442\u0443 \u0441 \u043a\u043e\u0434\u043e\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f HTTP \"404 Not Found\".", "children": [{"text": "By default this exception results in a response with the HTTP status code \"404 Not Found\".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## MethodNotAllowed", "children": [{"text": "MethodNotAllowed", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "**\u041f\u0440\u0438\u0437\u043d\u0430\u043a:** `MethodNotAllowed(method, detail=None, code=None)`.", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "MethodNotAllowed(method, detail=None, code=None)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0412\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442, \u043a\u043e\u0433\u0434\u0430 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0439 \u0437\u0430\u043f\u0440\u043e\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435 \u0441\u043e\u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u0441 \u043c\u0435\u0442\u043e\u0434\u043e\u043c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u043d\u0430 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0438.", "children": [{"text": "Raised when an incoming request occurs that does not map to a handler method on the view.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u044d\u0442\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a \u043e\u0442\u0432\u0435\u0442\u0443 \u0441 \u043a\u043e\u0434\u043e\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f HTTP \"405 Method Not Allowed\".", "children": [{"text": "By default this exception results in a response with the HTTP status code \"405 Method Not Allowed\".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## \u041d\u0435\u043f\u0440\u0438\u0435\u043c\u043b\u0435\u043c\u043e", "children": [{"text": "NotAcceptable", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "**\u041f\u043e\u0434\u043f\u0438\u0441\u044c:** `NotAcceptable(detail=None, code=None)`.", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "NotAcceptable(detail=None, code=None)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0412\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442, \u043a\u043e\u0433\u0434\u0430 \u043f\u043e\u0441\u0442\u0443\u043f\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441 \u0441 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u043c `Accept`, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u0435\u043d \u043d\u0438 \u043e\u0434\u043d\u0438\u043c \u0438\u0437 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0440\u0435\u043d\u0434\u0435\u0440\u0435\u0440\u043e\u0432.", "children": [{"text": "Raised when an incoming request occurs with an ", "block_type": "TextBlock"}, {"code": "Accept", "block_type": "CodeSpanBlock"}, {"text": " header that cannot be satisfied by any of the available renderers.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u044d\u0442\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a \u043e\u0442\u0432\u0435\u0442\u0443 \u0441 \u043a\u043e\u0434\u043e\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f HTTP \"406 Not Acceptable\".", "children": [{"text": "By default this exception results in a response with the HTTP status code \"406 Not Acceptable\".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## UnsupportedMediaType", "children": [{"text": "UnsupportedMediaType", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "**\u041f\u0440\u0438\u0437\u043d\u0430\u043a:** `UnsupportedMediaType(media_type, detail=None, code=None)`.", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "UnsupportedMediaType(media_type, detail=None, code=None)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0412\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442, \u0435\u0441\u043b\u0438 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0438 \u043a `request.data` \u043d\u0435\u0442 \u043f\u0430\u0440\u0441\u0435\u0440\u043e\u0432, \u0441\u043f\u043e\u0441\u043e\u0431\u043d\u044b\u0445 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0442\u0438\u043f \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e \u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.", "children": [{"text": "Raised if there are no parsers that can handle the content type of the request data when accessing ", "block_type": "TextBlock"}, {"code": "request.data", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u044d\u0442\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a \u043e\u0442\u0432\u0435\u0442\u0443 \u0441 \u043a\u043e\u0434\u043e\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f HTTP \"415 Unsupported Media Type\".", "children": [{"text": "By default this exception results in a response with the HTTP status code \"415 Unsupported Media Type\".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## \u0414\u0440\u043e\u0441\u0441\u0435\u043b\u044c", "children": [{"text": "Throttled", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "**\u041f\u043e\u0434\u043f\u0438\u0441\u044c:** `Throttled(wait=None, detail=None, code=None)`.", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "Throttled(wait=None, detail=None, code=None)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0412\u043e\u0437\u043d\u0438\u043a\u0430\u0435\u0442, \u043a\u043e\u0433\u0434\u0430 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u043d\u0430 \u0434\u0440\u043e\u0441\u0441\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435.", "children": [{"text": "Raised when an incoming request fails the throttling checks.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u044d\u0442\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a \u043e\u0442\u0432\u0435\u0442\u0443 \u0441 \u043a\u043e\u0434\u043e\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f HTTP \"429 Too Many Requests\".", "children": [{"text": "By default this exception results in a response with the HTTP status code \"429 Too Many Requests\".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## ValidationError", "children": [{"text": "ValidationError", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "**\u041f\u043e\u0434\u043f\u0438\u0441\u044c:** `ValidationError(detail=None, code=None)`.", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "ValidationError(detail=None, code=None)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 `ValidationError` \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u043e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u043e\u0442 \u0434\u0440\u0443\u0433\u0438\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 `APIException`:", "children": [{"text": "The ", "block_type": "TextBlock"}, {"code": "ValidationError", "block_type": "CodeSpanBlock"}, {"text": " exception is slightly different from the other ", "block_type": "TextBlock"}, {"code": "APIException", "block_type": "CodeSpanBlock"}, {"text": " classes:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "* \u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442 `detail` \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0438\u043b\u0438 \u0441\u043b\u043e\u0432\u0430\u0440\u0435\u043c \u0434\u0435\u0442\u0430\u043b\u0435\u0439 \u043e\u0448\u0438\u0431\u043a\u0438, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0441\u043b\u043e\u0432\u0430\u0440\u044c, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043e\u0448\u0438\u0431\u043a\u0438 \u043d\u0430 \u0443\u0440\u043e\u0432\u043d\u0435 \u043f\u043e\u043b\u0435\u0439 \u043f\u0440\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043d\u0430 \u0443\u0440\u043e\u0432\u043d\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0432 \u043c\u0435\u0442\u043e\u0434\u0435 `validate()` \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440. `raise serializers.ValidationError({'name': 'Please enter a valid name.'})`.\n* \u041f\u043e \u0441\u043e\u0433\u043b\u0430\u0448\u0435\u043d\u0438\u044e \u0432\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043c\u043e\u0434\u0443\u043b\u044c serializers \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043a\u0432\u0430\u043b\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c `ValidationError`, \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043b\u0438\u0447\u0438\u0442\u044c \u0435\u0433\u043e \u043e\u0442 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u043e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 Django. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440. `raise serializers.ValidationError('\u042d\u0442\u043e \u043f\u043e\u043b\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c.')`.", "children": [{"children": [{"text": "The ", "block_type": "TextBlock"}, {"code": "detail", "block_type": "CodeSpanBlock"}, {"text": " argument may be a list or dictionary of error details, and may also be a nested data structure. By using a dictionary, you can specify field-level errors while performing object-level validation in the ", "block_type": "TextBlock"}, {"code": "validate()", "block_type": "CodeSpanBlock"}, {"text": " method of a serializer. For example. ", "block_type": "TextBlock"}, {"code": "raise serializers.ValidationError({'name': 'Please enter a valid name.'})", "block_type": "CodeSpanBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"text": "By convention you should import the serializers module and use a fully qualified ", "block_type": "TextBlock"}, {"code": "ValidationError", "block_type": "CodeSpanBlock"}, {"text": " style, in order to differentiate it from Django's built-in validation error. For example. ", "block_type": "TextBlock"}, {"code": "raise serializers.ValidationError('This field must be an integer value.')", "block_type": "CodeSpanBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "\u041a\u043b\u0430\u0441\u0441 `ValidationError` \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430 \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u0435\u0439, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043a\u043b\u0430\u0441\u0441\u0430\u043c\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0442\u043e\u0440\u043e\u0432. \u041e\u043d \u0442\u0430\u043a\u0436\u0435 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u0432\u044b\u0437\u043e\u0432\u0435 `serializer.is_valid` \u0441 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 `raise_exception`:", "children": [{"text": "The ", "block_type": "TextBlock"}, {"code": "ValidationError", "block_type": "CodeSpanBlock"}, {"text": " class should be used for serializer and field validation, and by validator classes. It is also raised when calling ", "block_type": "TextBlock"}, {"code": "serializer.is_valid", "block_type": "CodeSpanBlock"}, {"text": " with the ", "block_type": "TextBlock"}, {"code": "raise_exception", "block_type": "CodeSpanBlock"}, {"text": " keyword argument:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "serializer.is_valid(raise_exception=True)", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041e\u0431\u0449\u0438\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 \u0444\u043b\u0430\u0433 `raise_exception=True`, \u0447\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0441\u0442\u0438\u043b\u044c \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u043d\u0430 \u043e\u0448\u0438\u0431\u043a\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u043e \u0432 \u0432\u0430\u0448\u0435\u043c API. \u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439, \u043a\u0430\u043a \u043e\u043f\u0438\u0441\u0430\u043d\u043e \u0432\u044b\u0448\u0435.", "children": [{"text": "The generic views use the ", "block_type": "TextBlock"}, {"code": "raise_exception=True", "block_type": "CodeSpanBlock"}, {"text": " flag, which means that you can override the style of validation error responses globally in your API. To do so, use a custom exception handler, as described above.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u044d\u0442\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442 \u043a \u043e\u0442\u0432\u0435\u0442\u0443 \u0441 \u043a\u043e\u0434\u043e\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f HTTP \"400 Bad Request\".", "children": [{"text": "By default this exception results in a response with the HTTP status code \"400 Bad Request\".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# \u041e\u0431\u0449\u0438\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0430\u0445", "children": [{"text": "Generic Error Views", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "Django REST Framework \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0434\u0432\u0430 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a, \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0431\u0449\u0438\u0445 JSON `500` Server Error \u0438\n`400` Bad Request \u043e\u0442\u0432\u0435\u0442\u044b. (\u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0448\u0438\u0431\u043e\u043a Django \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 HTML-\u043e\u0442\u0432\u0435\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u043d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442\u044c \u0434\u043b\u044f\n\u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439 API).", "children": [{"text": "Django REST Framework provides two error views suitable for providing generic JSON ", "block_type": "TextBlock"}, {"code": "500", "block_type": "CodeSpanBlock"}, {"text": " Server Error and\n", "block_type": "TextBlock"}, {"code": "400", "block_type": "CodeSpanBlock"}, {"text": " Bad Request responses. (Django's default error views provide HTML responses, which may not be appropriate for an\nAPI-only application.)", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0438\u0445 \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e [Django's Customizing error views documentation](https://docs.djangoproject.com/en/dev/topics/http/views/#customizing-error-views).", "children": [{"text": "Use these as per ", "block_type": "TextBlock"}, {"children": [{"text": "Django's Customizing error views documentation", "block_type": "TextBlock"}], "url": "https://docs.djangoproject.com/en/dev/topics/http/views/#customizing-error-views", "title": null, "block_type": "LinkBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## `rest_framework.exceptions.server_error`", "children": [{"code": "rest_framework.exceptions.server_error", "block_type": "CodeSpanBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u0441 \u043a\u043e\u0434\u043e\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f `500` \u0438 \u0442\u0438\u043f\u043e\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e `application/json`.", "children": [{"text": "Returns a response with status code ", "block_type": "TextBlock"}, {"code": "500", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "application/json", "block_type": "CodeSpanBlock"}, {"text": " content type.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u0430\u043a `handler500`:", "children": [{"text": "Set as ", "block_type": "TextBlock"}, {"code": "handler500", "block_type": "CodeSpanBlock"}, {"text": ":", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "handler500 = 'rest_framework.exceptions.server_error'", "language": null, "block_type": "CodeBlock"}, {"translated_data": "## `rest_framework.exceptions.bad_request`", "children": [{"code": "rest_framework.exceptions.bad_request", "block_type": "CodeSpanBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u0441 \u043a\u043e\u0434\u043e\u043c \u0441\u0442\u0430\u0442\u0443\u0441\u0430 `400` \u0438 \u0442\u0438\u043f\u043e\u043c \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0433\u043e `application/json`.", "children": [{"text": "Returns a response with status code ", "block_type": "TextBlock"}, {"code": "400", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "application/json", "block_type": "CodeSpanBlock"}, {"text": " content type.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u0430\u043a `handler400`:", "children": [{"text": "Set as ", "block_type": "TextBlock"}, {"code": "handler400", "block_type": "CodeSpanBlock"}, {"text": ":", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "handler400 = 'rest_framework.exceptions.bad_request'", "language": null, "block_type": "CodeBlock"}, {"translated_data": "# \u041f\u0430\u043a\u0435\u0442\u044b \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0445 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439", "children": [{"text": "Third party packages", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "\u0422\u0430\u043a\u0436\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u044b \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0445 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439.", "children": [{"text": "The following third-party packages are also available.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## \u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u0414\u0420\u0424", "children": [{"text": "DRF Standardized Errors", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u0430\u043a\u0435\u0442 [drf-standardized-errors](https://github.com/ghazi-git/drf-standardized-errors) \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 4xx \u0438 5xx. \u041e\u043d \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0437\u0430\u043c\u0435\u043d\u043e\u0439 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0433\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u0438 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0442\u044c \u0444\u043e\u0440\u043c\u0430\u0442 \u043e\u0442\u0432\u0435\u0442\u0430 \u043d\u0430 \u043e\u0448\u0438\u0431\u043a\u0443 \u0431\u0435\u0437 \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u044b\u0432\u0430\u043d\u0438\u044f \u0432\u0441\u0435\u0433\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439. \u0421\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u043e\u0442\u0432\u0435\u0442\u0430 \u043d\u0430 \u043e\u0448\u0438\u0431\u043a\u0443 \u043b\u0435\u0433\u0447\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438 \u043f\u0440\u043e\u0449\u0435 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u043f\u043e\u0442\u0440\u0435\u0431\u0438\u0442\u0435\u043b\u044f\u043c API.", "children": [{"text": "The ", "block_type": "TextBlock"}, {"children": [{"text": "drf-standardized-errors", "block_type": "TextBlock"}], "url": "https://github.com/ghazi-git/drf-standardized-errors", "title": null, "block_type": "LinkBlock"}, {"text": " package provides an exception handler that generates the same format for all 4xx and 5xx responses. It is a drop-in replacement for the default exception handler and allows customizing the error response format without rewriting the whole exception handler. The standardized error response format is easier to document and easier to handle by API consumers.", "block_type": "TextBlock"}], "block_type": "Paragraph"}]}