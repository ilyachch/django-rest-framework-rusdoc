{"source": "/home/ilyachch/Projects/OpenSource/django-rest-framework-rusdoc/.reference/quick-start/from-documenting-your-api.md", "blocks": [{"translated_data": "## \u0412\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043f\u043e API", "children": [{"text": "Built-in API documentation", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"block_type": "SeparatorBlock"}, {"translated_data": "**\u0423\u0412\u0415\u0414\u041e\u041c\u041b\u0415\u041d\u0418\u0415 \u041e \u0414\u0415\u041f\u0420\u0415\u0421\u0421\u0418\u0418:** \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0445\u0435\u043c \u043d\u0430 \u0431\u0430\u0437\u0435 CoreAPI \u0431\u044b\u043b\u043e \u043e\u0442\u043c\u0435\u043d\u0435\u043d\u043e \u0441 \u0432\u0432\u0435\u0434\u0435\u043d\u0438\u0435\u043c \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0441\u0445\u0435\u043c \u043d\u0430 \u0431\u0430\u0437\u0435 OpenAPI \u0432 Django REST Framework v3.10. \u0411\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u0432 [Version 3.10 Release Announcement](../community/3.10-announcement.md).", "children": [{"children": [{"text": "DEPRECATION NOTICE:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " Use of CoreAPI-based schemas were deprecated with the introduction of native OpenAPI-based schema generation as of Django REST Framework v3.10. See the ", "block_type": "TextBlock"}, {"children": [{"text": "Version 3.10 Release Announcement", "block_type": "TextBlock"}], "url": "../community/3.10-announcement.md", "title": null, "block_type": "LinkBlock"}, {"text": " for more details.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0415\u0441\u043b\u0438 \u0432\u044b \u0438\u0449\u0435\u0442\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0445\u0435\u043c\u0430\u0445, \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043d\u0430 \u044d\u0442\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044b:", "children": [{"text": "If you are looking for information regarding schemas, you might want to look at these updated resources:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "1. [Schema](../api-guide/schemas.md)\n2. [\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0432\u0430\u0448\u0435\u0433\u043e API](../topics/documenting-your-api.md)", "children": [{"children": [{"children": [{"text": "Schema", "block_type": "TextBlock"}], "url": "../api-guide/schemas.md", "title": null, "block_type": "LinkBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"children": [{"text": "Documenting your API", "block_type": "TextBlock"}], "url": "../topics/documenting-your-api.md", "title": null, "block_type": "LinkBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": true, "level": 1, "start": 1, "block_type": "ListBlock"}, {"block_type": "SeparatorBlock"}, {"translated_data": "\u0412\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043f\u043e API \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442:", "children": [{"text": "The built-in API documentation includes:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "* \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0445 \u0442\u043e\u0447\u0435\u043a API.\n* \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c\u044b\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u043a\u043e\u0434\u0430 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a API.\n* \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 API.", "children": [{"children": [{"text": "Documentation of API endpoints.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"text": "Automatically generated code samples for each of the available API client libraries.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"text": "Support for API interaction.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "### \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430", "children": [{"text": "Installation", "block_type": "TextBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 `coreapi` \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0434\u043b\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u043f\u043e API. \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u0432\u0435\u0440\u0441\u0438\u044e. \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 `Pygments` \u0438 `Markdown` \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438, \u043d\u043e \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c\u044b\u043c\u0438.", "children": [{"text": "The ", "block_type": "TextBlock"}, {"code": "coreapi", "block_type": "CodeSpanBlock"}, {"text": " library is required as a dependency for the API docs. Make sure to install the latest version. The ", "block_type": "TextBlock"}, {"code": "Pygments", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "Markdown", "block_type": "CodeSpanBlock"}, {"text": " libraries are optional but recommended.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0427\u0442\u043e\u0431\u044b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e API, \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0435\u0435 \u0432 URLconf \u0432\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430:", "children": [{"text": "To install the API documentation, you'll need to include it in your project's URLconf:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "from rest_framework.documentation import include_docs_urls\n\nurlpatterns = [\n    ...\n    path('docs/', include_docs_urls(title='My API title'))\n]", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u042d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0432 \u0441\u0435\u0431\u044f \u0434\u0432\u0430 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0432\u0438\u0434\u0430:", "children": [{"text": "This will include two different views:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `/docs/` - \u0421\u0430\u043c\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438.\n* `/docs/schema.js` - \u0420\u0435\u0441\u0443\u0440\u0441 JavaScript, \u0440\u0430\u0441\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u0441\u0445\u0435\u043c\u0443 API.", "children": [{"children": [{"code": "/docs/", "block_type": "CodeSpanBlock"}, {"text": " - The documentation page itself.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "/docs/schema.js", "block_type": "CodeSpanBlock"}, {"text": " - A JavaScript resource that exposes the API schema.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"block_type": "SeparatorBlock"}, {"translated_data": "**\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435**: \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `include_docs_urls` \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442 \u043b\u0435\u0436\u0430\u0449\u0438\u0439 \u0432 \u043e\u0441\u043d\u043e\u0432\u0435 `SchemaView` \u043d\u0430 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044e *\u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0445* \u0441\u0445\u0435\u043c. \u042d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u0438\u043d\u0441\u0442\u0430\u043d\u0446\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0441 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u043c `request`. \u0422.\u0435. \u0432\u043d\u0443\u0442\u0440\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f `self.request` \u0431\u0443\u0434\u0435\u0442 `None`.", "children": [{"children": [{"text": "Note", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ": By default ", "block_type": "TextBlock"}, {"code": "include_docs_urls", "block_type": "CodeSpanBlock"}, {"text": " configures the underlying ", "block_type": "TextBlock"}, {"code": "SchemaView", "block_type": "CodeSpanBlock"}, {"text": " to generate ", "block_type": "TextBlock"}, {"children": [{"text": "public", "block_type": "TextBlock"}], "block_type": "EmphasisTextBlock"}, {"text": " schemas. This means that views will not be instantiated with a ", "block_type": "TextBlock"}, {"code": "request", "block_type": "CodeSpanBlock"}, {"text": " instance. i.e. Inside the view ", "block_type": "TextBlock"}, {"code": "self.request", "block_type": "CodeSpanBlock"}, {"text": " will be ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0427\u0442\u043e\u0431\u044b \u0431\u044b\u0442\u044c \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u044b\u043c\u0438 \u0441 \u0442\u0430\u043a\u0438\u043c \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435\u043c, \u043c\u0435\u0442\u043e\u0434\u044b (\u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a `get_serializer` \u0438\u043b\u0438 `get_serializer_class` \u0438 \u0442.\u0434.), \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044e\u0442 `self.request` \u0438\u043b\u0438, \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u0441\u0442\u0438, `self.request.user`, \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u043a\u0438 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u044d\u0442\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u044f.", "children": [{"text": "To be compatible with this behaviour, methods (such as ", "block_type": "TextBlock"}, {"code": "get_serializer", "block_type": "CodeSpanBlock"}, {"text": " or ", "block_type": "TextBlock"}, {"code": "get_serializer_class", "block_type": "CodeSpanBlock"}, {"text": " etc.) which inspect ", "block_type": "TextBlock"}, {"code": "self.request", "block_type": "CodeSpanBlock"}, {"text": " or, particularly, ", "block_type": "TextBlock"}, {"code": "self.request.user", "block_type": "CodeSpanBlock"}, {"text": " may need to be adjusted to handle this case.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u043c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 `request`, \u0432\u044b\u0437\u0432\u0430\u0432 `include_docs_urls` \u0441 `public=False`:", "children": [{"text": "You may ensure views are given a ", "block_type": "TextBlock"}, {"code": "request", "block_type": "CodeSpanBlock"}, {"text": " instance by calling ", "block_type": "TextBlock"}, {"code": "include_docs_urls", "block_type": "CodeSpanBlock"}, {"text": " with ", "block_type": "TextBlock"}, {"code": "public=False", "block_type": "CodeSpanBlock"}, {"text": ":", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "from rest_framework.documentation import include_docs_urls\n\nurlpatterns = [\n    ...\n    # Generate schema with valid `request` instance:\n    path('docs/', include_docs_urls(title='My API title', public=False))\n]", "language": null, "block_type": "CodeBlock"}, {"block_type": "SeparatorBlock"}, {"translated_data": "### \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0432\u0430\u0448\u0438\u0445 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439", "children": [{"text": "Documenting your views", "block_type": "TextBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u0432\u043a\u043b\u044e\u0447\u0438\u0432 \u0432 \u043d\u0438\u0445 docstrings, \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0449\u0438\u0435 \u043a\u0430\u0436\u0434\u043e\u0435 \u0438\u0437 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:", "children": [{"text": "You can document your views by including docstrings that describe each of the available actions. For example:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "class UserList(generics.ListAPIView):\n    \"\"\"\n    Return a list of all the existing users.\n    \"\"\"", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0415\u0441\u043b\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043c\u0435\u0442\u043e\u0434\u043e\u0432, \u0432\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u0438 \u0432 \u0441\u0442\u0438\u043b\u0435 `method:`.", "children": [{"text": "If a view supports multiple methods, you should split your documentation using ", "block_type": "TextBlock"}, {"code": "method:", "block_type": "CodeSpanBlock"}, {"text": " style delimiters.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "class UserList(generics.ListCreateAPIView):\n    \"\"\"\n    get:\n    Return a list of all the existing users.\n\n    post:\n    Create a new user instance.\n    \"\"\"", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u043d\u0430\u0431\u043e\u0440\u043e\u0432 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0438\u043c\u0435\u043d\u0430 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u0435\u0439.", "children": [{"text": "When using viewsets, you should use the relevant action names as delimiters.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "class UserViewSet(viewsets.ModelViewSet):\n    \"\"\"\n    retrieve:\n    Return the given user.\n\n    list:\n    Return a list of all the existing users.\n\n    create:\n    Create a new user instance.\n    \"\"\"", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043d\u0430\u0434 \u043d\u0430\u0431\u043e\u0440\u0430\u043c\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0438\u043c\u0435\u043d\u0430 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u0435\u0439 \u0438\u043b\u0438 \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u044f\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043a \u043c\u0435\u0442\u043e\u0434\u0430\u043c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439.", "children": [{"text": "Custom actions on viewsets can also be documented in a similar way using the method names as delimiters or by attaching the documentation to action mapping methods.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "class UserViewSet(viewsets.ModelViewset):\n    ...\n\n    @action(detail=False, methods=['get', 'post'])\n    def some_action(self, request, *args, **kwargs):\n        \"\"\"\n        get:\n        A description of the get method on the custom action.\n\n        post:\n        A description of the post method on the custom action.\n        \"\"\"\n\n    @some_action.mapping.put\n    def put_some_action():\n        \"\"\"\n        A description of the put method on the custom action.\n        \"\"\"", "language": null, "block_type": "CodeBlock"}, {"translated_data": "### `documentation` API Reference", "children": [{"code": "documentation", "block_type": "CodeSpanBlock"}, {"text": " API Reference", "block_type": "TextBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "\u041c\u043e\u0434\u0443\u043b\u044c `rest_framework.documentation` \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0442\u0440\u0438 \u0432\u0441\u043f\u043e\u043c\u043e\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0439 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 API: `include_docs_urls` (\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043e \u0432\u044b\u0448\u0435), `get_docs_view` \u0438 `get_schemajs_view`.", "children": [{"text": "The ", "block_type": "TextBlock"}, {"code": "rest_framework.documentation", "block_type": "CodeSpanBlock"}, {"text": " module provides three helper functions to help configure the interactive API documentation, ", "block_type": "TextBlock"}, {"code": "include_docs_urls", "block_type": "CodeSpanBlock"}, {"text": " (usage shown above), ", "block_type": "TextBlock"}, {"code": "get_docs_view", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "get_schemajs_view", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "`include_docs_urls` \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 `get_docs_view` \u0438 `get_schemajs_view` \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432 url \u0434\u043b\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0438 JavaScript \u0440\u0435\u0441\u0443\u0440\u0441\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0440\u0430\u0441\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u0445\u0435\u043c\u0443 API \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u041e\u043d\u0438 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043e\u043f\u0446\u0438\u0438 \u0434\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438. (`get_docs_view` \u0438 `get_schemajs_view` \u0432 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u043c \u0438\u0442\u043e\u0433\u0435 \u0432\u044b\u0437\u044b\u0432\u0430\u044e\u0442 `rest_frameworks.schemas.get_schema_view()`, \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043e\u043f\u0446\u0438\u0438 \u0441\u043c. \u0432 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u043f\u043e \u0441\u0445\u0435\u043c\u0430\u043c).", "children": [{"code": "include_docs_urls", "block_type": "CodeSpanBlock"}, {"text": " employs ", "block_type": "TextBlock"}, {"code": "get_docs_view", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "get_schemajs_view", "block_type": "CodeSpanBlock"}, {"text": " to generate the url patterns for the documentation page and JavaScript resource that exposes the API schema respectively. They expose the following options for customisation. (", "block_type": "TextBlock"}, {"code": "get_docs_view", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "get_schemajs_view", "block_type": "CodeSpanBlock"}, {"text": " ultimately call ", "block_type": "TextBlock"}, {"code": "rest_frameworks.schemas.get_schema_view()", "block_type": "CodeSpanBlock"}, {"text": ", see the Schemas docs for more options there.)", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "#### `include_docs_urls`.", "children": [{"code": "include_docs_urls", "block_type": "CodeSpanBlock"}], "level": 4, "block_type": "HeadingBlock"}, {"translated_data": "* `title`: D [...]\n[...]  [...]  [...]\n[...]  [...]  [...]\n[...]  [...]  [...]  [...]\n[...]  [...]  [...]  [...]\n[...]  [...]  [...]\n[...]  [...]  [...]\n[...]  [...]\n[...]  [...]  [...]", "children": [{"children": [{"code": "title", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": ". May be used to provide a descriptive title for the schema definition.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "description", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": ". May be used to provide a description for the schema definition.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "schema_url", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": ". May be used to pass a canonical base URL for the schema.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "public", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": ". Should the schema be considered ", "block_type": "TextBlock"}, {"children": [{"text": "public", "block_type": "TextBlock"}], "block_type": "EmphasisTextBlock"}, {"text": "? If ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": " schema is generated without a ", "block_type": "TextBlock"}, {"code": "request", "block_type": "CodeSpanBlock"}, {"text": " instance being passed to views.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "patterns", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": ". A list of URLs to inspect when generating the schema. If ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": " project's URL conf will be used.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "generator_class", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "rest_framework.schemas.SchemaGenerator", "block_type": "CodeSpanBlock"}, {"text": ". May be used to specify a ", "block_type": "TextBlock"}, {"code": "SchemaGenerator", "block_type": "CodeSpanBlock"}, {"text": " subclass to be passed to the ", "block_type": "TextBlock"}, {"code": "SchemaView", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "authentication_classes", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "api_settings.DEFAULT_AUTHENTICATION_CLASSES", "block_type": "CodeSpanBlock"}, {"text": ". May be used to pass custom authentication classes to the ", "block_type": "TextBlock"}, {"code": "SchemaView", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "permission_classes", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "api_settings.DEFAULT_PERMISSION_CLASSES", "block_type": "CodeSpanBlock"}, {"text": " May be used to pass custom permission classes to the ", "block_type": "TextBlock"}, {"code": "SchemaView", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "renderer_classes", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": ". May be used to pass custom renderer classes to the ", "block_type": "TextBlock"}, {"code": "SchemaView", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "#### `get_docs_view`.", "children": [{"code": "get_docs_view", "block_type": "CodeSpanBlock"}], "level": 4, "block_type": "HeadingBlock"}, {"translated_data": "* `title`: D [...]\n[...]  [...]  [...]\n[...]  [...]  [...]\n[...]  [...]  [...]\n[...]  [...]  [...]  [...]\n[...]  [...]  [...]\n[...]  [...]  [...]\n[...]  [...]  [...]\n[...]  [...]  [...]  [...]", "children": [{"children": [{"code": "title", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": ". May be used to provide a descriptive title for the schema definition.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "description", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": ". May be used to provide a description for the schema definition.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "schema_url", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": ". May be used to pass a canonical base URL for the schema.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "public", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": ". If ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": " schema is generated without a ", "block_type": "TextBlock"}, {"code": "request", "block_type": "CodeSpanBlock"}, {"text": " instance being passed to views.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "patterns", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": ". A list of URLs to inspect when generating the schema. If ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": " project's URL conf will be used.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "generator_class", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "rest_framework.schemas.SchemaGenerator", "block_type": "CodeSpanBlock"}, {"text": ". May be used to specify a ", "block_type": "TextBlock"}, {"code": "SchemaGenerator", "block_type": "CodeSpanBlock"}, {"text": " subclass to be passed to the ", "block_type": "TextBlock"}, {"code": "SchemaView", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "authentication_classes", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "api_settings.DEFAULT_AUTHENTICATION_CLASSES", "block_type": "CodeSpanBlock"}, {"text": ". May be used to pass custom authentication classes to the ", "block_type": "TextBlock"}, {"code": "SchemaView", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "permission_classes", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "api_settings.DEFAULT_PERMISSION_CLASSES", "block_type": "CodeSpanBlock"}, {"text": ". May be used to pass custom permission classes to the ", "block_type": "TextBlock"}, {"code": "SchemaView", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "renderer_classes", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": ". May be used to pass custom renderer classes to the ", "block_type": "TextBlock"}, {"code": "SchemaView", "block_type": "CodeSpanBlock"}, {"text": ". If ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": " the ", "block_type": "TextBlock"}, {"code": "SchemaView", "block_type": "CodeSpanBlock"}, {"text": " will be configured with ", "block_type": "TextBlock"}, {"code": "DocumentationRenderer", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "CoreJSONRenderer", "block_type": "CodeSpanBlock"}, {"text": " renderers, corresponding to the (default) ", "block_type": "TextBlock"}, {"code": "html", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "corejson", "block_type": "CodeSpanBlock"}, {"text": " formats.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "#### `get_schemajs_view`.", "children": [{"code": "get_schemajs_view", "block_type": "CodeSpanBlock"}], "level": 4, "block_type": "HeadingBlock"}, {"translated_data": "* `title`: \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `None`. \u041c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u043f\u0438\u0441\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0441\u0445\u0435\u043c\u044b.\n* `description`: \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `None`. \u041c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0441\u0445\u0435\u043c\u044b.\n* `schema_url`: \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `None`. \u041c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u043a\u0430\u043d\u043e\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0431\u0430\u0437\u043e\u0432\u043e\u0433\u043e URL \u0434\u043b\u044f \u0441\u0445\u0435\u043c\u044b.\n* `public`: \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `True`. \u0415\u0441\u043b\u0438 `True`, \u0441\u0445\u0435\u043c\u0430 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0431\u0435\u0437 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 `request` \u0432 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f.\n* `patterns`: \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `None`. \u0421\u043f\u0438\u0441\u043e\u043a URL, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u043f\u0440\u0438 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0441\u0445\u0435\u043c\u044b. \u0415\u0441\u043b\u0438 `None`, \u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f URL conf \u043f\u0440\u043e\u0435\u043a\u0442\u0430.\n* `generator_class`: \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `rest_framework.schemas.SchemaGenerator`. \u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0430 `SchemaGenerator`, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d \u0432 `SchemaView`.\n* `authentication_classes`: \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `api_settings.DEFAULT_AUTHENTICATION_CLASSES`. \u041c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0432 `SchemaView`.\n* `permission_classes`: \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `api_settings.DEFAULT_PERMISSION_CLASSES` \u041c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u0432 `SchemaView`.", "children": [{"children": [{"code": "title", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": ". May be used to provide a descriptive title for the schema definition.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "description", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": ". May be used to provide a description for the schema definition.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "schema_url", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": ". May be used to pass a canonical base URL for the schema.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "public", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": ". If ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": " schema is generated without a ", "block_type": "TextBlock"}, {"code": "request", "block_type": "CodeSpanBlock"}, {"text": " instance being passed to views.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "patterns", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": ". A list of URLs to inspect when generating the schema. If ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": " project's URL conf will be used.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "generator_class", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "rest_framework.schemas.SchemaGenerator", "block_type": "CodeSpanBlock"}, {"text": ". May be used to specify a ", "block_type": "TextBlock"}, {"code": "SchemaGenerator", "block_type": "CodeSpanBlock"}, {"text": " subclass to be passed to the ", "block_type": "TextBlock"}, {"code": "SchemaView", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "authentication_classes", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "api_settings.DEFAULT_AUTHENTICATION_CLASSES", "block_type": "CodeSpanBlock"}, {"text": ". May be used to pass custom authentication classes to the ", "block_type": "TextBlock"}, {"code": "SchemaView", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "permission_classes", "block_type": "CodeSpanBlock"}, {"text": ": Default ", "block_type": "TextBlock"}, {"code": "api_settings.DEFAULT_PERMISSION_CLASSES", "block_type": "CodeSpanBlock"}, {"text": " May be used to pass custom permission classes to the ", "block_type": "TextBlock"}, {"code": "SchemaView", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "### \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u0432 \u043a\u043e\u0434\u0430", "children": [{"text": "Customising code samples", "block_type": "TextBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "\u0412\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043f\u043e API \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u043a\u043e\u0434\u0430 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a API.", "children": [{"text": "The built-in API documentation includes automatically generated code samples for each of the available API client libraries.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u044d\u0442\u0438 \u043f\u0440\u0438\u043c\u0435\u0440\u044b, \u0441\u043e\u0437\u0434\u0430\u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441 `DocumentationRenderer`, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0432 `languages` \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u044f\u0437\u044b\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c:", "children": [{"text": "You may customise these samples by subclassing ", "block_type": "TextBlock"}, {"code": "DocumentationRenderer", "block_type": "CodeSpanBlock"}, {"text": ", setting ", "block_type": "TextBlock"}, {"code": "languages", "block_type": "CodeSpanBlock"}, {"text": " to the list of languages you wish to support:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "from rest_framework.renderers import DocumentationRenderer\n\n\nclass CustomRenderer(DocumentationRenderer):\n    languages = ['ruby', 'go']", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u044f\u0437\u044b\u043a\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d `intro`, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u043e\u043f\u0438\u0441\u0430\u043d\u044b \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u043f\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435 \u0438 \u0442.\u043f., \u0430 \u0442\u0430\u043a\u0436\u0435 \u043e\u0431\u0449\u0438\u0439 \u0448\u0430\u0431\u043b\u043e\u043d \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 API, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u0434\u0435\u0442\u0430\u043b\u044f\u043c\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u0432 [\u0448\u0430\u0431\u043b\u043e\u043d\u0430\u0445 \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c\u044b\u0445 \u044f\u0437\u044b\u043a\u043e\u0432](https://github.com/encode/django-rest-framework/tree/master/rest_framework/templates/rest_framework/docs/langs).", "children": [{"text": "For each language you need to provide an ", "block_type": "TextBlock"}, {"code": "intro", "block_type": "CodeSpanBlock"}, {"text": " template, detailing installation instructions and such, plus a generic template for making API requests, that can be filled with individual request details. See the ", "block_type": "TextBlock"}, {"children": [{"text": "templates for the bundled languages", "block_type": "TextBlock"}], "url": "https://github.com/encode/django-rest-framework/tree/master/rest_framework/templates/rest_framework/docs/langs", "title": null, "block_type": "LinkBlock"}, {"text": " for examples.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"block_type": "SeparatorBlock"}]}