{"source": "/home/ilyachch/Projects/OpenSource/django-rest-framework-rusdoc/.reference/quick-start/quickstart.md", "blocks": [{"translated_data": "# \u0411\u044b\u0441\u0442\u0440\u044b\u0439 \u0441\u0442\u0430\u0440\u0442", "children": [{"text": "Quickstart", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "\u041c\u044b \u0441\u043e\u0431\u0438\u0440\u0430\u0435\u043c\u0441\u044f \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 API, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c-\u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430\u043c \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u0438 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0438 \u0433\u0440\u0443\u043f\u043f\u044b \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435.", "children": [{"text": "We're going to create a simple API to allow admin users to view and edit the users and groups in the system.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u0430", "children": [{"text": "Project setup", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u043d\u043e\u0432\u044b\u0439 \u043f\u0440\u043e\u0435\u043a\u0442 Django \u043f\u043e\u0434 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c `tutorial`, \u0437\u0430\u0442\u0435\u043c \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u043d\u043e\u0432\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043f\u043e\u0434 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c `quickstart`.", "children": [{"text": "Create a new Django project named ", "block_type": "TextBlock"}, {"code": "tutorial", "block_type": "CodeSpanBlock"}, {"text": ", then start a new app called ", "block_type": "TextBlock"}, {"code": "quickstart", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "# Create the project directory\nmkdir tutorial\ncd tutorial\n\n# Create a virtual environment to isolate our package dependencies locally\npython3 -m venv env\nsource env/bin/activate  # On Windows use `env\\Scripts\\activate`\n\n# Install Django and Django REST framework into the virtual environment\npip install django\npip install djangorestframework\n\n# Set up a new project with a single application\ndjango-admin startproject tutorial .  # Note the trailing '.' character\ncd tutorial\ndjango-admin startapp quickstart\ncd ..", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0421\u0445\u0435\u043c\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c:", "children": [{"text": "The project layout should look like:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "$ pwd\n<some path>/tutorial\n$ find .\n.\n./tutorial\n./tutorial/asgi.py\n./tutorial/__init__.py\n./tutorial/quickstart\n./tutorial/quickstart/migrations\n./tutorial/quickstart/migrations/__init__.py\n./tutorial/quickstart/models.py\n./tutorial/quickstart/__init__.py\n./tutorial/quickstart/apps.py\n./tutorial/quickstart/admin.py\n./tutorial/quickstart/tests.py\n./tutorial/quickstart/views.py\n./tutorial/settings.py\n./tutorial/urls.py\n./tutorial/wsgi.py\n./env\n./env/...\n./manage.py", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041c\u043e\u0436\u0435\u0442 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u044c\u0441\u044f \u043d\u0435\u043e\u0431\u044b\u0447\u043d\u044b\u043c, \u0447\u0442\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0431\u044b\u043b\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043e \u0432 \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0430 \u0438\u043c\u0435\u043d \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0441\u0442\u043e\u043b\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0438\u043c\u0435\u043d \u0441 \u0432\u043d\u0435\u0448\u043d\u0438\u043c\u0438 \u043c\u043e\u0434\u0443\u043b\u044f\u043c\u0438 (\u044d\u0442\u0430 \u0442\u0435\u043c\u0430 \u0432\u044b\u0445\u043e\u0434\u0438\u0442 \u0437\u0430 \u0440\u0430\u043c\u043a\u0438 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u0440\u0430\u0442\u043a\u043e\u0433\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430).", "children": [{"text": "It may look unusual that the application has been created within the project directory. Using the project's namespace avoids name clashes with external modules (a topic that goes outside the scope of the quickstart).", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0422\u0435\u043f\u0435\u0440\u044c \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0430\u0448\u0443 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043f\u0435\u0440\u0432\u044b\u0439 \u0440\u0430\u0437:", "children": [{"text": "Now sync your database for the first time:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "python manage.py migrate", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041c\u044b \u0442\u0430\u043a\u0436\u0435 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441 \u0438\u043c\u0435\u043d\u0435\u043c `admin` \u0438 \u043f\u0430\u0440\u043e\u043b\u0435\u043c. \u041c\u044b \u0431\u0443\u0434\u0435\u043c \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0434 \u044d\u0442\u0438\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c \u043f\u043e\u0437\u0436\u0435 \u0432 \u043d\u0430\u0448\u0435\u043c \u043f\u0440\u0438\u043c\u0435\u0440\u0435.", "children": [{"text": "We'll also create an initial user named ", "block_type": "TextBlock"}, {"code": "admin", "block_type": "CodeSpanBlock"}, {"text": " with a password. We'll authenticate as that user later in our example.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "python manage.py createsuperuser --username admin --email admin@example.com", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u0432\u044b \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u043b\u0438 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 \u043a\u0430\u0442\u0430\u043b\u043e\u0433 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0438 \u043f\u0440\u0438\u0441\u0442\u0443\u043f\u0430\u0439\u0442\u0435 \u043a \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e...", "children": [{"text": "Once you've set up a database and the initial user is created and ready to go, open up the app's directory and we'll get coding...", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## \u0421\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u044b", "children": [{"text": "Serializers", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0421\u043d\u0430\u0447\u0430\u043b\u0430 \u043c\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u043c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u044b. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043d\u043e\u0432\u044b\u0439 \u043c\u043e\u0434\u0443\u043b\u044c `tutorial/quickstart/serializers.py`, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u044b \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445.", "children": [{"text": "First up we're going to define some serializers. Let's create a new module named ", "block_type": "TextBlock"}, {"code": "tutorial/quickstart/serializers.py", "block_type": "CodeSpanBlock"}, {"text": " that we'll use for our data representations.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "from django.contrib.auth.models import Group, User\nfrom rest_framework import serializers\n\n\nclass UserSerializer(serializers.HyperlinkedModelSerializer):\n    class Meta:\n        model = User\n        fields = ['url', 'username', 'email', 'groups']\n\n\nclass GroupSerializer(serializers.HyperlinkedModelSerializer):\n    class Meta:\n        model = Group\n        fields = ['url', 'name']", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u0433\u0438\u043f\u0435\u0440\u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e `HyperlinkedModelSerializer`. \u0412\u044b \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0432\u0438\u0447\u043d\u044b\u0439 \u043a\u043b\u044e\u0447 \u0438 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0434\u0440\u0443\u0433\u0438\u0435 \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f, \u043d\u043e \u0433\u0438\u043f\u0435\u0440\u0441\u0432\u044f\u0437\u044c - \u044d\u0442\u043e \u0445\u043e\u0440\u043e\u0448\u0438\u0439 \u0434\u0438\u0437\u0430\u0439\u043d RESTful.", "children": [{"text": "Notice that we're using hyperlinked relations in this case with ", "block_type": "TextBlock"}, {"code": "HyperlinkedModelSerializer", "block_type": "CodeSpanBlock"}, {"text": ". You can also use primary key and various other relationships, but hyperlinking is good RESTful design.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## Views", "children": [{"text": "Views", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0425\u043e\u0440\u043e\u0448\u043e, \u0442\u043e\u0433\u0434\u0430 \u043d\u0430\u043c \u043b\u0443\u0447\u0448\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043c\u043d\u0435\u043d\u0438\u0439. \u041e\u0442\u043a\u0440\u043e\u0439\u0442\u0435 `tutorial/quickstart/views.py` \u0438 \u043d\u0430\u0447\u043d\u0438\u0442\u0435 \u043f\u0435\u0447\u0430\u0442\u0430\u0442\u044c.", "children": [{"text": "Right, we'd better write some views then. Open ", "block_type": "TextBlock"}, {"code": "tutorial/quickstart/views.py", "block_type": "CodeSpanBlock"}, {"text": " and get typing.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "from django.contrib.auth.models import Group, User\nfrom rest_framework import permissions, viewsets\n\nfrom tutorial.quickstart.serializers import GroupSerializer, UserSerializer\n\n\nclass UserViewSet(viewsets.ModelViewSet):\n    \"\"\"\n    API endpoint that allows users to be viewed or edited.\n    \"\"\"\n    queryset = User.objects.all().order_by('-date_joined')\n    serializer_class = UserSerializer\n    permission_classes = [permissions.IsAuthenticated]\n\n\nclass GroupViewSet(viewsets.ModelViewSet):\n    \"\"\"\n    API endpoint that allows groups to be viewed or edited.\n    \"\"\"\n    queryset = Group.objects.all()\n    serializer_class = GroupSerializer\n    permission_classes = [permissions.IsAuthenticated]", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0412\u043c\u0435\u0441\u0442\u043e \u0442\u043e\u0433\u043e \u0447\u0442\u043e\u0431\u044b \u043f\u0438\u0441\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439, \u043c\u044b \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u043c \u0432\u0441\u0435 \u043e\u0431\u0449\u0435\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432 \u043a\u043b\u0430\u0441\u0441\u044b, \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u043c\u044b\u0435 `ViewSets`.", "children": [{"text": "Rather than write multiple views we're grouping together all the common behavior into classes called ", "block_type": "TextBlock"}, {"code": "ViewSets", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043b\u0435\u0433\u043a\u043e \u0440\u0430\u0437\u0431\u0438\u0442\u044c \u0438\u0445 \u043d\u0430 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0430\u0431\u043e\u0440\u043e\u0432 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0445\u043e\u0440\u043e\u0448\u043e \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0438\u043a\u0443 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0435\u0435 \u043e\u0447\u0435\u043d\u044c \u043b\u0430\u043a\u043e\u043d\u0438\u0447\u043d\u043e\u0439.", "children": [{"text": "We can easily break these down into individual views if we need to, but using viewsets keeps the view logic nicely organized as well as being very concise.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## URLs", "children": [{"text": "URLs", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0425\u043e\u0440\u043e\u0448\u043e, \u0442\u0435\u043f\u0435\u0440\u044c \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043c URL API. \u041f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u043a `tutorial/urls.py`...", "children": [{"text": "Okay, now let's wire up the API URLs. On to ", "block_type": "TextBlock"}, {"code": "tutorial/urls.py", "block_type": "CodeSpanBlock"}, {"text": "...", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "from django.urls import include, path\nfrom rest_framework import routers\n\nfrom tutorial.quickstart import views\n\nrouter = routers.DefaultRouter()\nrouter.register(r'users', views.UserViewSet)\nrouter.register(r'groups', views.GroupViewSet)\n\n# Wire up our API using automatic URL routing.\n# Additionally, we include login URLs for the browsable API.\nurlpatterns = [\n    path('', include(router.urls)),\n    path('api-auth/', include('rest_framework.urls', namespace='rest_framework'))\n]\n\nurlpatterns += router.urls", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043d\u0430\u0431\u043e\u0440\u044b \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u0432\u043c\u0435\u0441\u0442\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439, \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c URL conf \u0434\u043b\u044f \u043d\u0430\u0448\u0435\u0433\u043e API, \u043f\u0440\u043e\u0441\u0442\u043e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0432 \u043d\u0430\u0431\u043e\u0440\u044b \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u0432 \u043a\u043b\u0430\u0441\u0441\u0435 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0442\u043e\u0440\u0430.", "children": [{"text": "Because we're using viewsets instead of views, we can automatically generate the URL conf for our API, by simply registering the viewsets with a router class.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041e\u043f\u044f\u0442\u044c \u0436\u0435, \u0435\u0441\u043b\u0438 \u043d\u0430\u043c \u043d\u0443\u0436\u0435\u043d \u0431\u043e\u043b\u044c\u0448\u0438\u0439 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c \u043d\u0430\u0434 URL API, \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u0440\u043e\u0441\u0442\u043e \u043e\u043f\u0443\u0441\u0442\u0438\u0442\u044c\u0441\u044f \u0434\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u0431\u044b\u0447\u043d\u044b\u0445 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0438 \u044f\u0432\u043d\u043e\u0433\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u044f URL conf.", "children": [{"text": "Again, if we need more control over the API URLs we can simply drop down to using regular class-based views, and writing the URL conf explicitly.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041d\u0430\u043a\u043e\u043d\u0435\u0446, \u043c\u044b \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0432\u0445\u043e\u0434\u0430 \u0438 \u0432\u044b\u0445\u043e\u0434\u0430 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441 \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u043c\u044b\u043c API. \u042d\u0442\u043e \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e, \u043d\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u043e, \u0435\u0441\u043b\u0438 \u0432\u0430\u0448 API \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438, \u0430 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u043c\u044b\u0439 API.", "children": [{"text": "Finally, we're including default login and logout views for use with the browsable API. That's optional, but useful if your API requires authentication and you want to use the browsable API.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## \u041f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f", "children": [{"text": "Pagination", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044f \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u0430\u043c \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435. \u0427\u0442\u043e\u0431\u044b \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0435\u0435, \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432 `tutorial/settings.py`", "children": [{"text": "Pagination allows you to control how many objects per page are returned. To enable it add the following lines to ", "block_type": "TextBlock"}, {"code": "tutorial/settings.py", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"code": "REST_FRAMEWORK = {\n    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',\n    'PAGE_SIZE': 10\n}", "language": null, "block_type": "CodeBlock"}, {"translated_data": "## \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438", "children": [{"text": "Settings", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 `'rest_framework'` \u0432 `INSTALLED_APPS`. \u041c\u043e\u0434\u0443\u043b\u044c \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432 `tutorial/settings.py`.", "children": [{"text": "Add ", "block_type": "TextBlock"}, {"code": "'rest_framework'", "block_type": "CodeSpanBlock"}, {"text": " to ", "block_type": "TextBlock"}, {"code": "INSTALLED_APPS", "block_type": "CodeSpanBlock"}, {"text": ". The settings module will be in ", "block_type": "TextBlock"}, {"code": "tutorial/settings.py", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"code": "INSTALLED_APPS = [\n    ...\n    'rest_framework',\n]", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0425\u043e\u0440\u043e\u0448\u043e, \u043c\u044b \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u0438.", "children": [{"text": "Okay, we're done.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"block_type": "SeparatorBlock"}, {"translated_data": "## \u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0430\u0448\u0435\u0433\u043e API", "children": [{"text": "Testing our API", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0422\u0435\u043f\u0435\u0440\u044c \u043c\u044b \u0433\u043e\u0442\u043e\u0432\u044b \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u043d\u0430\u043c\u0438 API. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043c \u0441\u0435\u0440\u0432\u0435\u0440 \u0438\u0437 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438.", "children": [{"text": "We're now ready to test the API we've built. Let's fire up the server from the command line.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "python manage.py runserver", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0422\u0435\u043f\u0435\u0440\u044c \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u043d\u0430\u0448\u0435\u043c\u0443 API \u043a\u0430\u043a \u0438\u0437 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438, \u0442\u0430\u043a \u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0442\u0430\u043a\u0438\u0445 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u043e\u0432, \u043a\u0430\u043a `curl`...", "children": [{"text": "We can now access our API, both from the command-line, using tools like ", "block_type": "TextBlock"}, {"code": "curl", "block_type": "CodeSpanBlock"}, {"text": "...", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "bash: curl -u admin -H 'Accept: application/json; indent=4' http://127.0.0.1:8000/users/\nEnter host password for user 'admin':\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"url\": \"http://127.0.0.1:8000/users/1/\",\n            \"username\": \"admin\",\n            \"email\": \"admin@example.com\",\n            \"groups\": []\n        }\n    ]\n}", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0418\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f [httpie](https://httpie.io/docs#installation), \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438...", "children": [{"text": "Or using the ", "block_type": "TextBlock"}, {"children": [{"text": "httpie", "block_type": "TextBlock"}], "url": "https://httpie.io/docs#installation", "title": null, "block_type": "LinkBlock"}, {"text": ", command line tool...", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "bash: http -a admin http://127.0.0.1:8000/users/\nhttp: password for admin@127.0.0.1:8000::\n$HTTP/1.1 200 OK\n...\n{\n    \"count\": 1,\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"email\": \"admin@example.com\",\n            \"groups\": [],\n            \"url\": \"http://127.0.0.1:8000/users/1/\",\n            \"username\": \"admin\"\n        }\n    ]\n}", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0418\u043b\u0438 \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0447\u0435\u0440\u0435\u0437 \u0431\u0440\u0430\u0443\u0437\u0435\u0440, \u043f\u0435\u0440\u0435\u0439\u0434\u044f \u043f\u043e URL `http://127.0.0.1:8000/users/`...", "children": [{"text": "Or directly through the browser, by going to the URL ", "block_type": "TextBlock"}, {"code": "http://127.0.0.1:8000/users/", "block_type": "CodeSpanBlock"}, {"text": "...", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "![\u0418\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0431\u044b\u0441\u0442\u0440\u043e\u0433\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430](../img/quickstart.png)", "children": [{"url": "../img/quickstart.png", "alt": "Quick start image", "title": null, "block_type": "ImageBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0415\u0441\u043b\u0438 \u0432\u044b \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442\u0435 \u0447\u0435\u0440\u0435\u0437 \u0431\u0440\u0430\u0443\u0437\u0435\u0440, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0432\u043e\u0439\u0434\u0438\u0442\u0435 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0432 \u043f\u0440\u0430\u0432\u043e\u043c \u0432\u0435\u0440\u0445\u043d\u0435\u043c \u0443\u0433\u043b\u0443.", "children": [{"text": "If you're working through the browser, make sure to login using the control in the top right corner.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041e\u0442\u043b\u0438\u0447\u043d\u043e, \u044d\u0442\u043e \u0431\u044b\u043b\u043e \u043b\u0435\u0433\u043a\u043e!", "children": [{"text": "Great, that was easy!", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0431\u043e\u043b\u0435\u0435 \u0433\u043b\u0443\u0431\u043e\u043a\u043e\u0435 \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a REST-\u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0432\u043c\u0435\u0441\u0442\u0435, \u043f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u043a [\u0443\u0447\u0435\u0431\u043d\u0438\u043a\u0443](1-serialization.md) \u0438\u043b\u0438 \u043d\u0430\u0447\u043d\u0438\u0442\u0435 \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c [\u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e API](../api-guide/requests.md).", "children": [{"text": "If you want to get a more in depth understanding of how REST framework fits together head on over to ", "block_type": "TextBlock"}, {"children": [{"text": "the tutorial", "block_type": "TextBlock"}], "url": "1-serialization.md", "title": null, "block_type": "LinkBlock"}, {"text": ", or start browsing the ", "block_type": "TextBlock"}, {"children": [{"text": "API guide", "block_type": "TextBlock"}], "url": "../api-guide/requests.md", "title": null, "block_type": "LinkBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}]}