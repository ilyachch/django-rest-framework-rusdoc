{"source": "/home/ilyachch/Projects/OpenSource/django-rest-framework-rusdoc/.reference/api-navigation/fields.md", "blocks": [{"block_type": "SeparatorBlock"}, {"translated_data": "\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a:\n- fields.py", "children": [{"text": "source:\n    - fields.py", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# \u041f\u043e\u043b\u044f \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430", "children": [{"text": "Serializer fields", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "> \u041a\u0430\u0436\u0434\u043e\u0435 \u043f\u043e\u043b\u0435 \u0432 \u043a\u043b\u0430\u0441\u0441\u0435 \u0444\u043e\u0440\u043c\u044b \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0437\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0434\u0430\u043d\u043d\u044b\u0445, \u043d\u043e \u0438 \u0437\u0430 \u00ab\u043e\u0447\u0438\u0441\u0442\u043a\u0443\u00bb IT & mdash;\n\u041d\u043e\u0440\u043c\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0435\u0433\u043e \u0432 \u0441\u043e\u0433\u043b\u0430\u0441\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0435.\n>\n> & mdash;\n[\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f Django] (https://docs.djangoproject.com/en/stable/ref/forms/api/#django.forms.form.cleaned_data)", "children": [{"children": [{"text": "Each field in a Form class is responsible not only for validating data, but also for \"cleaning\" it &mdash; normalizing it to a consistent format.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"block_type": "NewlineBlock"}, {"children": [{"text": "&mdash; ", "block_type": "TextBlock"}, {"children": [{"text": "Django documentation", "block_type": "TextBlock"}], "url": "https://docs.djangoproject.com/en/stable/ref/forms/api/#django.forms.Form.cleaned_data", "title": null, "block_type": "LinkBlock"}], "block_type": "Paragraph"}], "block_type": "BlockQuote"}, {"translated_data": "\u041f\u043e\u043b\u044f \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u044e\u0442 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u043d\u044b\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u0438 \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u043c\u0438 \u0434\u0430\u0442\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n\u041e\u043d\u0438 \u0442\u0430\u043a\u0436\u0435 \u0438\u043c\u0435\u044e\u0442 \u0434\u0435\u043b\u043e \u0441 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435\u043c \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435\u043c \u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u043e\u0439 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0438\u0437 \u0441\u0432\u043e\u0438\u0445 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432.", "children": [{"text": "Serializer fields handle converting between primitive values and internal datatypes.  They also deal with validating input values, as well as retrieving and setting the values from their parent objects.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"block_type": "SeparatorBlock"}, {"translated_data": "** \u041f\u0420\u0418\u041c\u0415\u0427\u0410\u041d\u0418\u0415.", "children": [{"children": [{"text": "Note:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " The serializer fields are declared in ", "block_type": "TextBlock"}, {"code": "fields.py", "block_type": "CodeSpanBlock"}, {"text": ", but by convention you should import them using ", "block_type": "TextBlock"}, {"code": "from rest_framework import serializers", "block_type": "CodeSpanBlock"}, {"text": " and refer to fields as ", "block_type": "TextBlock"}, {"code": "serializers.<FieldName>", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"block_type": "SeparatorBlock"}, {"translated_data": "## \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b", "children": [{"text": "Core arguments", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041a\u0430\u0436\u0434\u044b\u0439 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440 \u043a\u043b\u0430\u0441\u0441\u0430 \u043f\u043e\u043b\u044f \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c \u044d\u0442\u0438 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b.\n\u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u043b\u0435\u0432\u044b\u0435 \u043a\u043b\u0430\u0441\u0441\u044b \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u044e\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435, \u0441\u043f\u0435\u0446\u0438\u0444\u0438\u0447\u043d\u044b\u0435 \u0434\u043b\u044f \u043f\u043e\u043b\u044f \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b, \u043d\u043e \u0432\u0441\u0435\u0433\u0434\u0430 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435:", "children": [{"text": "Each serializer field class constructor takes at least these arguments.  Some Field classes take additional, field-specific arguments, but the following should always be accepted:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "### `read_only`", "children": [{"code": "read_only", "block_type": "CodeSpanBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u043e\u043b\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u044b \u0432 \u0432\u044b\u0432\u043e\u0434 API, \u043d\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u044b \u0432 \u0432\u0445\u043e\u0434 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438\u043b\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f.\n\u041b\u044e\u0431\u044b\u0435 \u043f\u043e\u043b\u044f \u00abread_only\u00bb, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u044b \u0432 \u0432\u0445\u043e\u0434 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430, \u0431\u0443\u0434\u0443\u0442 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f.", "children": [{"text": "Read-only fields are included in the API output, but should not be included in the input during create or update operations. Any 'read_only' fields that are incorrectly included in the serializer input will be ignored.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u044d\u0442\u043e \u043d\u0430 \u00abtrue\u00bb, \u0447\u0442\u043e\u0431\u044b \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u043f\u043e\u043b\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u043d\u043e \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0438\u043b\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0438 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0434\u0435\u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438.", "children": [{"text": "Set this to ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": " to ensure that the field is used when serializing a representation, but is not used when creating or updating an instance during deserialization.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u00ab\u043b\u043e\u0436\u044c\u00bb", "children": [{"text": "Defaults to ", "block_type": "TextBlock"}, {"code": "False", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "### `write_only`", "children": [{"code": "write_only", "block_type": "CodeSpanBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u044d\u0442\u043e \u043d\u0430 `true`, \u0447\u0442\u043e\u0431\u044b \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u043f\u043e\u043b\u0435 \u043c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u0440\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0438 \u0438\u043b\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430, \u043d\u043e \u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u043e \u043f\u0440\u0438 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f.", "children": [{"text": "Set this to ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": " to ensure that the field may be used when updating or creating an instance, but is not included when serializing the representation.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u00ab\u043b\u043e\u0436\u044c\u00bb", "children": [{"text": "Defaults to ", "block_type": "TextBlock"}, {"code": "False", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "### `\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439", "children": [{"code": "required", "block_type": "CodeSpanBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "\u041e\u0431\u044b\u0447\u043d\u043e \u043e\u0448\u0438\u0431\u043a\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d\u0430, \u0435\u0441\u043b\u0438 \u043f\u043e\u043b\u0435 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0434\u0435\u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438.\n\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 FALSE, \u0435\u0441\u043b\u0438 \u044d\u0442\u043e \u043f\u043e\u043b\u0435 \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0434\u0435\u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438.", "children": [{"text": "Normally an error will be raised if a field is not supplied during deserialization.\nSet to false if this field is not required to be present during deserialization.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u044d\u0442\u043e\u0433\u043e \u043d\u0430 `false` \u0442\u0430\u043a\u0436\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0438\u043b\u0438 \u043a\u043b\u0430\u0432\u0438\u0448\u0430 \u0441\u043b\u043e\u0432\u0430\u0440\u044f \u0431\u044b\u0442\u044c \u043e\u043f\u0443\u0449\u0435\u043d\u044b \u0438\u0437 \u0432\u044b\u0432\u043e\u0434\u0430 \u043f\u0440\u0438 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430.\n\u0415\u0441\u043b\u0438 \u043a\u043b\u044e\u0447 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442, \u043e\u043d \u043f\u0440\u043e\u0441\u0442\u043e \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0432\u043a\u043b\u044e\u0447\u0435\u043d \u0432 \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435.", "children": [{"text": "Setting this to ", "block_type": "TextBlock"}, {"code": "False", "block_type": "CodeSpanBlock"}, {"text": " also allows the object attribute or dictionary key to be omitted from output when serializing the instance. If the key is not present it will simply not be included in the output representation.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u00ab\u0438\u0441\u0442\u0438\u043d\u043d\u043e\u00bb.\n\u0415\u0441\u043b\u0438 \u0432\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435 [Model Serializer] (https://www.django-rest-framework.org/api-guide/serializers/#modelserializer) \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0431\u0443\u0434\u0435\u0442 `false`, \u0435\u0441\u043b\u0438 \u0432\u044b \u0443\u043a\u0430\u0437\u0430\u043b\u0438` blank = true\n`default` \u0438\u043b\u0438` null = true` \u0432 \u0432\u0430\u0448\u0435\u043c \u043f\u043e\u043b\u0435 \u0432 \u0432\u0430\u0448\u0435\u043c `model '.", "children": [{"text": "Defaults to ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": ". If you're using ", "block_type": "TextBlock"}, {"children": [{"text": "Model Serializer", "block_type": "TextBlock"}], "url": "https://www.django-rest-framework.org/api-guide/serializers/#modelserializer", "title": null, "block_type": "LinkBlock"}, {"text": " default value will be ", "block_type": "TextBlock"}, {"code": "False", "block_type": "CodeSpanBlock"}, {"text": " if you have specified ", "block_type": "TextBlock"}, {"code": "blank=True", "block_type": "CodeSpanBlock"}, {"text": " or ", "block_type": "TextBlock"}, {"code": "default", "block_type": "CodeSpanBlock"}, {"text": " or ", "block_type": "TextBlock"}, {"code": "null=True", "block_type": "CodeSpanBlock"}, {"text": " at your field in your ", "block_type": "TextBlock"}, {"code": "Model", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "### `default`", "children": [{"code": "default", "block_type": "CodeSpanBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "\u0415\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e, \u044d\u0442\u043e \u0434\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u043f\u043e\u043b\u044f, \u0435\u0441\u043b\u0438 \u0432\u0445\u043e\u0434\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043e.\n\u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u0432\u043e\u043e\u0431\u0449\u0435 \u043d\u0435 \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0430\u0442\u0440\u0438\u0431\u0443\u0442 \u0432\u043e\u043e\u0431\u0449\u0435.", "children": [{"text": "If set, this gives the default value that will be used for the field if no input value is supplied. If not set the default behaviour is to not populate the attribute at all.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u00ab\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e\u00bb \u043d\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 \u0441 \u0447\u0430\u0441\u0442\u0438\u0447\u043d\u044b\u043c \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435\u043c.\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0447\u0430\u0441\u0442\u0438\u0447\u043d\u043e\u0433\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u044f, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0432 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445, \u0431\u0443\u0434\u0443\u0442 \u0438\u043c\u0435\u0442\u044c \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.", "children": [{"text": "The ", "block_type": "TextBlock"}, {"code": "default", "block_type": "CodeSpanBlock"}, {"text": " is not applied during partial update operations. In the partial update case only fields that are provided in the incoming data will have a validated value returned.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u043d\u0430 \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u0443\u044e \u0432\u044b\u0437\u043e\u0432, \u0438 \u0432 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u043a\u0430\u0436\u0434\u044b\u0439 \u0440\u0430\u0437, \u043a\u043e\u0433\u0434\u0430 \u043e\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f.\n\u041f\u0440\u0438 \u0432\u044b\u0437\u043e\u0432\u0435 \u043e\u043d \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432.\n\u0415\u0441\u043b\u0438 Callable \u0438\u043c\u0435\u0435\u0442 \u0430\u0442\u0440\u0438\u0431\u0443\u0442 `tress_context = true`, \u0442\u043e \u043f\u043e\u043b\u0435 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430 \u0431\u0443\u0434\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430.", "children": [{"text": "May be set to a function or other callable, in which case the value will be evaluated each time it is used. When called, it will receive no arguments. If the callable has a ", "block_type": "TextBlock"}, {"code": "requires_context = True", "block_type": "CodeSpanBlock"}, {"text": " attribute, then the serializer field will be passed as an argument.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:", "children": [{"text": "For example:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "class CurrentUserDefault:\n    \"\"\"\n    May be applied as a `default=...` value on a serializer field.\n    Returns the current user.\n    \"\"\"\n    requires_context = True\n\n    def __call__(self, serializer_field):\n        return serializer_field.context['request'].user", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041f\u0440\u0438 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u0435\u0441\u043b\u0438 \u0430\u0442\u0440\u0438\u0431\u0443\u0442 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0438\u043b\u0438 \u043a\u043b\u0430\u0432\u0438\u0448\u0430 \u0441\u043b\u043e\u0432\u0430\u0440\u044f \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0432 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0435.", "children": [{"text": "When serializing the instance, default will be used if the object attribute or dictionary key is not present in the instance.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u00ab\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e\u00bb \u043f\u043e\u0434\u0440\u0430\u0437\u0443\u043c\u0435\u0432\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u043e\u043b\u0435 \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f.\n\u0412\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a\u0430\u043a \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0441\u043b\u043e\u0432 \u043a\u0430\u043a `default, \u0442\u0430\u043a \u0438` `\u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f`, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0438 \u0432\u044b\u043d\u0435\u0441\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0443.", "children": [{"text": "Note that setting a ", "block_type": "TextBlock"}, {"code": "default", "block_type": "CodeSpanBlock"}, {"text": " value implies that the field is not required. Including both the ", "block_type": "TextBlock"}, {"code": "default", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "required", "block_type": "CodeSpanBlock"}, {"text": " keyword arguments is invalid and will raise an error.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "### `allow_null`", "children": [{"code": "allow_null", "block_type": "CodeSpanBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "\u041e\u0431\u044b\u0447\u043d\u043e \u043e\u0448\u0438\u0431\u043a\u0430 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d\u0430, \u0435\u0441\u043b\u0438 `none` \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442\u0441\u044f \u0432 \u043f\u043e\u043b\u0435 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430.\n\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u044d\u0442\u043e\u0442 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 \u0432 `true`, \u0435\u0441\u043b\u0438` none `\u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0441\u0447\u0438\u0442\u0430\u0442\u044c \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c.", "children": [{"text": "Normally an error will be raised if ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": " is passed to a serializer field. Set this keyword argument to ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": " if ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": " should be considered a valid value.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0431\u0435\u0437 \u044f\u0432\u043d\u043e\u0433\u043e \u00ab\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e\u00bb \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u044d\u0442\u043e\u0433\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430 \u043d\u0430 `true` \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u0434\u0440\u0430\u0437\u0443\u043c\u0435\u0432\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u00ab \u0434\u0435\u0444\u043e\u043b\u0442 \u00bb` null` \u0434\u043b\u044f \u0432\u044b\u0432\u043e\u0434\u0430 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438, \u043d\u043e \u043d\u0435 \u043f\u043e\u0434\u0440\u0430\u0437\u0443\u043c\u0435\u0432\u0430\u0435\u0442 \u0434\u0435\u0444\u043e\u043b\u0442 \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u043d\u043e\u0439 \u0434\u0435\u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438.", "children": [{"text": "Note that, without an explicit ", "block_type": "TextBlock"}, {"code": "default", "block_type": "CodeSpanBlock"}, {"text": ", setting this argument to ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": " will imply a ", "block_type": "TextBlock"}, {"code": "default", "block_type": "CodeSpanBlock"}, {"text": " value of ", "block_type": "TextBlock"}, {"code": "null", "block_type": "CodeSpanBlock"}, {"text": " for serialization output, but does not imply a default for input deserialization.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u00ab\u043b\u043e\u0436\u044c\u00bb", "children": [{"text": "Defaults to ", "block_type": "TextBlock"}, {"code": "False", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "### `source`", "children": [{"code": "source", "block_type": "CodeSpanBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044f.\n\u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043c\u0435\u0442\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u00ab\u0441\u0430\u043c\u043e\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u00bb, \u0442\u0430\u043a\u043e\u0439 \u043a\u0430\u043a `urlfield (source = 'get_absolute_url')`, \u0438\u043b\u0438 \u043c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u0443\u043d\u043a\u0442\u0438\u0440\u043d\u0443\u044e \u043d\u043e\u0442\u0430\u0446\u0438\u044e \u0434\u043b\u044f \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 Traverse, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a `emailfield (source = 'user.email')`.", "children": [{"text": "The name of the attribute that will be used to populate the field.  May be a method that only takes a ", "block_type": "TextBlock"}, {"code": "self", "block_type": "CodeSpanBlock"}, {"text": " argument, such as ", "block_type": "TextBlock"}, {"code": "URLField(source='get_absolute_url')", "block_type": "CodeSpanBlock"}, {"text": ", or may use dotted notation to traverse attributes, such as ", "block_type": "TextBlock"}, {"code": "EmailField(source='user.email')", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u0440\u0438 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u0435\u0439 \u0441 \u043f\u0443\u043d\u043a\u0442\u0438\u0440\u043d\u043e\u0439 \u043d\u043e\u0442\u0430\u0446\u0438\u0435\u0439 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u00ab\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e\u00bb, \u0435\u0441\u043b\u0438 \u043a\u0430\u043a\u043e\u0439 -\u043b\u0438\u0431\u043e \u043e\u0431\u044a\u0435\u043a\u0442 \u043d\u0435 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0438\u043b\u0438 \u043d\u0435 \u043f\u0443\u0441\u0442 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u043e\u0431\u0445\u043e\u0434\u0430 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430.\n\u041e\u0441\u0442\u0435\u0440\u0435\u0433\u0430\u0439\u0442\u0435\u0441\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u0437\u0430\u0434\u0430\u0447 n+1 \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430, \u0435\u0441\u043b\u0438 \u0432\u044b \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442\u0435\u0441\u044c \u043a \u0440\u0435\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 ORM.\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:", "children": [{"text": "When serializing fields with dotted notation, it may be necessary to provide a ", "block_type": "TextBlock"}, {"code": "default", "block_type": "CodeSpanBlock"}, {"text": " value if any object is not present or is empty during attribute traversal. Beware of possible n+1 problems when using source attribute if you are accessing a relational orm model. For example:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "class CommentSerializer(serializers.Serializer):\n    email = serializers.EmailField(source=\"user.email\")", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u0431\u044b\u043b \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445, \u043a\u043e\u0433\u0434\u0430 \u043e\u043d \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u043d.\n\u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u043d\u0435 \u043d\u0443\u0436\u043d\u043e, \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043c\u0435\u0442\u043e\u0434\u044b `prefetch_related` \u0438` select_related` \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e.\n\u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043c\u0435\u0442\u043e\u0434\u0430\u0445 \u0441\u043c.", "children": [{"text": "would require user object to be fetched from database when it is not prefetched. If that is not wanted, be sure to be using ", "block_type": "TextBlock"}, {"code": "prefetch_related", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "select_related", "block_type": "CodeSpanBlock"}, {"text": " methods appropriately. For more information about the methods refer to ", "block_type": "TextBlock"}, {"children": [{"text": "django documentation", "block_type": "TextBlock"}], "url": "https://docs.djangoproject.com/en/3.1/ref/models/querysets/#django.db.models.query.QuerySet.select_related", "title": null, "block_type": "LinkBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `source = '*'` \u0438\u043c\u0435\u0435\u0442 \u043e\u0441\u043e\u0431\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f, \u0447\u0442\u043e\u0431\u044b \u0443\u043a\u0430\u0437\u0430\u0442\u044c, \u0447\u0442\u043e \u0432\u0435\u0441\u044c \u043e\u0431\u044a\u0435\u043a\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u043d \u0432 \u043f\u043e\u043b\u0435.\n\u042d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u043b\u0435\u0437\u043d\u043e \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u0438\u043b\u0438 \u0434\u043b\u044f \u043f\u043e\u043b\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0442\u0440\u0435\u0431\u0443\u044e\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u043f\u043e\u043b\u043d\u043e\u043c\u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u0443, \u0447\u0442\u043e\u0431\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435.", "children": [{"text": "The value ", "block_type": "TextBlock"}, {"code": "source='*'", "block_type": "CodeSpanBlock"}, {"text": " has a special meaning, and is used to indicate that the entire object should be passed through to the field.  This can be useful for creating nested representations, or for fields which require access to the complete object in order to determine the output representation.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043d\u0430 \u0438\u043c\u044f \u043f\u043e\u043b\u044f.", "children": [{"text": "Defaults to the name of the field.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "### `validators`", "children": [{"code": "validators", "block_type": "CodeSpanBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "\u0421\u043f\u0438\u0441\u043e\u043a \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0432\u0430\u043b\u0438\u0434\u0430\u0442\u043e\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f \u043a \u0432\u0445\u043e\u0434\u0443 \u0432\u0445\u043e\u0434\u044f\u0449\u0435\u0433\u043e \u043f\u043e\u043b\u044f \u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043b\u0438\u0431\u043e \u0432\u044b\u0437\u044b\u0432\u0430\u044e\u0442 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438, \u043b\u0438\u0431\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442\u0441\u044f.\n\u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0442\u043e\u0440\u0430, \u043a\u0430\u043a \u043f\u0440\u0430\u0432\u0438\u043b\u043e, \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u043e\u0432\u044b\u0448\u0430\u0442\u044c `serializers.validationError`, \u043d\u043e \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0439 Django\u00ab ValidationError \u00bb\u0442\u0430\u043a\u0436\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u0438 \u0441 \u0432\u0430\u043b\u0438\u0434\u0430\u0442\u043e\u0440\u0430\u043c\u0438, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c\u0438 \u0432 \u043a\u043e\u0434\u043e\u0432\u043e\u0439 \u0431\u0430\u0437\u0435 Django \u0438\u043b\u0438 \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0445 \u043f\u0430\u043a\u0435\u0442\u0430\u0445 Django.", "children": [{"text": "A list of validator functions which should be applied to the incoming field input, and which either raise a validation error or simply return. Validator functions should typically raise ", "block_type": "TextBlock"}, {"code": "serializers.ValidationError", "block_type": "CodeSpanBlock"}, {"text": ", but Django's built-in ", "block_type": "TextBlock"}, {"code": "ValidationError", "block_type": "CodeSpanBlock"}, {"text": " is also supported for compatibility with validators defined in the Django codebase or third party Django packages.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "### `error_messages`", "children": [{"code": "error_messages", "block_type": "CodeSpanBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "\u0421\u043b\u043e\u0432\u0430\u0440\u044c \u043a\u043e\u0434\u043e\u0432 \u043e\u0448\u0438\u0431\u043e\u043a \u0432 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\u0445 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0430\u0445.", "children": [{"text": "A dictionary of error codes to error messages.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "### `label`", "children": [{"code": "label", "block_type": "CodeSpanBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "\u041a\u043e\u0440\u043e\u0442\u043a\u0430\u044f \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0438\u043c\u0435\u043d\u0438 \u043f\u043e\u043b\u044f \u0432 \u043f\u043e\u043b\u0435\u0432\u044b\u0445 \u043f\u043e\u043b\u044f\u0445 HTML \u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u043e\u043f\u0438\u0441\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u0445.", "children": [{"text": "A short text string that may be used as the name of the field in HTML form fields or other descriptive elements.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "### `help_text`", "children": [{"code": "help_text", "block_type": "CodeSpanBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "\u0422\u0435\u043a\u0441\u0442\u043e\u0432\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043f\u043e\u043b\u044f \u0432 \u043f\u043e\u043b\u0435\u0432\u044b\u0445 \u043f\u043e\u043b\u044f\u0445 HTML \u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u043e\u043f\u0438\u0441\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.", "children": [{"text": "A text string that may be used as a description of the field in HTML form fields or other descriptive elements.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "### `initial`", "children": [{"code": "initial", "block_type": "CodeSpanBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u0435\u0439 \u0444\u043e\u0440\u043c\u044b HTML.\n\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0435\u043c\u0443 \u043f\u0440\u0438\u0437\u044b\u0432, \u0442\u0430\u043a \u0436\u0435 \u043a\u0430\u043a\n\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u0435\u043b\u0430\u0442\u044c \u0441 \u043b\u044e\u0431\u044b\u043c \u043e\u0431\u044b\u0447\u043d\u044b\u043c Django `field`:", "children": [{"text": "A value that should be used for pre-populating the value of HTML form fields. You may pass a callable to it, just as\nyou may do with any regular Django ", "block_type": "TextBlock"}, {"code": "Field", "block_type": "CodeSpanBlock"}, {"text": ":", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "import datetime\nfrom rest_framework import serializers\nclass ExampleSerializer(serializers.Serializer):\n    day = serializers.DateField(initial=datetime.date.today)", "language": null, "block_type": "CodeBlock"}, {"translated_data": "### `style`", "children": [{"code": "style", "block_type": "CodeSpanBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "\u0421\u043b\u043e\u0432\u0430\u0440\u044c \u043f\u0430\u0440 \u043a\u043b\u0430\u0432\u0438\u0448\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044f \u0442\u043e\u0433\u043e, \u043a\u0430\u043a \u0440\u0435\u043d\u0434\u0435\u0440\u0438\u043d\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c \u043f\u043e\u043b\u0435.", "children": [{"text": "A dictionary of key-value pairs that can be used to control how renderers should render the field.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0414\u0432\u0430 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u0437\u0434\u0435\u0441\u044c \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f `input_type'` \u0438` 'base_template'::", "children": [{"text": "Two examples here are ", "block_type": "TextBlock"}, {"code": "'input_type'", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "'base_template'", "block_type": "CodeSpanBlock"}, {"text": ":", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "# Use <input type=\"password\"> for the input.\npassword = serializers.CharField(\n    style={'input_type': 'password'}\n)\n\n# Use a radio input instead of a select input.\ncolor_channel = serializers.ChoiceField(\n    choices=['red', 'green', 'blue'],\n    style={'base_template': 'radio.html'}\n)", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0431\u043e\u043b\u0435\u0435 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u0441\u043c. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e [HTML & Forms] (../ \u0422\u0435\u043c\u044b/html-and-forms.md).", "children": [{"text": "For more details see the ", "block_type": "TextBlock"}, {"children": [{"text": "HTML & Forms", "block_type": "TextBlock"}], "url": "../topics/html-and-forms.md", "title": null, "block_type": "LinkBlock"}, {"text": " documentation.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# \u041b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043f\u043e\u043b\u044f", "children": [{"text": "Boolean fields", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "## Booleanfield", "children": [{"text": "BooleanField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435.", "children": [{"text": "A boolean representation.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c\u043e\u0439 HTML -\u0432\u0445\u043e\u0434\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u044b. \u0418\u043c\u0435\u0439\u0442\u0435 \u0432 \u0432\u0438\u0434\u0443, \u0447\u0442\u043e \u043f\u0440\u043e\u043f\u0443\u0449\u0435\u043d\u0438\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0433\u0434\u0430 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u043a\u0430\u043a \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043f\u043e\u043b\u044f \u0434\u043b\u044f `false`, \u0434\u0430\u0436\u0435 \u0435\u0441\u043b\u0438 \u043e\u043d\u043e \u0438\u043c\u0435\u0435\u0442 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u043e\u043f\u0446\u0438\u044e` default = true`.\n\u042d\u0442\u043e \u0441\u0432\u044f\u0437\u0430\u043d\u043e \u0441 \u0442\u0435\u043c, \u0447\u0442\u043e \u0432\u0445\u043e\u0434\u044b \u0444\u043b\u0430\u0436\u043a\u043e\u0432 HTML \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0441\u043e\u0431\u043e\u0439 \u043d\u0435\u0432\u0435\u0440\u043d\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435, \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 REST \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u0442 \u0443\u043f\u0443\u0449\u0435\u043d\u0438\u0435, \u043a\u0430\u043a \u0431\u0443\u0434\u0442\u043e \u044d\u0442\u043e \u043f\u0443\u0441\u0442\u043e\u0439 \u0432\u0445\u043e\u0434 \u0444\u043b\u0430\u0436\u043e\u043a.", "children": [{"text": "When using HTML encoded form input be aware that omitting a value will always be treated as setting a field to ", "block_type": "TextBlock"}, {"code": "False", "block_type": "CodeSpanBlock"}, {"text": ", even if it has a ", "block_type": "TextBlock"}, {"code": "default=True", "block_type": "CodeSpanBlock"}, {"text": " option specified. This is because HTML checkbox inputs represent the unchecked state by omitting the value, so REST framework treats omission as if it is an empty checkbox input.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e Django 2.1 \u0443\u0434\u0430\u043b\u0438\u043b `blank` kwarg \u0438\u0437` models.booleanfield`.\n\u0414\u043e Django 2.1 `models.booleanfield` \u041f\u043e\u043b\u044f \u0432\u0441\u0435\u0433\u0434\u0430 \u0431\u044b\u043b\u0438` blank = true`.\n\u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c\n\u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 Django 2.1 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `serializers.booleanfield '\u0431\u0443\u0434\u0443\u0442 \u0441\u043e\u0437\u0434\u0430\u043d\u044b \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u044b\n\u0411\u0435\u0437 `rekecle` kwarg (\u0442.\u0435. \u044d\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442 `required = true`), \u0442\u043e\u0433\u0434\u0430 \u043a\u0430\u043a \u0441\n\u041f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0435 \u0432\u0435\u0440\u0441\u0438\u0438 Django, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `booleanfield '\u0431\u0443\u0434\u0443\u0442 \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b\n\u0441 \u043e\u043f\u0446\u0438\u0435\u0439 `required = false.\n\u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432\u0440\u0443\u0447\u043d\u0443\u044e,\n\u044f\u0432\u043d\u043e \u043e\u0431\u044a\u044f\u0432\u0438\u0442\u0435 \u00abBooleanfield\u00bb \u043d\u0430 \u043a\u043b\u0430\u0441\u0441\u0435 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430 \u0438\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435\n`exuction_kwargs` \u043e\u043f\u0446\u0438\u044f, \u0447\u0442\u043e\u0431\u044b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0444\u043b\u0430\u0433` required`.", "children": [{"text": "Note that Django 2.1 removed the ", "block_type": "TextBlock"}, {"code": "blank", "block_type": "CodeSpanBlock"}, {"text": " kwarg from ", "block_type": "TextBlock"}, {"code": "models.BooleanField", "block_type": "CodeSpanBlock"}, {"text": ".\nPrior to Django 2.1 ", "block_type": "TextBlock"}, {"code": "models.BooleanField", "block_type": "CodeSpanBlock"}, {"text": " fields were always ", "block_type": "TextBlock"}, {"code": "blank=True", "block_type": "CodeSpanBlock"}, {"text": ". Thus\nsince Django 2.1 default ", "block_type": "TextBlock"}, {"code": "serializers.BooleanField", "block_type": "CodeSpanBlock"}, {"text": " instances will be generated\nwithout the ", "block_type": "TextBlock"}, {"code": "required", "block_type": "CodeSpanBlock"}, {"text": " kwarg (i.e. equivalent to ", "block_type": "TextBlock"}, {"code": "required=True", "block_type": "CodeSpanBlock"}, {"text": ") whereas with\nprevious versions of Django, default ", "block_type": "TextBlock"}, {"code": "BooleanField", "block_type": "CodeSpanBlock"}, {"text": " instances will be generated\nwith a ", "block_type": "TextBlock"}, {"code": "required=False", "block_type": "CodeSpanBlock"}, {"text": " option.  If you want to control this behaviour manually,\nexplicitly declare the ", "block_type": "TextBlock"}, {"code": "BooleanField", "block_type": "CodeSpanBlock"}, {"text": " on the serializer class, or use the\n", "block_type": "TextBlock"}, {"code": "extra_kwargs", "block_type": "CodeSpanBlock"}, {"text": " option to set the ", "block_type": "TextBlock"}, {"code": "required", "block_type": "CodeSpanBlock"}, {"text": " flag.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 `django.db.models.fields.booleanfield`.", "children": [{"text": "Corresponds to ", "block_type": "TextBlock"}, {"code": "django.db.models.fields.BooleanField", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c: ** `booleanfield ()`", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "BooleanField()", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# \u0421\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0435 \u043f\u043e\u043b\u044f", "children": [{"text": "String fields", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "## \u0427\u0430\u0440\u0444\u0438\u043b\u0434", "children": [{"text": "CharField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0422\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435.\n\u041f\u0440\u0438 \u0436\u0435\u043b\u0430\u043d\u0438\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0442\u0435\u043a\u0441\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u043a\u043e\u0440\u043e\u0447\u0435, \u0447\u0435\u043c `max_length` \u0438 \u0434\u043b\u0438\u043d\u043d\u0435\u0435, \u0447\u0435\u043c` min_length`.", "children": [{"text": "A text representation. Optionally validates the text to be shorter than ", "block_type": "TextBlock"}, {"code": "max_length", "block_type": "CodeSpanBlock"}, {"text": " and longer than ", "block_type": "TextBlock"}, {"code": "min_length", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 `django.db.models.fields.charfield` \u0438\u043b\u0438` django.db.models.fields.textfield`.", "children": [{"text": "Corresponds to ", "block_type": "TextBlock"}, {"code": "django.db.models.fields.CharField", "block_type": "CodeSpanBlock"}, {"text": " or ", "block_type": "TextBlock"}, {"code": "django.db.models.fields.TextField", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c: ** `charfield (max_length = none, min_length = none, alluct_blank = false, trim_whitespace = true)`", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "CharField(max_length=None, min_length=None, allow_blank=False, trim_whitespace=True)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `max_length` - \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442, \u0447\u0442\u043e \u0432\u0432\u043e\u0434 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0435 \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u044d\u0442\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.\n* `min_length` - \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442, \u0447\u0442\u043e \u0432\u0445\u043e\u0434 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0435 \u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \u044d\u0442\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432.\n* `allow_blank` - \u0435\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0432` true`, \u0442\u043e \u043f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u0447\u0438\u0442\u0430\u0442\u044c\u0441\u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c.\n\u0415\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430 `false`, \u0442\u043e \u043f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438 \u0432\u044b\u043d\u0435\u0441\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u00ab\u043b\u043e\u0436\u044c\u00bb.\n* `trim_whitespace` - \u0435\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u043d\u0430` true`, \u0442\u043e \u0432\u0435\u0434\u0443\u0449\u0438\u0439 \u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u043f\u0440\u043e\u0431\u0435\u043b \u043e\u0431\u0440\u0435\u0437\u0430\u043d.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u00ab\u0438\u0441\u0442\u0438\u043d\u043d\u043e\u00bb.", "children": [{"children": [{"code": "max_length", "block_type": "CodeSpanBlock"}, {"text": " - Validates that the input contains no more than this number of characters.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "min_length", "block_type": "CodeSpanBlock"}, {"text": " - Validates that the input contains no fewer than this number of characters.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "allow_blank", "block_type": "CodeSpanBlock"}, {"text": " - If set to ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": " then the empty string should be considered a valid value. If set to ", "block_type": "TextBlock"}, {"code": "False", "block_type": "CodeSpanBlock"}, {"text": " then the empty string is considered invalid and will raise a validation error. Defaults to ", "block_type": "TextBlock"}, {"code": "False", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "trim_whitespace", "block_type": "CodeSpanBlock"}, {"text": " - If set to ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": " then leading and trailing whitespace is trimmed. Defaults to ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "\u041e\u043f\u0446\u0438\u044f `alluct_null` \u0442\u0430\u043a\u0436\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u0435\u0439, \u0445\u043e\u0442\u044f \u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u0432 \u043f\u043e\u043b\u044c\u0437\u0443` alluct_blank`.\n\u041e\u0431\u0440\u0430\u0442\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043a\u0430\u043a `alluct_blank = true`, \u0442\u0430\u043a \u0438` alluct_null = true`, \u043d\u043e \u044d\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0431\u0443\u0434\u0443\u0442 \u0438\u043c\u0435\u0442\u044c \u0434\u0432\u0430 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0442\u0438\u043f\u0430 \u043f\u0443\u0441\u0442\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0445 \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u0441\u0442\u0440\u043e\u043a, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043d\u0435\u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f\u043c \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0442\u043e\u043d\u043a\u0438\u043c \u043e\u0448\u0438\u0431\u043a\u0430\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.", "children": [{"text": "The ", "block_type": "TextBlock"}, {"code": "allow_null", "block_type": "CodeSpanBlock"}, {"text": " option is also available for string fields, although its usage is discouraged in favor of ", "block_type": "TextBlock"}, {"code": "allow_blank", "block_type": "CodeSpanBlock"}, {"text": ". It is valid to set both ", "block_type": "TextBlock"}, {"code": "allow_blank=True", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "allow_null=True", "block_type": "CodeSpanBlock"}, {"text": ", but doing so means that there will be two differing types of empty value permissible for string representations, which can lead to data inconsistencies and subtle application bugs.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## emailfield", "children": [{"text": "EmailField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0422\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435, \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442 \u0442\u0435\u043a\u0441\u0442 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0430\u0434\u0440\u0435\u0441\u043e\u043c \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u044b.", "children": [{"text": "A text representation, validates the text to be a valid e-mail address.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 `django.db.models.fields.emailfield`", "children": [{"text": "Corresponds to ", "block_type": "TextBlock"}, {"code": "django.db.models.fields.EmailField", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c: ** `emailfield (max_length = none, min_length = none, allow_blank = false)`", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "EmailField(max_length=None, min_length=None, allow_blank=False)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "## Regexfield", "children": [{"text": "RegexField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0422\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0441\u043e\u0447\u0435\u0442\u0430\u0435\u0442\u0441\u044f \u0441 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u044b\u043c \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c.", "children": [{"text": "A text representation, that validates the given value matches against a certain regular expression.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 `django.forms.fields.regexfield`.", "children": [{"text": "Corresponds to ", "block_type": "TextBlock"}, {"code": "django.forms.fields.RegexField", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c: ** `regexfield (regex, max_length = none, min_length = none, alluct_blank = false)`", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "RegexField(regex, max_length=None, min_length=None, allow_blank=False)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 `regex` \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043b\u0438\u0431\u043e \u0441\u0442\u0440\u043e\u043a\u043e\u0439, \u043b\u0438\u0431\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f Python.", "children": [{"text": "The mandatory ", "block_type": "TextBlock"}, {"code": "regex", "block_type": "CodeSpanBlock"}, {"text": " argument may either be a string, or a compiled python regular expression object.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 Django's `django.core.validators.regexvalidator` \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438.", "children": [{"text": "Uses Django's ", "block_type": "TextBlock"}, {"code": "django.core.validators.RegexValidator", "block_type": "CodeSpanBlock"}, {"text": " for validation.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## Slugfield", "children": [{"text": "SlugField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "`Regexfield`, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0432\u0445\u043e\u0434 \u0432 \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0438 \u0448\u0430\u0431\u043b\u043e\u043d\u0430` [a-za-z0-9 _-]+`.", "children": [{"text": "A ", "block_type": "TextBlock"}, {"code": "RegexField", "block_type": "CodeSpanBlock"}, {"text": " that validates the input against the pattern ", "block_type": "TextBlock"}, {"code": "[a-zA-Z0-9_-]+", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 `django.db.models.fields.slugfield`.", "children": [{"text": "Corresponds to ", "block_type": "TextBlock"}, {"code": "django.db.models.fields.SlugField", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c: ** `slugfield (max_length = 50, min_length = none, allow_blank = false)`", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "SlugField(max_length=50, min_length=None, allow_blank=False)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "## \u0423\u0440\u043b\u0444\u0438\u043b\u0434", "children": [{"text": "URLField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "`Regexfield`, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0432\u0445\u043e\u0434 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u043c \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f URL -\u0430\u0434\u0440\u0435\u0441\u0430.\n\u041e\u0436\u0438\u0434\u0430\u0435\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043a\u0432\u0430\u043b\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 URL -\u0430\u0434\u0440\u0435\u0441\u0430 \u0444\u043e\u0440\u043c\u044b `http: // <host>/<thpe>`.", "children": [{"text": "A ", "block_type": "TextBlock"}, {"code": "RegexField", "block_type": "CodeSpanBlock"}, {"text": " that validates the input against a URL matching pattern. Expects fully qualified URLs of the form ", "block_type": "TextBlock"}, {"code": "http://<host>/<path>", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 `django.db.models.fields.urlfield`.\n\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 Django's `django.core.validators.urlvalidator` \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438.", "children": [{"text": "Corresponds to ", "block_type": "TextBlock"}, {"code": "django.db.models.fields.URLField", "block_type": "CodeSpanBlock"}, {"text": ".  Uses Django's ", "block_type": "TextBlock"}, {"code": "django.core.validators.URLValidator", "block_type": "CodeSpanBlock"}, {"text": " for validation.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c: ** `urlfield (max_length = 200, min_length = none, allow_blank = false)`", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "URLField(max_length=200, min_length=None, allow_blank=False)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "## Uuidfield", "children": [{"text": "UUIDField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0432\u0445\u043e\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443.\n\u041c\u0435\u0442\u043e\u0434 `to_internal_value` \u0432\u0435\u0440\u043d\u0435\u0442 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440` uuid.uuid`.\n\u041d\u0430 \u0432\u044b\u0432\u043e\u0434\u0435 \u043f\u043e\u043b\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u043a\u0430\u043d\u043e\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \u0434\u0435\u0444\u0438\u0441\u0430\u0446\u0438\u0438, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:", "children": [{"text": "A field that ensures the input is a valid UUID string. The ", "block_type": "TextBlock"}, {"code": "to_internal_value", "block_type": "CodeSpanBlock"}, {"text": " method will return a ", "block_type": "TextBlock"}, {"code": "uuid.UUID", "block_type": "CodeSpanBlock"}, {"text": " instance. On output the field will return a string in the canonical hyphenated format, for example:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "\"de305d54-75b4-431b-adb2-eb6b9e546013\"", "language": null, "block_type": "CodeBlock"}, {"translated_data": "** \u043f\u043e\u0434\u043f\u0438\u0441\u044c: ** `uuidfield (format = 'hex_verbose')`", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "UUIDField(format='hex_verbose')", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `format`: \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0444\u043e\u0440\u043c\u0430\u0442 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f UUID\n-`` hex_verbose'`-\u043a\u0430\u043d\u043e\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438, \u0432 \u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0435 \u0434\u0435\u0444\u0438\u0441\u044b: `\" 5ce0e9a5-5ffa-654b-cee0-1238041fb31a \"` ``\n- `'hex'` - \u043a\u043e\u043c\u043f\u0430\u043a\u0442\u043d\u043e\u0435 \u0448\u0435\u0441\u0442\u0438\u0433\u0440\u0430\u043d\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 UUID, \u043d\u0435 \u0441\u0447\u0438\u0442\u0430\u044f \u0434\u0435\u0444\u0438\u0441\u0430:` \"5ce0e9a55ffa654bcee01238041fb31a\" `` `` `` `` `` `` `` `\n- `'int'` - 128 -\u0431\u0438\u0442\u043d\u043e\u0435 \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 UUID:` \"123456789012312313134124512351145145114\" `\n-`'urn'`-RFC 4122 URN \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 UUID:` \"\u0423\u0440\u043d: UUID: 5CE0E9A5-5FFA-654B-CEE0-1238041FB31A\" ``", "children": [{"children": [{"code": "format", "block_type": "CodeSpanBlock"}, {"text": ": Determines the representation format of the uuid value", "block_type": "TextBlock"}], "nested_children": [{"children": [{"children": [{"code": "'hex_verbose'"}, {"text": " - The canonical hex representation, including hyphens: "}, {"code": "\"5ce0e9a5-5ffa-654b-cee0-1238041fb31a\""}], "nested_children": [], "level": 2}, {"children": [{"code": "'hex'"}, {"text": " - The compact hex representation of the UUID, not including hyphens: "}, {"code": "\"5ce0e9a55ffa654bcee01238041fb31a\""}], "nested_children": [], "level": 2}, {"children": [{"code": "'int'"}, {"text": " - A 128 bit integer representation of the UUID: "}, {"code": "\"123456789012312313134124512351145145114\""}], "nested_children": [], "level": 2}, {"children": [{"code": "'urn'"}, {"text": " - RFC 4122 URN representation of the UUID: "}, {"code": "\"urn:uuid:5ce0e9a5-5ffa-654b-cee0-1238041fb31a\""}], "nested_children": [], "level": 2}], "ordered": false, "level": 2, "start": null}], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u00ab\u0444\u043e\u0440\u043c\u0430\u0442\u0430\u00bb \u0432\u043b\u0438\u044f\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f.\n\u0412\u0441\u0435 \u0444\u043e\u0440\u043c\u0430\u0442\u044b \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u044e\u0442\u0441\u044f `to_internal_value`", "children": [{"text": "Changing the ", "block_type": "TextBlock"}, {"code": "format", "block_type": "CodeSpanBlock"}, {"text": " parameters only affects representation values. All formats are accepted by ", "block_type": "TextBlock"}, {"code": "to_internal_value", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "## FilePathfield", "children": [{"text": "FilePathField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u043e\u043b\u0435, \u0447\u0435\u0439 \u0432\u044b\u0431\u043e\u0440 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d \u0438\u043c\u0435\u043d\u0430\u043c\u0438 \u0444\u0430\u0439\u043b\u043e\u0432 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u043c \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435 \u0432 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435", "children": [{"text": "A field whose choices are limited to the filenames in a certain directory on the filesystem", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 `django.forms.fields.filepathfield`.", "children": [{"text": "Corresponds to ", "block_type": "TextBlock"}, {"code": "django.forms.fields.FilePathField", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c: ** `filePathfield (path, match = none, recurisive = false, alluct_files = true, allow_folders = false, \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f = \u043d\u0435\u0442, ** kwargs)`", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "FilePathField(path, match=None, recursive=False, allow_files=True, allow_folders=False, required=None, **kwargs)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `path` - \u043f\u0443\u0442\u044c \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e\u0439 \u0444\u0430\u0439\u043b\u043e\u0432\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u043a \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0443, \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u044d\u0442\u043e\u0442 FilePathfield \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0432\u043e\u0439 \u0432\u044b\u0431\u043e\u0440.\n* `match` - \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0441\u0442\u0440\u043e\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 FilePathfield \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438 \u0438\u043c\u0435\u043d \u0444\u0430\u0439\u043b\u043e\u0432.\n* `recurisive` - \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u0434\u043e\u043b\u0436\u043d\u044b \u043b\u0438 \u0432\u0441\u0435 \u043f\u043e\u0434\u043a\u0430\u0442\u0430\u0440\u0438\u0438 \u043f\u0443\u0442\u0438 \u0431\u044b\u0442\u044c \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u044b.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `false`.\n* `allow_files` - \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u0434\u043e\u043b\u0436\u043d\u044b \u043b\u0438 \u0444\u0430\u0439\u043b\u044b \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u043c\u0435\u0441\u0442\u0435 \u0431\u044b\u0442\u044c \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u044b.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `true '.\n\u041b\u0438\u0431\u043e \u044d\u0442\u043e, \u043b\u0438\u0431\u043e `allow_folders` \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c` true`.\n* `allow_folders` - \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u0434\u043e\u043b\u0436\u043d\u044b \u043b\u0438 \u043f\u0430\u043f\u043a\u0438 \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c \u043c\u0435\u0441\u0442\u0435 \u0431\u044b\u0442\u044c \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u044b.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `false`.\n\u041b\u0438\u0431\u043e \u044d\u0442\u043e, \u043b\u0438\u0431\u043e `allow_files` \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c` true`.", "children": [{"children": [{"code": "path", "block_type": "CodeSpanBlock"}, {"text": " - The absolute filesystem path to a directory from which this FilePathField should get its choice.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "match", "block_type": "CodeSpanBlock"}, {"text": " - A regular expression, as a string, that FilePathField will use to filter filenames.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "recursive", "block_type": "CodeSpanBlock"}, {"text": " - Specifies whether all subdirectories of path should be included.  Default is ", "block_type": "TextBlock"}, {"code": "False", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "allow_files", "block_type": "CodeSpanBlock"}, {"text": " - Specifies whether files in the specified location should be included. Default is ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": ". Either this or ", "block_type": "TextBlock"}, {"code": "allow_folders", "block_type": "CodeSpanBlock"}, {"text": " must be ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "allow_folders", "block_type": "CodeSpanBlock"}, {"text": " - Specifies whether folders in the specified location should be included. Default is ", "block_type": "TextBlock"}, {"code": "False", "block_type": "CodeSpanBlock"}, {"text": ". Either this or ", "block_type": "TextBlock"}, {"code": "allow_files", "block_type": "CodeSpanBlock"}, {"text": " must be ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "## iPaddressfield", "children": [{"text": "IPAddressField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442 \u0432\u0445\u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 IPv4 \u0438\u043b\u0438 IPv6.", "children": [{"text": "A field that ensures the input is a valid IPv4 or IPv6 string.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 `django.forms.fields.ipaddressfield` \u0438` django.forms.fields.genericipaddressfield`.", "children": [{"text": "Corresponds to ", "block_type": "TextBlock"}, {"code": "django.forms.fields.IPAddressField", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "django.forms.fields.GenericIPAddressField", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c **: `iPaddressfield (protocol = '\u043e\u0431\u0430', unpack_ipv4 = false, ** \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b)`", "children": [{"children": [{"text": "Signature", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ": ", "block_type": "TextBlock"}, {"code": "IPAddressField(protocol='both', unpack_ipv4=False, **options)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `Protocol` \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0435 \u0432\u0445\u043e\u0434\u044b \u0432 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b.\n\u041f\u0440\u0438\u043d\u044f\u0442\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f - \u00ab\u043e\u0431\u0430\u00bb (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e), \u00abIPv4\u00bb \u0438\u043b\u0438 \u00abIPv6\u00bb.\n\u0421\u043e\u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u0435\u0447\u0443\u0432\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e.\n* `unpack_ipv4` \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u044b\u0432\u0430\u0442\u044c IPv4, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u043d\u044b\u0435 \u0430\u0434\u0440\u0435\u0441\u0430, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a :: ffff: 192.0.2.1.\n\u0415\u0441\u043b\u0438 \u044d\u0442\u0430 \u043e\u043f\u0446\u0438\u044f \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0430, \u0430\u0434\u0440\u0435\u0441 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0441\u043f\u0430\u043a\u043e\u0432\u0430\u043d \u0434\u043e 192.0.2.1.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u043e.\n\u041c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u043e\u0433\u0434\u0430, \u043a\u043e\u0433\u0434\u0430 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u043d\u0430 \u00ab\u043e\u0431\u0430\u00bb.", "children": [{"children": [{"code": "protocol", "block_type": "CodeSpanBlock"}, {"text": " Limits valid inputs to the specified protocol. Accepted values are 'both' (default), 'IPv4' or 'IPv6'. Matching is case insensitive.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "unpack_ipv4", "block_type": "CodeSpanBlock"}, {"text": " Unpacks IPv4 mapped addresses like ::ffff:192.0.2.1. If this option is enabled that address would be unpacked to 192.0.2.1. Default is disabled. Can only be used when protocol is set to 'both'.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# \u0427\u0438\u0441\u043b\u043e\u0432\u044b\u0435 \u043f\u043e\u043b\u044f", "children": [{"text": "Numeric fields", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "## integerfield", "children": [{"text": "IntegerField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0426\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435.", "children": [{"text": "An integer representation.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 `django.db.models.fields.integerfield`,` django.db.models.fields.smallintegerfield`, `django.db.models.fields.positiveintegerfield` \u0438` django.db.models.fields.", "children": [{"text": "Corresponds to ", "block_type": "TextBlock"}, {"code": "django.db.models.fields.IntegerField", "block_type": "CodeSpanBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"code": "django.db.models.fields.SmallIntegerField", "block_type": "CodeSpanBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"code": "django.db.models.fields.PositiveIntegerField", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "django.db.models.fields.PositiveSmallIntegerField", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u043f\u043e\u0434\u043f\u0438\u0441\u044c **: `integerfield (max_value = none, min_value = none)`", "children": [{"children": [{"text": "Signature", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ": ", "block_type": "TextBlock"}, {"code": "IntegerField(max_value=None, min_value=None)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `max_value` \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043d\u0435 \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\n* `min_value` \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043d\u0435 \u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.", "children": [{"children": [{"code": "max_value", "block_type": "CodeSpanBlock"}, {"text": " Validate that the number provided is no greater than this value.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "min_value", "block_type": "CodeSpanBlock"}, {"text": " Validate that the number provided is no less than this value.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "## floatfield", "children": [{"text": "FloatField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u043b\u0430\u0432\u0430\u044e\u0449\u0435\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435.", "children": [{"text": "A floating point representation.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 `django.db.models.fields.floatfield`.", "children": [{"text": "Corresponds to ", "block_type": "TextBlock"}, {"code": "django.db.models.fields.FloatField", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u043f\u043e\u0434\u043f\u0438\u0441\u044c **: `floatfield (max_value = none, min_value = none)`", "children": [{"children": [{"text": "Signature", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ": ", "block_type": "TextBlock"}, {"code": "FloatField(max_value=None, min_value=None)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `max_value` \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043d\u0435 \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\n* `min_value` \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043d\u0435 \u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.", "children": [{"children": [{"code": "max_value", "block_type": "CodeSpanBlock"}, {"text": " Validate that the number provided is no greater than this value.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "min_value", "block_type": "CodeSpanBlock"}, {"text": " Validate that the number provided is no less than this value.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "## Decimalfield", "children": [{"text": "DecimalField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0414\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0435 \u043d\u0430 \u043f\u0438\u0442\u043e\u043d\u0435 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u043c \u00ab\u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u044b\u0439\u00bb.", "children": [{"text": "A decimal representation, represented in Python by a ", "block_type": "TextBlock"}, {"code": "Decimal", "block_type": "CodeSpanBlock"}, {"text": " instance.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 `django.db.models.fields.decimalfield`.", "children": [{"text": "Corresponds to ", "block_type": "TextBlock"}, {"code": "django.db.models.fields.DecimalField", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u043f\u043e\u0434\u043f\u0438\u0441\u044c **: `decimalfield (max_digits, decimal_places, coerce_to_string = none, max_value = none, min_value = none)`", "children": [{"children": [{"text": "Signature", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ": ", "block_type": "TextBlock"}, {"code": "DecimalField(max_digits, decimal_places, coerce_to_string=None, max_value=None, min_value=None)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `max_digits` \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0446\u0438\u0444\u0440, \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043d\u043e\u0435 \u0432 \u043d\u043e\u043c\u0435\u0440\u0435.\n\u042d\u0442\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043b\u0438\u0431\u043e `none`, \u043b\u0438\u0431\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e, \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u043e` decimal_places`.\n* `decimal_places` \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u044b\u0445 \u0437\u043d\u0430\u043a\u043e\u0432 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c.\n* `coerce_to_string` \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u0432` true`, \u0435\u0441\u043b\u0438 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u044b \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u0438\u043b\u0438 `false`, \u0435\u0441\u043b\u0438 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442\u044b` decimal '.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043a \u0442\u043e\u043c\u0443 \u0436\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e, \u0447\u0442\u043e \u0438 \u043a\u043b\u0430\u0432\u0438\u0448\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 `coerce_decimal_to_string\n\u0415\u0441\u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u00ab\u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u044b\u0435\u00bb \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442\u0441\u044f \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u043e\u043c, \u0442\u043e \u043e\u043a\u043e\u043d\u0447\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u0431\u0443\u0434\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0442\u044c\u0441\u044f \u0440\u0435\u043d\u0434\u0435\u0440\u0435\u0440\u043e\u043c.\n\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 `localize` \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u0442 \u043a \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e` true '.\n* `max_value` \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043d\u0435 \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\n* `min_value` \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043d\u0435 \u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\n* `Localize` \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u0432` true`, \u0447\u0442\u043e\u0431\u044b \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0432\u0432\u043e\u0434\u0430 \u0438 \u0432\u044b\u0432\u043e\u0434\u0430 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u043b\u043e\u043a\u0430\u043b\u0438.\n\u042d\u0442\u043e \u0442\u0430\u043a\u0436\u0435 \u0437\u0430\u0441\u0442\u0430\u0432\u0438\u0442 `coerce_to_string` \u043a` true`.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u00ab\u043b\u043e\u0436\u044c\u00bb.\n\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0444\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u043e, \u0435\u0441\u043b\u0438 \u0432\u044b \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043b\u0438 `use_l10n = true` \u0432 \u0444\u0430\u0439\u043b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a.\n* `Rounding` \u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0440\u0435\u0436\u0438\u043c \u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u044f, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0439 \u043f\u0440\u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u043c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0438 \u0434\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438.\n\u0414\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f [`` decimal '\u043c\u043e\u0434\u0443\u043b\u044c \u0440\u0435\u0436\u0438\u043c\u044b \u043e\u043a\u0440\u0443\u0433\u043b\u0435\u043d\u0438\u044f] (https://docs.python.org/3/library/decimal.html#rounding-dodes).\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u00ab\u043d\u0435\u0442\u00bb.", "children": [{"children": [{"code": "max_digits", "block_type": "CodeSpanBlock"}, {"text": " The maximum number of digits allowed in the number. It must be either ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": " or an integer greater than or equal to ", "block_type": "TextBlock"}, {"code": "decimal_places", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "decimal_places", "block_type": "CodeSpanBlock"}, {"text": " The number of decimal places to store with the number.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "coerce_to_string", "block_type": "CodeSpanBlock"}, {"text": " Set to ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": " if string values should be returned for the representation, or ", "block_type": "TextBlock"}, {"code": "False", "block_type": "CodeSpanBlock"}, {"text": " if ", "block_type": "TextBlock"}, {"code": "Decimal", "block_type": "CodeSpanBlock"}, {"text": " objects should be returned. Defaults to the same value as the ", "block_type": "TextBlock"}, {"code": "COERCE_DECIMAL_TO_STRING", "block_type": "CodeSpanBlock"}, {"text": " settings key, which will be ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": " unless overridden. If ", "block_type": "TextBlock"}, {"code": "Decimal", "block_type": "CodeSpanBlock"}, {"text": " objects are returned by the serializer, then the final output format will be determined by the renderer. Note that setting ", "block_type": "TextBlock"}, {"code": "localize", "block_type": "CodeSpanBlock"}, {"text": " will force the value to ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "max_value", "block_type": "CodeSpanBlock"}, {"text": " Validate that the number provided is no greater than this value.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "min_value", "block_type": "CodeSpanBlock"}, {"text": " Validate that the number provided is no less than this value.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "localize", "block_type": "CodeSpanBlock"}, {"text": " Set to ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": " to enable localization of input and output based on the current locale. This will also force ", "block_type": "TextBlock"}, {"code": "coerce_to_string", "block_type": "CodeSpanBlock"}, {"text": " to ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": ". Defaults to ", "block_type": "TextBlock"}, {"code": "False", "block_type": "CodeSpanBlock"}, {"text": ". Note that data formatting is enabled if you have set ", "block_type": "TextBlock"}, {"code": "USE_L10N=True", "block_type": "CodeSpanBlock"}, {"text": " in your settings file.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "rounding", "block_type": "CodeSpanBlock"}, {"text": " Sets the rounding mode used when quantising to the configured precision. Valid values are ", "block_type": "TextBlock"}, {"children": [{"code": "decimal", "block_type": "CodeSpanBlock"}, {"text": " module rounding modes", "block_type": "TextBlock"}], "url": "https://docs.python.org/3/library/decimal.html#rounding-modes", "title": null, "block_type": "LinkBlock"}, {"text": ". Defaults to ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "#### \u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f", "children": [{"text": "Example usage", "block_type": "TextBlock"}], "level": 4, "block_type": "HeadingBlock"}, {"translated_data": "\u0427\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0447\u0438\u0441\u043b\u0430 \u0434\u043e 999 \u0441 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435\u043c \u0438\u0437 2 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u044b\u0445 \u0437\u043d\u0430\u043a\u043e\u0432, \u0432\u044b \u0431\u0443\u0434\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c:", "children": [{"text": "To validate numbers up to 999 with a resolution of 2 decimal places, you would use:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "serializers.DecimalField(max_digits=5, decimal_places=2)", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0418 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u0446\u0438\u0444\u0440\u044b \u0434\u043e \u0447\u0435\u0433\u043e -\u043b\u0438\u0431\u043e \u043c\u0435\u043d\u044c\u0448\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\u0430 \u0441 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435\u043c 10 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u044b\u0445 \u0437\u043d\u0430\u043a\u043e\u0432:", "children": [{"text": "And to validate numbers up to anything less than one billion with a resolution of 10 decimal places:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "serializers.DecimalField(max_digits=19, decimal_places=10)", "language": null, "block_type": "CodeBlock"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# \u041f\u043e\u043b\u044f \u0434\u0430\u0442\u044b \u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438", "children": [{"text": "Date and time fields", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "## datetimefield", "children": [{"text": "DateTimeField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0414\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435.", "children": [{"text": "A date and time representation.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 `django.db.models.fields.datetimefield`.", "children": [{"text": "Corresponds to ", "block_type": "TextBlock"}, {"code": "django.db.models.fields.DateTimeField", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c: ** `dateTimefield (format = api_settings.datetime_format, input_formats = none, default_timezone = none)`", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "DateTimeField(format=api_settings.DATETIME_FORMAT, input_formats=None, default_timezone=None)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `format` - \u0441\u0442\u0440\u043e\u043a\u0430, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0430\u044f \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u0430\u0442.\n\u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e, \u044d\u0442\u043e \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043a \u0442\u043e\u043c\u0443 \u0436\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e, \u0447\u0442\u043e \u0438 \u043a\u043b\u0430\u0432\u0438\u0448\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 `datetime_format`, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u0443\u0434\u0435\u0442` 'iso-8601' \u00bb, \u0435\u0441\u043b\u0438 \u043d\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e.\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0443 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f `to_representation` \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043f\u0440\u0438\u043d\u0443\u0436\u0434\u0435\u043d\u044b \u043a \u0432\u044b\u0432\u043e\u0434\u0443 \u0441\u0442\u0440\u043e\u043a\u0438.\n\u0421\u0442\u0440\u043e\u043a\u0438 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u043e\u043f\u0438\u0441\u0430\u043d\u044b \u043d\u0438\u0436\u0435.\n\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u044d\u0442\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430 \u00ab\u041d\u0435\u0442\u00bb \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u044b Python `datetime` \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c\u0441\u044f` to_representation`.\n\u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 DateTime \u0431\u0443\u0434\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0430 \u0440\u0435\u043d\u0434\u0435\u0440\u0435\u0440\u043e\u043c.\n* `input_formats` - \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0442\u0440\u043e\u043a, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0445 \u0432\u0445\u043e\u0434\u043d\u044b\u0435 \u0444\u043e\u0440\u043c\u0430\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0434\u0430\u0442\u044b.\n\u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e, \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 `datetime_input_formats`, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e\u00ab ['iso-8601'] `.\n* `default_timezone` - a` tzinfo` subclass (`ZoneInfo` \u0438\u043b\u0438` pytz`) \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u0447\u0430\u0441\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u044f\u0441.\n\u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e, \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 `use_tz` \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0430, \u044d\u0442\u043e \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e [\u0442\u0435\u043a\u0443\u0449\u0438\u0439 \u0447\u0430\u0441\u043e\u0432\u043e\u0439 \u0437\u0430\u0441\u0442\u0440\u043e\u0439] (https://docs.djangoproject.com/en/stable/topics/i18n/timezones/#default-time-zone-and----\n\u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f).\n\u0415\u0441\u043b\u0438 `use_tz` \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d, \u0442\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u044b DateTime \u0431\u0443\u0434\u0443\u0442 \u043d\u0430\u0438\u0432\u043d\u044b\u043c\u0438.", "children": [{"children": [{"code": "format", "block_type": "CodeSpanBlock"}, {"text": " - A string representing the output format. If not specified, this defaults to the same value as the ", "block_type": "TextBlock"}, {"code": "DATETIME_FORMAT", "block_type": "CodeSpanBlock"}, {"text": " settings key, which will be ", "block_type": "TextBlock"}, {"code": "'iso-8601'", "block_type": "CodeSpanBlock"}, {"text": " unless set. Setting to a format string indicates that ", "block_type": "TextBlock"}, {"code": "to_representation", "block_type": "CodeSpanBlock"}, {"text": " return values should be coerced to string output. Format strings are described below. Setting this value to ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": " indicates that Python ", "block_type": "TextBlock"}, {"code": "datetime", "block_type": "CodeSpanBlock"}, {"text": " objects should be returned by ", "block_type": "TextBlock"}, {"code": "to_representation", "block_type": "CodeSpanBlock"}, {"text": ". In this case the datetime encoding will be determined by the renderer.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "input_formats", "block_type": "CodeSpanBlock"}, {"text": " - A list of strings representing the input formats which may be used to parse the date.  If not specified, the ", "block_type": "TextBlock"}, {"code": "DATETIME_INPUT_FORMATS", "block_type": "CodeSpanBlock"}, {"text": " setting will be used, which defaults to ", "block_type": "TextBlock"}, {"code": "['iso-8601']", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "default_timezone", "block_type": "CodeSpanBlock"}, {"text": " - A ", "block_type": "TextBlock"}, {"code": "tzinfo", "block_type": "CodeSpanBlock"}, {"text": " subclass (", "block_type": "TextBlock"}, {"code": "zoneinfo", "block_type": "CodeSpanBlock"}, {"text": " or ", "block_type": "TextBlock"}, {"code": "pytz", "block_type": "CodeSpanBlock"}, {"text": ") prepresenting the timezone. If not specified and the ", "block_type": "TextBlock"}, {"code": "USE_TZ", "block_type": "CodeSpanBlock"}, {"text": " setting is enabled, this defaults to the ", "block_type": "TextBlock"}, {"children": [{"text": "current timezone", "block_type": "TextBlock"}], "url": "https://docs.djangoproject.com/en/stable/topics/i18n/timezones/#default-time-zone-and-current-time-zone", "title": null, "block_type": "LinkBlock"}, {"text": ". If ", "block_type": "TextBlock"}, {"code": "USE_TZ", "block_type": "CodeSpanBlock"}, {"text": " is disabled, then datetime objects will be naive.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "#### `DateTimefield` \u0444\u043e\u0440\u043c\u0430\u0442 \u0441\u0442\u0440\u043e\u043a\u0438.", "children": [{"code": "DateTimeField", "block_type": "CodeSpanBlock"}, {"text": " format strings.", "block_type": "TextBlock"}], "level": 4, "block_type": "HeadingBlock"}, {"translated_data": "\u0421\u0442\u0440\u043e\u043a\u0438 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043b\u0438\u0431\u043e [python strftime formats] (https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior), \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u044f\u0432\u043d\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442 \u0444\u043e\u0440\u043c\u0430\u0442 \u0438\u043b\u0438 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 `'iso\n-8601'`, \u0447\u0442\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e [ISO 8601] (https://www.w3.org/tr/note-datetime) \u0421\u0442\u0438\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f.\n(\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 2013-01-29t12: 34: 56.000000Z' ')", "children": [{"text": "Format strings may either be ", "block_type": "TextBlock"}, {"children": [{"text": "Python strftime formats", "block_type": "TextBlock"}], "url": "https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior", "title": null, "block_type": "LinkBlock"}, {"text": " which explicitly specify the format, or the special string ", "block_type": "TextBlock"}, {"code": "'iso-8601'", "block_type": "CodeSpanBlock"}, {"text": ", which indicates that ", "block_type": "TextBlock"}, {"children": [{"text": "ISO 8601", "block_type": "TextBlock"}], "url": "https://www.w3.org/TR/NOTE-datetime", "title": null, "block_type": "LinkBlock"}, {"text": " style datetimes should be used. (eg ", "block_type": "TextBlock"}, {"code": "'2013-01-29T12:34:56.000000Z'", "block_type": "CodeSpanBlock"}, {"text": ")", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041a\u043e\u0433\u0434\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u00ab\u041d\u0435\u0442\u00bb \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 `datetime`, \u0431\u0443\u0434\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u043e` to_representation`, \u0430 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u044b\u0432\u043e\u0434\u0430 \u0431\u0443\u0434\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0430 \u043a\u043b\u0430\u0441\u0441\u043e\u043c \u0440\u0435\u043d\u0434\u0435\u0440\u0438\u043d\u0433\u0430.", "children": [{"text": "When a value of ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": " is used for the format ", "block_type": "TextBlock"}, {"code": "datetime", "block_type": "CodeSpanBlock"}, {"text": " objects will be returned by ", "block_type": "TextBlock"}, {"code": "to_representation", "block_type": "CodeSpanBlock"}, {"text": " and the final output representation will determined by the renderer class.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "#### `auto_now` \u0438` auto_now_add` \u043f\u043e\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438.", "children": [{"code": "auto_now", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "auto_now_add", "block_type": "CodeSpanBlock"}, {"text": " model fields.", "block_type": "TextBlock"}], "level": 4, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 `modelerializer` \u0438\u043b\u0438` HyperlinkedModelserializer. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u043b\u044e\u0431\u044b\u0435 \u043f\u043e\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438 \u0441 `auto_now = true` \u0438\u043b\u0438` auto_now_add = true` \u0431\u0443\u0434\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u044f \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f `read_only = true` \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e.", "children": [{"text": "When using ", "block_type": "TextBlock"}, {"code": "ModelSerializer", "block_type": "CodeSpanBlock"}, {"text": " or ", "block_type": "TextBlock"}, {"code": "HyperlinkedModelSerializer", "block_type": "CodeSpanBlock"}, {"text": ", note that any model fields with ", "block_type": "TextBlock"}, {"code": "auto_now=True", "block_type": "CodeSpanBlock"}, {"text": " or ", "block_type": "TextBlock"}, {"code": "auto_now_add=True", "block_type": "CodeSpanBlock"}, {"text": " will use serializer fields that are ", "block_type": "TextBlock"}, {"code": "read_only=True", "block_type": "CodeSpanBlock"}, {"text": " by default.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u044d\u0442\u043e \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435, \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u044f\u0432\u043d\u043e \u043e\u0431\u044a\u044f\u0432\u0438\u0442\u044c \u00abDateTimefield\u00bb \u043d\u0430 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0435.\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:", "children": [{"text": "If you want to override this behavior, you'll need to declare the ", "block_type": "TextBlock"}, {"code": "DateTimeField", "block_type": "CodeSpanBlock"}, {"text": " explicitly on the serializer.  For example:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "class CommentSerializer(serializers.ModelSerializer):\n    created = serializers.DateTimeField()\n\n    class Meta:\n        model = Comment", "language": null, "block_type": "CodeBlock"}, {"translated_data": "## datefield", "children": [{"text": "DateField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u0442\u044b.", "children": [{"text": "A date representation.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 `django.db.models.fields.datefield`", "children": [{"text": "Corresponds to ", "block_type": "TextBlock"}, {"code": "django.db.models.fields.DateField", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c: ** `datefield (format = api_settings.date_format, input_formats = none)`", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "DateField(format=api_settings.DATE_FORMAT, input_formats=None)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `format` - \u0441\u0442\u0440\u043e\u043a\u0430, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0430\u044f \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u0430\u0442.\n\u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e, \u044d\u0442\u043e \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043a \u0442\u043e\u043c\u0443 \u0436\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e, \u0447\u0442\u043e \u0438 \u043a\u043b\u0430\u0432\u0438\u0448\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 `date_format`, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u0443\u0434\u0435\u0442` 'iso-8601'.\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0443 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f `to_representation` \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043f\u0440\u0438\u043d\u0443\u0436\u0434\u0435\u043d\u044b \u043a \u0432\u044b\u0432\u043e\u0434\u0443 \u0441\u0442\u0440\u043e\u043a\u0438.\n\u0421\u0442\u0440\u043e\u043a\u0438 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u043e\u043f\u0438\u0441\u0430\u043d\u044b \u043d\u0438\u0436\u0435.\n\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u044d\u0442\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430 \u00ab\u041d\u0435\u0442\u00bb \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u044b Python `date '\u0434\u043e\u043b\u0436\u043d\u044b \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c\u0441\u044f` to_representation`.\n\u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u0442\u044b \u0431\u0443\u0434\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0442\u044c\u0441\u044f \u0440\u0435\u043d\u0434\u0435\u0440\u0435\u0440\u043e\u043c.\n* `input_formats` - \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0442\u0440\u043e\u043a, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0445 \u0432\u0445\u043e\u0434\u043d\u044b\u0435 \u0444\u043e\u0440\u043c\u0430\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0434\u0430\u0442\u044b.\n\u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e, \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 `date_input_formats`, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e` ['iso-8601'] `.", "children": [{"children": [{"code": "format", "block_type": "CodeSpanBlock"}, {"text": " - A string representing the output format.  If not specified, this defaults to the same value as the ", "block_type": "TextBlock"}, {"code": "DATE_FORMAT", "block_type": "CodeSpanBlock"}, {"text": " settings key, which will be ", "block_type": "TextBlock"}, {"code": "'iso-8601'", "block_type": "CodeSpanBlock"}, {"text": " unless set. Setting to a format string indicates that ", "block_type": "TextBlock"}, {"code": "to_representation", "block_type": "CodeSpanBlock"}, {"text": " return values should be coerced to string output. Format strings are described below. Setting this value to ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": " indicates that Python ", "block_type": "TextBlock"}, {"code": "date", "block_type": "CodeSpanBlock"}, {"text": " objects should be returned by ", "block_type": "TextBlock"}, {"code": "to_representation", "block_type": "CodeSpanBlock"}, {"text": ". In this case the date encoding will be determined by the renderer.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "input_formats", "block_type": "CodeSpanBlock"}, {"text": " - A list of strings representing the input formats which may be used to parse the date.  If not specified, the ", "block_type": "TextBlock"}, {"code": "DATE_INPUT_FORMATS", "block_type": "CodeSpanBlock"}, {"text": " setting will be used, which defaults to ", "block_type": "TextBlock"}, {"code": "['iso-8601']", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "#### `strings format strings datefield`", "children": [{"code": "DateField", "block_type": "CodeSpanBlock"}, {"text": " format strings", "block_type": "TextBlock"}], "level": 4, "block_type": "HeadingBlock"}, {"translated_data": "\u0421\u0442\u0440\u043e\u043a\u0438 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043b\u0438\u0431\u043e [python strftime formats] (https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior), \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u044f\u0432\u043d\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442 \u0444\u043e\u0440\u043c\u0430\u0442 \u0438\u043b\u0438 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 `'iso\n-8601'`, \u0447\u0442\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e [ISO 8601] (https://www.w3.org/tr/note-datetime) \u0421\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0430\u0442\u044b \u0441\u0442\u0438\u043b\u044f.\n(\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 2013-01-29' ')", "children": [{"text": "Format strings may either be ", "block_type": "TextBlock"}, {"children": [{"text": "Python strftime formats", "block_type": "TextBlock"}], "url": "https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior", "title": null, "block_type": "LinkBlock"}, {"text": " which explicitly specify the format, or the special string ", "block_type": "TextBlock"}, {"code": "'iso-8601'", "block_type": "CodeSpanBlock"}, {"text": ", which indicates that ", "block_type": "TextBlock"}, {"children": [{"text": "ISO 8601", "block_type": "TextBlock"}], "url": "https://www.w3.org/TR/NOTE-datetime", "title": null, "block_type": "LinkBlock"}, {"text": " style dates should be used. (eg ", "block_type": "TextBlock"}, {"code": "'2013-01-29'", "block_type": "CodeSpanBlock"}, {"text": ")", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## Timefield", "children": [{"text": "TimeField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0420\u0435\u043f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0432\u0440\u0435\u043c\u0435\u043d\u0438.", "children": [{"text": "A time representation.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 `django.db.models.fields.timefield`", "children": [{"text": "Corresponds to ", "block_type": "TextBlock"}, {"code": "django.db.models.fields.TimeField", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c: ** `timefield (format = api_settings.time_format, input_formats = none)`", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "TimeField(format=api_settings.TIME_FORMAT, input_formats=None)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `format` - \u0441\u0442\u0440\u043e\u043a\u0430, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0430\u044f \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u0430\u0442.\n\u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e, \u044d\u0442\u043e \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043a \u0442\u043e\u043c\u0443 \u0436\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e, \u0447\u0442\u043e \u0438 \u043a\u043b\u0430\u0432\u0438\u0448\u0430 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 `time_format`, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u0443\u0434\u0435\u0442` 'iso-8601'.\n\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0443 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f `to_representation` \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043f\u0440\u0438\u043d\u0443\u0436\u0434\u0435\u043d\u044b \u043a \u0432\u044b\u0432\u043e\u0434\u0443 \u0441\u0442\u0440\u043e\u043a\u0438.\n\u0421\u0442\u0440\u043e\u043a\u0438 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u043e\u043f\u0438\u0441\u0430\u043d\u044b \u043d\u0438\u0436\u0435.\n\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u044d\u0442\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043d\u0430 \u00ab\u041d\u0435\u0442\u00bb \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u044b Python `time` \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c\u0441\u044f` to_representation`.\n\u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0431\u0443\u0434\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0442\u044c\u0441\u044f \u0440\u0435\u043d\u0434\u0435\u0440\u0435\u0440\u043e\u043c.\n* `input_formats` - \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u0442\u0440\u043e\u043a, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0445 \u0432\u0445\u043e\u0434\u043d\u044b\u0435 \u0444\u043e\u0440\u043c\u0430\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0434\u0430\u0442\u044b.\n\u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043e, \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 `time_input_formats`, \u0447\u0442\u043e \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e\u00ab ['iso-8601'] `.", "children": [{"children": [{"code": "format", "block_type": "CodeSpanBlock"}, {"text": " - A string representing the output format.  If not specified, this defaults to the same value as the ", "block_type": "TextBlock"}, {"code": "TIME_FORMAT", "block_type": "CodeSpanBlock"}, {"text": " settings key, which will be ", "block_type": "TextBlock"}, {"code": "'iso-8601'", "block_type": "CodeSpanBlock"}, {"text": " unless set. Setting to a format string indicates that ", "block_type": "TextBlock"}, {"code": "to_representation", "block_type": "CodeSpanBlock"}, {"text": " return values should be coerced to string output. Format strings are described below. Setting this value to ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": " indicates that Python ", "block_type": "TextBlock"}, {"code": "time", "block_type": "CodeSpanBlock"}, {"text": " objects should be returned by ", "block_type": "TextBlock"}, {"code": "to_representation", "block_type": "CodeSpanBlock"}, {"text": ". In this case the time encoding will be determined by the renderer.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "input_formats", "block_type": "CodeSpanBlock"}, {"text": " - A list of strings representing the input formats which may be used to parse the date.  If not specified, the ", "block_type": "TextBlock"}, {"code": "TIME_INPUT_FORMATS", "block_type": "CodeSpanBlock"}, {"text": " setting will be used, which defaults to ", "block_type": "TextBlock"}, {"code": "['iso-8601']", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "#### `timefield` strings \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u0444\u043e\u0440\u043c\u0430\u0442\u0430", "children": [{"code": "TimeField", "block_type": "CodeSpanBlock"}, {"text": " format strings", "block_type": "TextBlock"}], "level": 4, "block_type": "HeadingBlock"}, {"translated_data": "\u0421\u0442\u0440\u043e\u043a\u0438 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043b\u0438\u0431\u043e [python strftime formats] (https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior), \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u044f\u0432\u043d\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442 \u0444\u043e\u0440\u043c\u0430\u0442 \u0438\u043b\u0438 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 `'iso\n-8601'`, \u0447\u0442\u043e \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e [iso 8601] (https://www.w3.org/tr/note-datetime)\n(\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, `'12: 34: 56.000000'`)", "children": [{"text": "Format strings may either be ", "block_type": "TextBlock"}, {"children": [{"text": "Python strftime formats", "block_type": "TextBlock"}], "url": "https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior", "title": null, "block_type": "LinkBlock"}, {"text": " which explicitly specify the format, or the special string ", "block_type": "TextBlock"}, {"code": "'iso-8601'", "block_type": "CodeSpanBlock"}, {"text": ", which indicates that ", "block_type": "TextBlock"}, {"children": [{"text": "ISO 8601", "block_type": "TextBlock"}], "url": "https://www.w3.org/TR/NOTE-datetime", "title": null, "block_type": "LinkBlock"}, {"text": " style times should be used. (eg ", "block_type": "TextBlock"}, {"code": "'12:34:56.000000'", "block_type": "CodeSpanBlock"}, {"text": ")", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## Durationfield", "children": [{"text": "DurationField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435.\n\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 `django.db.models.fields.durationfield`", "children": [{"text": "A Duration representation.\nCorresponds to ", "block_type": "TextBlock"}, {"code": "django.db.models.fields.DurationField", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0414\u043b\u044f \u044d\u0442\u0438\u0445 \u043f\u043e\u043b\u0435\u0439 `valyated_data` \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440` datetime.timedelta`.\n\u0420\u0435\u043f\u0440\u0435\u0437\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0443, \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0437\u0430 \u044d\u0442\u0438\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u043e\u043c `'[dd] [HH: [MM:]] SS [.uuuuuuu]'`.", "children": [{"text": "The ", "block_type": "TextBlock"}, {"code": "validated_data", "block_type": "CodeSpanBlock"}, {"text": " for these fields will contain a ", "block_type": "TextBlock"}, {"code": "datetime.timedelta", "block_type": "CodeSpanBlock"}, {"text": " instance.\nThe representation is a string following this format ", "block_type": "TextBlock"}, {"code": "'[DD] [HH:[MM:]]ss[.uuuuuu]'", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c: ** `durationfield (max_value = none, min_value = none)`", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "DurationField(max_value=None, min_value=None)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `max_value` \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u0430\u044f \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043d\u0435 \u0431\u043e\u043b\u044c\u0448\u0435 \u044d\u0442\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\n* `min_value` \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442, \u0447\u0442\u043e \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u0430\u044f \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u043d\u0435 \u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \u044d\u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.", "children": [{"children": [{"code": "max_value", "block_type": "CodeSpanBlock"}, {"text": " Validate that the duration provided is no greater than this value.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "min_value", "block_type": "CodeSpanBlock"}, {"text": " Validate that the duration provided is no less than this value.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# \u041f\u043e\u043b\u044f \u0432\u044b\u0431\u043e\u0440\u0430", "children": [{"text": "Choice selection fields", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "## Choicefield", "children": [{"text": "ChoiceField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u043d\u044f\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u0437 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u043e\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432.", "children": [{"text": "A field that can accept a value out of a limited set of choices.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f `modelseRializer` \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u0435\u0439, \u0435\u0441\u043b\u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0435 \u043f\u043e\u043b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442` shocates =\u2026 `.", "children": [{"text": "Used by ", "block_type": "TextBlock"}, {"code": "ModelSerializer", "block_type": "CodeSpanBlock"}, {"text": " to automatically generate fields if the corresponding model field includes a ", "block_type": "TextBlock"}, {"code": "choices=\u2026", "block_type": "CodeSpanBlock"}, {"text": " argument.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c: ** `Choicefield (\u0432\u044b\u0431\u043e\u0440)`", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "ChoiceField(choices)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `Choices` - \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0438\u043b\u0438 \u0441\u043f\u0438\u0441\u043e\u043a` (key, display_name) `cuples.\n* `allow_blank` - \u0435\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0432` true`, \u0442\u043e \u043f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u0447\u0438\u0442\u0430\u0442\u044c\u0441\u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c.\n\u0415\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430 `false`, \u0442\u043e \u043f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438 \u0432\u044b\u043d\u0435\u0441\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u00ab\u043b\u043e\u0436\u044c\u00bb.\n* `html_cutoff` - \u0415\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e, \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c\u0441\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e HTML Select Dlop Down.\n\u041c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c\u043e\u0433\u043e \u0432\u044b\u0431\u043e\u0440\u0430, \u0441 \u043e\u0447\u0435\u043d\u044c \u0431\u043e\u043b\u044c\u0448\u0438\u043c\u0438 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u043c\u0438 \u0432\u044b\u0431\u043e\u0440\u0430\u043c\u0438 \u043d\u0435 \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u044e\u0442 \u0440\u0435\u043d\u0434\u0435\u0440\u0438\u043d\u0433 \u0448\u0430\u0431\u043b\u043e\u043d\u0430.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u00ab\u043d\u0435\u0442\u00bb.\n* `html_cutoff_text` - \u0415\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e, \u044d\u0442\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0439 \u0438\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440, \u0435\u0441\u043b\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0431\u044b\u043b\u043e \u043e\u0442\u0441\u0435\u0447\u0435\u043d\u043e \u0432 \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 HTML Select.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `\" \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c {count} \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b\u2026 \"` `", "children": [{"children": [{"code": "choices", "block_type": "CodeSpanBlock"}, {"text": " - A list of valid values, or a list of ", "block_type": "TextBlock"}, {"code": "(key, display_name)", "block_type": "CodeSpanBlock"}, {"text": " tuples.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "allow_blank", "block_type": "CodeSpanBlock"}, {"text": " - If set to ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": " then the empty string should be considered a valid value. If set to ", "block_type": "TextBlock"}, {"code": "False", "block_type": "CodeSpanBlock"}, {"text": " then the empty string is considered invalid and will raise a validation error. Defaults to ", "block_type": "TextBlock"}, {"code": "False", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "html_cutoff", "block_type": "CodeSpanBlock"}, {"text": " - If set this will be the maximum number of choices that will be displayed by a HTML select drop down. Can be used to ensure that automatically generated ChoiceFields with very large possible selections do not prevent a template from rendering. Defaults to ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "html_cutoff_text", "block_type": "CodeSpanBlock"}, {"text": " - If set this will display a textual indicator if the maximum number of items have been cutoff in an HTML select drop down. Defaults to ", "block_type": "TextBlock"}, {"code": "\"More than {count} items\u2026\"", "block_type": "CodeSpanBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "\u0418 `alluck_blank`, \u0438` alluct_null` \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u043d\u0430 `Choicefield`, \u0445\u043e\u0442\u044f \u043d\u0430\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u043d\u043e \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d, \u0430 \u043d\u0435 \u043e\u0431\u0430.\n`alluct_blank` \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0434\u043b\u044f \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u0432\u044b\u0431\u043e\u0440\u0430, \u0430` alluct_null` \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0434\u043b\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u043d\u0435 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432.", "children": [{"text": "Both the ", "block_type": "TextBlock"}, {"code": "allow_blank", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "allow_null", "block_type": "CodeSpanBlock"}, {"text": " are valid options on ", "block_type": "TextBlock"}, {"code": "ChoiceField", "block_type": "CodeSpanBlock"}, {"text": ", although it is highly recommended that you only use one and not both. ", "block_type": "TextBlock"}, {"code": "allow_blank", "block_type": "CodeSpanBlock"}, {"text": " should be preferred for textual choices, and ", "block_type": "TextBlock"}, {"code": "allow_null", "block_type": "CodeSpanBlock"}, {"text": " should be preferred for numeric or other non-textual choices.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## Multiplechoicefield", "children": [{"text": "MultipleChoiceField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u043d\u044f\u0442\u044c \u043d\u0430\u0431\u043e\u0440 \u043d\u0443\u043b\u044f, \u043e\u0434\u043d\u043e\u0433\u043e \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u0438\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u043e\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432.\n\u0411\u0435\u0440\u0435\u0442 \u043e\u0434\u0438\u043d \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442.\n`to_internal_value` \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442` set`, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.", "children": [{"text": "A field that can accept a set of zero, one or many values, chosen from a limited set of choices. Takes a single mandatory argument. ", "block_type": "TextBlock"}, {"code": "to_internal_value", "block_type": "CodeSpanBlock"}, {"text": " returns a ", "block_type": "TextBlock"}, {"code": "set", "block_type": "CodeSpanBlock"}, {"text": " containing the selected values.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c: ** `multiplechoicefield (\u0432\u044b\u0431\u043e\u0440)`", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "MultipleChoiceField(choices)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `Choices` - \u0441\u043f\u0438\u0441\u043e\u043a \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0438\u043b\u0438 \u0441\u043f\u0438\u0441\u043e\u043a` (key, display_name) `cuples.\n* `allow_blank` - \u0435\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0432` true`, \u0442\u043e \u043f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u0447\u0438\u0442\u0430\u0442\u044c\u0441\u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c.\n\u0415\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0430 `false`, \u0442\u043e \u043f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438 \u0432\u044b\u043d\u0435\u0441\u0435\u0442 \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u00ab\u043b\u043e\u0436\u044c\u00bb.\n* `html_cutoff` - \u0415\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e, \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0431\u0443\u0434\u0443\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c\u0441\u044f \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e HTML Select Dlop Down.\n\u041c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c\u043e\u0433\u043e \u0432\u044b\u0431\u043e\u0440\u0430, \u0441 \u043e\u0447\u0435\u043d\u044c \u0431\u043e\u043b\u044c\u0448\u0438\u043c\u0438 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u043c\u0438 \u0432\u044b\u0431\u043e\u0440\u0430\u043c\u0438 \u043d\u0435 \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u044e\u0442 \u0440\u0435\u043d\u0434\u0435\u0440\u0438\u043d\u0433 \u0448\u0430\u0431\u043b\u043e\u043d\u0430.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u00ab\u043d\u0435\u0442\u00bb.\n* `html_cutoff_text` - \u0415\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e, \u044d\u0442\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0439 \u0438\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440, \u0435\u0441\u043b\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0431\u044b\u043b\u043e \u043e\u0442\u0441\u0435\u0447\u0435\u043d\u043e \u0432 \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 HTML Select.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `\" \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c {count} \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b\u2026 \"` `", "children": [{"children": [{"code": "choices", "block_type": "CodeSpanBlock"}, {"text": " - A list of valid values, or a list of ", "block_type": "TextBlock"}, {"code": "(key, display_name)", "block_type": "CodeSpanBlock"}, {"text": " tuples.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "allow_blank", "block_type": "CodeSpanBlock"}, {"text": " - If set to ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": " then the empty string should be considered a valid value. If set to ", "block_type": "TextBlock"}, {"code": "False", "block_type": "CodeSpanBlock"}, {"text": " then the empty string is considered invalid and will raise a validation error. Defaults to ", "block_type": "TextBlock"}, {"code": "False", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "html_cutoff", "block_type": "CodeSpanBlock"}, {"text": " - If set this will be the maximum number of choices that will be displayed by a HTML select drop down. Can be used to ensure that automatically generated ChoiceFields with very large possible selections do not prevent a template from rendering. Defaults to ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "html_cutoff_text", "block_type": "CodeSpanBlock"}, {"text": " - If set this will display a textual indicator if the maximum number of items have been cutoff in an HTML select drop down. Defaults to ", "block_type": "TextBlock"}, {"code": "\"More than {count} items\u2026\"", "block_type": "CodeSpanBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "\u041a\u0430\u043a \u0438 \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441 `Choicefield`, \u043a\u0430\u043a \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b` alluct_blank`, \u0442\u0430\u043a \u0438 `alluct_null` \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b, \u0445\u043e\u0442\u044f \u043d\u0430\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u043d\u043e \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d, \u0430 \u043d\u0435 \u043e\u0431\u0430.\n`alluct_blank` \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0434\u043b\u044f \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u0432\u044b\u0431\u043e\u0440\u0430, \u0430` alluct_null` \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0434\u043b\u044f \u0447\u0438\u0441\u043b\u043e\u0432\u044b\u0445 \u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u043d\u0435 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432.", "children": [{"text": "As with ", "block_type": "TextBlock"}, {"code": "ChoiceField", "block_type": "CodeSpanBlock"}, {"text": ", both the ", "block_type": "TextBlock"}, {"code": "allow_blank", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "allow_null", "block_type": "CodeSpanBlock"}, {"text": " options are valid, although it is highly recommended that you only use one and not both. ", "block_type": "TextBlock"}, {"code": "allow_blank", "block_type": "CodeSpanBlock"}, {"text": " should be preferred for textual choices, and ", "block_type": "TextBlock"}, {"code": "allow_null", "block_type": "CodeSpanBlock"}, {"text": " should be preferred for numeric or other non-textual choices.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# \u041f\u043e\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0444\u0430\u0439\u043b\u0430", "children": [{"text": "File upload fields", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "#### \u041f\u0430\u0440\u0441\u0435\u0440\u044b \u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0444\u0430\u0439\u043b\u043e\u0432.", "children": [{"text": "Parsers and file uploads.", "block_type": "TextBlock"}], "level": 4, "block_type": "HeadingBlock"}, {"translated_data": "\u041a\u043b\u0430\u0441\u0441\u044b `filefield` \u0438` Imagefield` \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0441 `multiparparser` \u0438\u043b\u0438` fileuploadParser`.\n\u0411\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u043e \u0430\u043d\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u043e\u0432, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440,\nJSON \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0444\u0430\u0439\u043b\u043e\u0432.\n\u0420\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u044b\u0435 Django [file_upload_handlers] (https://docs.djangoproject.com/en/stable/ref/settings/#std:setting-file_upload_handlers) \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432.", "children": [{"text": "The ", "block_type": "TextBlock"}, {"code": "FileField", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "ImageField", "block_type": "CodeSpanBlock"}, {"text": " classes are only suitable for use with ", "block_type": "TextBlock"}, {"code": "MultiPartParser", "block_type": "CodeSpanBlock"}, {"text": " or ", "block_type": "TextBlock"}, {"code": "FileUploadParser", "block_type": "CodeSpanBlock"}, {"text": ". Most parsers, such as e.g. JSON don't support file uploads.\nDjango's regular ", "block_type": "TextBlock"}, {"children": [{"text": "FILE_UPLOAD_HANDLERS", "block_type": "TextBlock"}], "url": "https://docs.djangoproject.com/en/stable/ref/settings/#std:setting-FILE_UPLOAD_HANDLERS", "title": null, "block_type": "LinkBlock"}, {"text": " are used for handling uploaded files.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## filefield", "children": [{"text": "FileField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u0430.\n\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0443\u044e \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 FileField Django.", "children": [{"text": "A file representation.  Performs Django's standard FileField validation.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 `django.forms.fields.filefield`.", "children": [{"text": "Corresponds to ", "block_type": "TextBlock"}, {"code": "django.forms.fields.FileField", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c: ** `filefield (max_length = none, alluct_empty_file = false, use_url = uploaded_files_use_url)`", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "FileField(max_length=None, allow_empty_file=False, use_url=UPLOADED_FILES_USE_URL)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `max_length` - \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0434\u043b\u0438\u043d\u0443 \u0434\u043b\u044f \u0438\u043c\u0435\u043d\u0438 \u0444\u0430\u0439\u043b\u0430.\n* `allow_empty_file` - \u043d\u0430\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u044b \u043b\u0438 \u043f\u0443\u0441\u0442\u044b\u0435 \u0444\u0430\u0439\u043b\u044b.\n* `use_url` - \u0435\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0432` true`, \u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a\u0438 URL \u0431\u0443\u0434\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f.\n\u0415\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0432 `false`, \u0442\u043e \u0434\u043b\u044f \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0431\u0443\u0434\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0430\u0432\u0438\u0448\u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a `uploaded_files_use_url`, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f` true`, \u0435\u0441\u043b\u0438 \u043d\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0438\u043d\u043e\u0435.", "children": [{"children": [{"code": "max_length", "block_type": "CodeSpanBlock"}, {"text": " - Designates the maximum length for the file name.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "allow_empty_file", "block_type": "CodeSpanBlock"}, {"text": " - Designates if empty files are allowed.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "use_url", "block_type": "CodeSpanBlock"}, {"text": " - If set to ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": " then URL string values will be used for the output representation. If set to ", "block_type": "TextBlock"}, {"code": "False", "block_type": "CodeSpanBlock"}, {"text": " then filename string values will be used for the output representation. Defaults to the value of the ", "block_type": "TextBlock"}, {"code": "UPLOADED_FILES_USE_URL", "block_type": "CodeSpanBlock"}, {"text": " settings key, which is ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": " unless set otherwise.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "## Imagefield", "children": [{"text": "ImageField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f.\n\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0439 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 \u0444\u0430\u0439\u043b\u0430 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0441\u043e\u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e\u0433\u043e \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f.", "children": [{"text": "An image representation. Validates the uploaded file content as matching a known image format.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 `django.forms.fields.imagefield`.", "children": [{"text": "Corresponds to ", "block_type": "TextBlock"}, {"code": "django.forms.fields.ImageField", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c: ** `Imagefield (max_length = none, alluct_empty_file = false, use_url = uploaded_files_use_url)`", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "ImageField(max_length=None, allow_empty_file=False, use_url=UPLOADED_FILES_USE_URL)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `max_length` - \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0434\u043b\u0438\u043d\u0443 \u0434\u043b\u044f \u0438\u043c\u0435\u043d\u0438 \u0444\u0430\u0439\u043b\u0430.\n* `allow_empty_file` - \u043d\u0430\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u044b \u043b\u0438 \u043f\u0443\u0441\u0442\u044b\u0435 \u0444\u0430\u0439\u043b\u044b.\n* `use_url` - \u0435\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0432` true`, \u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a\u0438 URL \u0431\u0443\u0434\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f.\n\u0415\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0432 `false`, \u0442\u043e \u0434\u043b\u044f \u0432\u044b\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0431\u0443\u0434\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043a\u043b\u0430\u0432\u0438\u0448\u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a `uploaded_files_use_url`, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f` true`, \u0435\u0441\u043b\u0438 \u043d\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0438\u043d\u043e\u0435.", "children": [{"children": [{"code": "max_length", "block_type": "CodeSpanBlock"}, {"text": " - Designates the maximum length for the file name.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "allow_empty_file", "block_type": "CodeSpanBlock"}, {"text": " - Designates if empty files are allowed.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "use_url", "block_type": "CodeSpanBlock"}, {"text": " - If set to ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": " then URL string values will be used for the output representation. If set to ", "block_type": "TextBlock"}, {"code": "False", "block_type": "CodeSpanBlock"}, {"text": " then filename string values will be used for the output representation. Defaults to the value of the ", "block_type": "TextBlock"}, {"code": "UPLOADED_FILES_USE_URL", "block_type": "CodeSpanBlock"}, {"text": " settings key, which is ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": " unless set otherwise.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "\u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043b\u0438\u0431\u043e \u043f\u0430\u043a\u0435\u0442 \u00ab\u043f\u043e\u0434\u0443\u0448\u043a\u0438\u00bb, \u043b\u0438\u0431\u043e \u043f\u0430\u043a\u0435\u0442 \u00abPIL\u00bb.\n\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043f\u0430\u043a\u0435\u0442 \u00ab\u043f\u043e\u0434\u0443\u0448\u043a\u0438\u00bb, \u0442\u0430\u043a \u043a\u0430\u043a \u00abPIL\u00bb \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f.", "children": [{"text": "Requires either the ", "block_type": "TextBlock"}, {"code": "Pillow", "block_type": "CodeSpanBlock"}, {"text": " package or ", "block_type": "TextBlock"}, {"code": "PIL", "block_type": "CodeSpanBlock"}, {"text": " package.  The ", "block_type": "TextBlock"}, {"code": "Pillow", "block_type": "CodeSpanBlock"}, {"text": " package is recommended, as ", "block_type": "TextBlock"}, {"code": "PIL", "block_type": "CodeSpanBlock"}, {"text": " is no longer actively maintained.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# \u0421\u043e\u0441\u0442\u0430\u0432\u043d\u044b\u0435 \u043f\u043e\u043b\u044f", "children": [{"text": "Composite fields", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "## Listfield", "children": [{"text": "ListField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u043e\u043b\u0435\u0432\u043e\u0439 \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432.", "children": [{"text": "A field class that validates a list of objects.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c **: `listfield (child = <a_field_instance>, allow_empty = true, min_length = none, max_length = none)`", "children": [{"children": [{"text": "Signature", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ": ", "block_type": "TextBlock"}, {"code": "ListField(child=<A_FIELD_INSTANCE>, allow_empty=True, min_length=None, max_length=None)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `Child` - \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043f\u043e\u043b\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435.\n\u0415\u0441\u043b\u0438 \u044d\u0442\u043e\u0442 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043d\u0435 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d, \u0442\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u044b.\n* `allow_empty` - \u043d\u0430\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u044b \u043b\u0438 \u043f\u0443\u0441\u0442\u044b\u0435 \u0441\u043f\u0438\u0441\u043a\u0438.\n* `min_length` - \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442, \u0447\u0442\u043e \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0435 \u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \u044d\u0442\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.\n* `max_length` - \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442, \u0447\u0442\u043e \u0441\u043f\u0438\u0441\u043e\u043a \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0435 \u0431\u043e\u043b\u044c\u0448\u0435 \u044d\u0442\u043e\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.", "children": [{"children": [{"code": "child", "block_type": "CodeSpanBlock"}, {"text": " - A field instance that should be used for validating the objects in the list. If this argument is not provided then objects in the list will not be validated.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "allow_empty", "block_type": "CodeSpanBlock"}, {"text": " - Designates if empty lists are allowed.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "min_length", "block_type": "CodeSpanBlock"}, {"text": " - Validates that the list contains no fewer than this number of elements.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "max_length", "block_type": "CodeSpanBlock"}, {"text": " - Validates that the list contains no more than this number of elements.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0447\u0442\u043e -\u0442\u043e \u0432\u0440\u043e\u0434\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e:", "children": [{"text": "For example, to validate a list of integers you might use something like the following:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "scores = serializers.ListField(\n   child=serializers.IntegerField(min_value=0, max_value=100)\n)", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041a\u043b\u0430\u0441\u0441 `Listfield` \u0442\u0430\u043a\u0436\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0434\u0435\u043a\u043b\u0430\u0440\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u0430\u043c \u043f\u0438\u0441\u0430\u0442\u044c \u043c\u043d\u043e\u0433\u043e\u043a\u0440\u0430\u0442\u043d\u044b\u0435 \u043f\u043e\u043b\u0435\u0432\u044b\u0435 \u043a\u043b\u0430\u0441\u0441\u044b Listable.", "children": [{"text": "The ", "block_type": "TextBlock"}, {"code": "ListField", "block_type": "CodeSpanBlock"}, {"text": " class also supports a declarative style that allows you to write reusable list field classes.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "class StringListField(serializers.ListField):\n    child = serializers.CharField()", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0422\u0435\u043f\u0435\u0440\u044c \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043d\u0430\u0448 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u043a\u043b\u0430\u0441\u0441 `stringlistfield` \u043d\u0430 \u043f\u0440\u043e\u0442\u044f\u0436\u0435\u043d\u0438\u0438 \u0432\u0441\u0435\u0433\u043e \u043d\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043d\u0435 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044f \u0435\u043c\u0443 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u00ab \u0440\u0435\u0431\u0435\u043d\u043a\u0430 \u00bb.", "children": [{"text": "We can now reuse our custom ", "block_type": "TextBlock"}, {"code": "StringListField", "block_type": "CodeSpanBlock"}, {"text": " class throughout our application, without having to provide a ", "block_type": "TextBlock"}, {"code": "child", "block_type": "CodeSpanBlock"}, {"text": " argument to it.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## dictfield", "children": [{"text": "DictField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u043e\u043b\u0435\u0432\u043e\u0439 \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432.\n\u041a\u043b\u044e\u0447\u0438 \u0432 \u00abdictfield\u00bb \u0432\u0441\u0435\u0433\u0434\u0430 \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u044d\u0442\u043e \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.", "children": [{"text": "A field class that validates a dictionary of objects. The keys in ", "block_type": "TextBlock"}, {"code": "DictField", "block_type": "CodeSpanBlock"}, {"text": " are always assumed to be string values.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c **: `dictfield (child = <a_field_instance>, ally_empty = true)`", "children": [{"children": [{"text": "Signature", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ": ", "block_type": "TextBlock"}, {"code": "DictField(child=<A_FIELD_INSTANCE>, allow_empty=True)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `Child` - \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043f\u043e\u043b\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u0435.\n\u0415\u0441\u043b\u0438 \u044d\u0442\u043e\u0442 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043d\u0435 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d, \u0442\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0438 \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u044b.\n* `allow_empty` - \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u044b \u043b\u0438 \u043f\u0443\u0441\u0442\u044b\u0435 \u0441\u043b\u043e\u0432\u0430\u0440\u044f.", "children": [{"children": [{"code": "child", "block_type": "CodeSpanBlock"}, {"text": " - A field instance that should be used for validating the values in the dictionary. If this argument is not provided then values in the mapping will not be validated.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "allow_empty", "block_type": "CodeSpanBlock"}, {"text": " - Designates if empty dictionaries are allowed.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0447\u0442\u043e\u0431\u044b \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a \u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438, \u0432\u044b \u0431\u044b \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u0447\u0442\u043e -\u0442\u043e \u0432\u0440\u043e\u0434\u0435 \u044d\u0442\u043e\u0433\u043e:", "children": [{"text": "For example, to create a field that validates a mapping of strings to strings, you would write something like this:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "document = DictField(child=CharField())", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0412\u044b \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0435\u043a\u043b\u0430\u0440\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c, \u043a\u0430\u043a \u0441 `listfield`.\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:", "children": [{"text": "You can also use the declarative style, as with ", "block_type": "TextBlock"}, {"code": "ListField", "block_type": "CodeSpanBlock"}, {"text": ". For example:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "class DocumentField(DictField):\n    child = CharField()", "language": null, "block_type": "CodeBlock"}, {"translated_data": "## hstorefield", "children": [{"text": "HStoreField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0439 \u00abdictfield\u00bb, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c \u0441 \u043f\u043e\u0441\u0442\u0433\u0440\u0435\u0441\u043e\u043c \u0414\u0436\u0430\u043d\u0433\u043e \u00abhstorefield\u00bb.", "children": [{"text": "A preconfigured ", "block_type": "TextBlock"}, {"code": "DictField", "block_type": "CodeSpanBlock"}, {"text": " that is compatible with Django's postgres ", "block_type": "TextBlock"}, {"code": "HStoreField", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c **: `hstorefield (child = <a_field_instance>, ally_empty = true)`", "children": [{"children": [{"text": "Signature", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ": ", "block_type": "TextBlock"}, {"code": "HStoreField(child=<A_FIELD_INSTANCE>, allow_empty=True)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `Child` - \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043f\u043e\u043b\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u0435.\n\u0414\u0435\u0442\u0441\u043a\u043e\u0435 \u043f\u043e\u043b\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043a\u0430\u043a \u043f\u0443\u0441\u0442\u044b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438, \u0442\u0430\u043a \u0438 \u043d\u0443\u043b\u0435\u0432\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f.\n* `allow_empty` - \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u044b \u043b\u0438 \u043f\u0443\u0441\u0442\u044b\u0435 \u0441\u043b\u043e\u0432\u0430\u0440\u044f.", "children": [{"children": [{"code": "child", "block_type": "CodeSpanBlock"}, {"text": " - A field instance that is used for validating the values in the dictionary. The default child field accepts both empty strings and null values.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "allow_empty", "block_type": "CodeSpanBlock"}, {"text": " - Designates if empty dictionaries are allowed.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0434\u0435\u0442\u0441\u043a\u043e\u0435 \u043f\u043e\u043b\u0435 ** \u0434\u043e\u043b\u0436\u043d\u043e ** \u0431\u044b\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u043c `charfield`, \u0442\u0430\u043a \u043a\u0430\u043a \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 Hstore \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u0441\u0442\u0440\u043e\u043a.", "children": [{"text": "Note that the child field ", "block_type": "TextBlock"}, {"children": [{"text": "must", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " be an instance of ", "block_type": "TextBlock"}, {"code": "CharField", "block_type": "CodeSpanBlock"}, {"text": ", as the hstore extension stores values as strings.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## jsonfield", "children": [{"text": "JSONField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u043e\u043b\u0435\u0432\u043e\u0439 \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442, \u0447\u0442\u043e \u0432\u0445\u043e\u0434\u044f\u0449\u0430\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u043e\u0432 JSON.\n\u0412 \u0441\u0432\u043e\u0435\u043c \u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u043e\u043c \u0434\u0432\u043e\u0438\u0447\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u043e\u043d \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c\u044b\u0435 JSON \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438.", "children": [{"text": "A field class that validates that the incoming data structure consists of valid JSON primitives. In its alternate binary mode, it will represent and validate JSON-encoded binary strings.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u043f\u043e\u0434\u043f\u0438\u0441\u044c **: `jsonfield (\u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0439, \u044d\u043d\u043a\u043e\u0434\u0435\u0440)`", "children": [{"children": [{"text": "Signature", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ": ", "block_type": "TextBlock"}, {"code": "JSONField(binary, encoder)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `Binary` - \u0435\u0441\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u0432` true`, \u0442\u043e \u043f\u043e\u043b\u0435 \u0432\u044b\u0432\u0435\u0434\u0435\u0442 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443, \u0437\u0430\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e JSON, \u0430 \u043d\u0435 \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u043d\u0443\u044e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0434\u0430\u043d\u043d\u044b\u0445.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u00ab\u043b\u043e\u0436\u044c\u00bb.\n* `encoder` - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u044d\u0442\u043e\u0442 \u044d\u043d\u043a\u043e\u0434\u0435\u0440 JSON \u0434\u043b\u044f \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0432\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u00ab\u043d\u0435\u0442\u00bb.", "children": [{"children": [{"code": "binary", "block_type": "CodeSpanBlock"}, {"text": " - If set to ", "block_type": "TextBlock"}, {"code": "True", "block_type": "CodeSpanBlock"}, {"text": " then the field will output and validate a JSON encoded string, rather than a primitive data structure. Defaults to ", "block_type": "TextBlock"}, {"code": "False", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "encoder", "block_type": "CodeSpanBlock"}, {"text": " - Use this JSON encoder to serialize input object. Defaults to ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# \u0420\u0430\u0437\u043d\u044b\u0435 \u043f\u043e\u043b\u044f", "children": [{"text": "Miscellaneous fields", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "## readonlyfield", "children": [{"text": "ReadOnlyField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u043e\u043b\u0435\u0432\u043e\u0439 \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u043e\u0441\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044f \u0431\u0435\u0437 \u043c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438.", "children": [{"text": "A field class that simply returns the value of the field without modification.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u042d\u0442\u043e \u043f\u043e\u043b\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0441 `moderializer` \u043f\u0440\u0438 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438 \u0438\u043c\u0435\u043d \u043f\u043e\u043b\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043d\u043e\u0441\u044f\u0442\u0441\u044f \u043a \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0443, \u0430 \u043d\u0435 \u043f\u043e \u043f\u043e\u043b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438.", "children": [{"text": "This field is used by default with ", "block_type": "TextBlock"}, {"code": "ModelSerializer", "block_type": "CodeSpanBlock"}, {"text": " when including field names that relate to an attribute rather than a model field.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c **: `readonlyfield ()`", "children": [{"children": [{"text": "Signature", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ": ", "block_type": "TextBlock"}, {"code": "ReadOnlyField()", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0435\u0441\u043b\u0438 `has_expired` \u0431\u044b\u043b \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e\u043c \u043d\u0430 \u043c\u043e\u0434\u0435\u043b\u0438` choucchting`, \u0442\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0435\u0433\u043e \u043a\u0430\u043a `readonlyfield`:", "children": [{"text": "For example, if ", "block_type": "TextBlock"}, {"code": "has_expired", "block_type": "CodeSpanBlock"}, {"text": " was a property on the ", "block_type": "TextBlock"}, {"code": "Account", "block_type": "CodeSpanBlock"}, {"text": " model, then the following serializer would automatically generate it as a ", "block_type": "TextBlock"}, {"code": "ReadOnlyField", "block_type": "CodeSpanBlock"}, {"text": ":", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "class AccountSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Account\n        fields = ['id', 'account_name', 'has_expired']", "language": null, "block_type": "CodeBlock"}, {"translated_data": "## Hiddenfield", "children": [{"text": "HiddenField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u043e\u043b\u0435\u0432\u043e\u0439 \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0432\u0432\u043e\u0434\u0430, \u043d\u043e \u0432\u043c\u0435\u0441\u0442\u043e \u044d\u0442\u043e\u0433\u043e \u0431\u0435\u0440\u0435\u0442 \u0441\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0438\u0437 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438\u043b\u0438 Callable.", "children": [{"text": "A field class that does not take a value based on user input, but instead takes its value from a default value or callable.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u043f\u043e\u0434\u043f\u0438\u0441\u044c **: `hiddenfield ()`", "children": [{"children": [{"text": "Signature", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ": ", "block_type": "TextBlock"}, {"code": "HiddenField()", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0447\u0442\u043e\u0431\u044b \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u0441\u0435\u0433\u0434\u0430 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f \u043a\u0430\u043a \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430, \u0432\u044b \u0431\u0443\u0434\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435:", "children": [{"text": "For example, to include a field that always provides the current time as part of the serializer validated data, you would use the following:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "modified = serializers.HiddenField(default=timezone.now)", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041a\u043b\u0430\u0441\u0441 \u00abHiddenfield\u00bb \u043e\u0431\u044b\u0447\u043d\u043e \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043f\u043e\u043b\u044f, \u043d\u043e \u0432\u044b \u043d\u0435 \u0445\u043e\u0442\u0438\u0442\u0435 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0432\u0441\u0435 \u044d\u0442\u0438 \u043f\u043e\u043b\u044f \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u043c\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e.", "children": [{"text": "The ", "block_type": "TextBlock"}, {"code": "HiddenField", "block_type": "CodeSpanBlock"}, {"text": " class is usually only needed if you have some validation that needs to run based on some pre-provided field values, but you do not want to expose all of those fields to the end user.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0414\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0438\u0445 \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u0432 \u043d\u0430 `hiddenfield` \u0441\u043c. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e [validators] (validators.md).", "children": [{"text": "For further examples on ", "block_type": "TextBlock"}, {"code": "HiddenField", "block_type": "CodeSpanBlock"}, {"text": " see the ", "block_type": "TextBlock"}, {"children": [{"text": "validators", "block_type": "TextBlock"}], "url": "validators.md", "title": null, "block_type": "LinkBlock"}, {"text": " documentation.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## modelfield", "children": [{"text": "ModelField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041e\u0431\u0449\u0435\u0435 \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0441\u0432\u044f\u0437\u0430\u043d\u043e \u0441 \u043b\u044e\u0431\u044b\u043c \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u044b\u043c \u043f\u043e\u043b\u0435\u043c \u043c\u043e\u0434\u0435\u043b\u0438.\n\u041a\u043b\u0430\u0441\u0441 `modelfield` \u0434\u0435\u043b\u0435\u0433\u0438\u0440\u0443\u0435\u0442 \u0437\u0430\u0434\u0430\u0447\u0443 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438/\u0434\u0435\u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0432 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u043e\u0435 \u0441 \u043d\u0438\u043c \u043f\u043e\u043b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438.\n\u042d\u0442\u043e \u043f\u043e\u043b\u0435 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u043e\u043b\u0435\u0439 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430 \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u043f\u043e\u043b\u0435\u0439 \u043c\u043e\u0434\u0435\u043b\u0438, \u0431\u0435\u0437 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u043f\u043e\u043b\u044f \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430.", "children": [{"text": "A generic field that can be tied to any arbitrary model field. The ", "block_type": "TextBlock"}, {"code": "ModelField", "block_type": "CodeSpanBlock"}, {"text": " class delegates the task of serialization/deserialization to its associated model field.  This field can be used to create serializer fields for custom model fields, without having to create a new custom serializer field.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u042d\u0442\u043e \u043f\u043e\u043b\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f `modelseRializer` \u0434\u043b\u044f \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u043c \u043a\u043b\u0430\u0441\u0441\u0430\u043c \u043f\u043e\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438.", "children": [{"text": "This field is used by ", "block_type": "TextBlock"}, {"code": "ModelSerializer", "block_type": "CodeSpanBlock"}, {"text": " to correspond to custom model field classes.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u041f\u043e\u0434\u043f\u0438\u0441\u044c: ** `modelfield (model_field = <django modelfield \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440>)`", "children": [{"children": [{"text": "Signature:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "ModelField(model_field=<Django ModelField instance>)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041a\u043b\u0430\u0441\u0441 `modelfield` \u043e\u0431\u044b\u0447\u043d\u043e \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d \u0434\u043b\u044f \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f, \u043d\u043e \u043c\u043e\u0436\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432\u0430\u0448\u0438\u043c API, \u0435\u0441\u043b\u0438 \u044d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e.\n\u0427\u0442\u043e\u0431\u044b \u0434\u043e\u043b\u0436\u043d\u044b\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u00abModelfield\u00bb, \u0435\u0433\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u043e\u0439\u0442\u0438 \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u0440\u0438\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u043e \u043a \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438.\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: `modelfield (model_field = mymodel () ._ meta.get_field ('custom_field'))`", "children": [{"text": "The ", "block_type": "TextBlock"}, {"code": "ModelField", "block_type": "CodeSpanBlock"}, {"text": " class is generally intended for internal use, but can be used by your API if needed.  In order to properly instantiate a ", "block_type": "TextBlock"}, {"code": "ModelField", "block_type": "CodeSpanBlock"}, {"text": ", it must be passed a field that is attached to an instantiated model.  For example: ", "block_type": "TextBlock"}, {"code": "ModelField(model_field=MyModel()._meta.get_field('custom_field'))", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "## serializermethodfield", "children": [{"text": "SerializerMethodField", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u042d\u0442\u043e \u043f\u043e\u043b\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f.\n\u041e\u043d \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0432\u044b\u0437\u044b\u0432\u0430\u044f \u043c\u0435\u0442\u043e\u0434 \u0432 \u043a\u043b\u0430\u0441\u0441\u0435 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430, \u043a \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043e\u043d \u043f\u0440\u0438\u043a\u0440\u0435\u043f\u043b\u0435\u043d.\n\u0415\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043b\u044e\u0431\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u043a \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044e \u0432\u0430\u0448\u0435\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430.", "children": [{"text": "This is a read-only field. It gets its value by calling a method on the serializer class it is attached to. It can be used to add any sort of data to the serialized representation of your object.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "** \u043f\u043e\u0434\u043f\u0438\u0441\u044c **: `serializermethodfield (method_name = none)`", "children": [{"children": [{"text": "Signature", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ": ", "block_type": "TextBlock"}, {"code": "SerializerMethodField(method_name=None)", "block_type": "CodeSpanBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `method_name` - \u0418\u043c\u044f \u043c\u0435\u0442\u043e\u0434\u0430 \u043d\u0430 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u043d.\n\u0415\u0441\u043b\u0438 \u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u044d\u0442\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u0447\u0442\u043e\u0431\u044b `get_ <field_name>`.", "children": [{"children": [{"code": "method_name", "block_type": "CodeSpanBlock"}, {"text": " - The name of the method on the serializer to be called. If not included this defaults to ", "block_type": "TextBlock"}, {"code": "get_<field_name>", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "\u041c\u0435\u0442\u043e\u0434 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430, \u0443\u043f\u043e\u043c\u044f\u043d\u0443\u0442\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c `method_name`, \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u0440\u0438\u043d\u044f\u0442\u044c \u0435\u0434\u0438\u043d\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 (\u0432 \u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043a\u00ab self \u00bb), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c.\n\u041e\u043d \u0434\u043e\u043b\u0436\u0435\u043d \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0432\u0441\u0435, \u0447\u0442\u043e \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435, \u0447\u0442\u043e\u0431\u044b \u0431\u044b\u0442\u044c \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u043c \u0432 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430.\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:", "children": [{"text": "The serializer method referred to by the ", "block_type": "TextBlock"}, {"code": "method_name", "block_type": "CodeSpanBlock"}, {"text": " argument should accept a single argument (in addition to ", "block_type": "TextBlock"}, {"code": "self", "block_type": "CodeSpanBlock"}, {"text": "), which is the object being serialized. It should return whatever you want to be included in the serialized representation of the object. For example:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "from django.contrib.auth.models import User\nfrom django.utils.timezone import now\nfrom rest_framework import serializers\n\nclass UserSerializer(serializers.ModelSerializer):\n    days_since_joined = serializers.SerializerMethodField()\n\n    class Meta:\n        model = User\n        fields = '__all__'\n\n    def get_days_since_joined(self, obj):\n        return (now() - obj.date_joined).days", "language": null, "block_type": "CodeBlock"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# \u041d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u043c\u044b\u0435 \u043f\u043e\u043b\u044f", "children": [{"text": "Custom fields", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "\u0415\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u043f\u043e\u043b\u0435, \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441 \u00abField\u00bb, \u0430 \u0437\u0430\u0442\u0435\u043c \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043e\u0434\u0438\u043d \u0438\u043b\u0438 \u043e\u0431\u0430 \u0438\u0437 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 `.to_representation ()` \u0438 `.to_internal_value ()`.\n\u042d\u0442\u0438 \u0434\u0432\u0430 \u043c\u0435\u0442\u043e\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u043c \u0434\u0430\u0442\u043e\u043c \u0438 \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u043d\u044b\u043c \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0443\u0435\u043c\u044b\u043c \u0434\u0430\u043d\u043d\u044b\u0445.\n\u041f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0434\u0430\u0442\u0430, \u043a\u0430\u043a \u043f\u0440\u0430\u0432\u0438\u043b\u043e, \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043b\u044e\u0431\u044b\u043c \u0447\u0438\u0441\u043b\u043e\u043c, \u0441\u0442\u0440\u043e\u043a\u043e\u0439, \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u043c, `date`/` time`/`datetime` \u0438\u043b\u0438` none`.\n\u041e\u043d\u0438 \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043b\u044e\u0431\u044b\u043c \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u0438\u043b\u0438 \u0441\u043b\u043e\u0432\u0430\u0440\u043d\u044b\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u043d\u044b\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b.\n\u0414\u0440\u0443\u0433\u0438\u0435 \u0442\u0438\u043f\u044b \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0430\u043d\u044b, \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0440\u0435\u043d\u0434\u0435\u0440\u0438\u043d\u0433\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435.", "children": [{"text": "If you want to create a custom field, you'll need to subclass ", "block_type": "TextBlock"}, {"code": "Field", "block_type": "CodeSpanBlock"}, {"text": " and then override either one or both of the ", "block_type": "TextBlock"}, {"code": ".to_representation()", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": ".to_internal_value()", "block_type": "CodeSpanBlock"}, {"text": " methods.  These two methods are used to convert between the initial datatype, and a primitive, serializable datatype. Primitive datatypes will typically be any of a number, string, boolean, ", "block_type": "TextBlock"}, {"code": "date", "block_type": "CodeSpanBlock"}, {"text": "/", "block_type": "TextBlock"}, {"code": "time", "block_type": "CodeSpanBlock"}, {"text": "/", "block_type": "TextBlock"}, {"code": "datetime", "block_type": "CodeSpanBlock"}, {"text": " or ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": ". They may also be any list or dictionary like object that only contains other primitive objects. Other types might be supported, depending on the renderer that you are using.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041c\u0435\u0442\u043e\u0434 `.to_representation ()` \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0434\u0430\u0442\u0430 \u0432 \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u043d\u044b\u0439, \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0443\u0435\u043c\u044b\u0439 \u0434\u0430\u043d\u043d\u044b\u0445.", "children": [{"text": "The ", "block_type": "TextBlock"}, {"code": ".to_representation()", "block_type": "CodeSpanBlock"}, {"text": " method is called to convert the initial datatype into a primitive, serializable datatype.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041c\u0435\u0442\u043e\u0434 `.to_internal_value ()` \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u043c\u0438\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0441\u0432\u043e\u0435\u043c \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0438 Python.\n\u042d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434 \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u043e\u0434\u043d\u044f\u0442\u044c `serializers.validationError`, \u0435\u0441\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b.", "children": [{"text": "The ", "block_type": "TextBlock"}, {"code": ".to_internal_value()", "block_type": "CodeSpanBlock"}, {"text": " method is called to restore a primitive datatype into its internal python representation. This method should raise a ", "block_type": "TextBlock"}, {"code": "serializers.ValidationError", "block_type": "CodeSpanBlock"}, {"text": " if the data is invalid.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## \u041f\u0440\u0438\u043c\u0435\u0440\u044b", "children": [{"text": "Examples", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "### \u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u043f\u043e\u043b\u0435", "children": [{"text": "A Basic Custom Field", "block_type": "TextBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "\u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u043f\u0440\u0438\u043c\u0435\u0440 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043a\u043b\u0430\u0441\u0441\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0446\u0432\u0435\u0442\u0430 RGB:", "children": [{"text": "Let's look at an example of serializing a class that represents an RGB color value:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "class Color:\n    \"\"\"\n    A color represented in the RGB colorspace.\n    \"\"\"\n    def __init__(self, red, green, blue):\n        assert(red >= 0 and green >= 0 and blue >= 0)\n        assert(red < 256 and green < 256 and blue < 256)\n        self.red, self.green, self.blue = red, green, blue\n\nclass ColorField(serializers.Field):\n    \"\"\"\n    Color objects are serialized into 'rgb(#, #, #)' notation.\n    \"\"\"\n    def to_representation(self, value):\n        return \"rgb(%d, %d, %d)\" % (value.red, value.green, value.blue)\n\n    def to_internal_value(self, data):\n        data = data.strip('rgb(').rstrip(')')\n        red, green, blue = [int(col) for col in data.split(',')]\n        return Color(red, green, blue)", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u043b\u044f \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u043a\u0430\u043a \u0441\u043e\u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0441 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u043c \u043d\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u0435.\n\u0415\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c, \u043a\u0430\u043a \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e \u043f\u043e\u043b\u044f \u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e, \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c `.get_attribute ()` \u0438/\u0438\u043b\u0438 `.get_value ()`.", "children": [{"text": "By default field values are treated as mapping to an attribute on the object.  If you need to customize how the field value is accessed and set you need to override ", "block_type": "TextBlock"}, {"code": ".get_attribute()", "block_type": "CodeSpanBlock"}, {"text": " and/or ", "block_type": "TextBlock"}, {"code": ".get_value()", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u0430, \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043f\u043e\u043b\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0438\u043c\u0435\u043d\u0438 \u043a\u043b\u0430\u0441\u0441\u0430 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430:", "children": [{"text": "As an example, let's create a field that can be used to represent the class name of the object being serialized:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "class ClassNameField(serializers.Field):\n    def get_attribute(self, instance):\n        # We pass the object instance onto `to_representation`,\n        # not just the field attribute.\n        return instance\n\n    def to_representation(self, value):\n        \"\"\"\n        Serialize the value's class name.\n        \"\"\"\n        return value.__class__.__name__", "language": null, "block_type": "CodeBlock"}, {"translated_data": "### \u043f\u043e\u0432\u044b\u0448\u0435\u043d\u0438\u0435 \u043e\u0448\u0438\u0431\u043e\u043a \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438", "children": [{"text": "Raising validation errors", "block_type": "TextBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "\u041d\u0430\u0448 \u043a\u043b\u0430\u0441\u0441 \u00abColorfield\u00bb \u0432\u044b\u0448\u0435 \u0432 \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0432\u0440\u0435\u043c\u044f \u043d\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043d\u0438\u043a\u0430\u043a\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0434\u0430\u043d\u043d\u044b\u0445.\n\u0427\u0442\u043e\u0431\u044b \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u043c\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u043e\u0434\u043d\u044f\u0442\u044c \u00abserializers.validationError\u00bb, \u043a\u0430\u043a \u0442\u0430\u043a:", "children": [{"text": "Our ", "block_type": "TextBlock"}, {"code": "ColorField", "block_type": "CodeSpanBlock"}, {"text": " class above currently does not perform any data validation.\nTo indicate invalid data, we should raise a ", "block_type": "TextBlock"}, {"code": "serializers.ValidationError", "block_type": "CodeSpanBlock"}, {"text": ", like so:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "def to_internal_value(self, data):\n    if not isinstance(data, str):\n        msg = 'Incorrect type. Expected a string, but got %s'\n        raise ValidationError(msg % type(data).__name__)\n\n    if not re.match(r'^rgb\\([0-9]+,[0-9]+,[0-9]+\\)$', data):\n        raise ValidationError('Incorrect format. Expected `rgb(#,#,#)`.')\n\n    data = data.strip('rgb(').rstrip(')')\n    red, green, blue = [int(col) for col in data.split(',')]\n\n    if any([col > 255 or col < 0 for col in (red, green, blue)]):\n        raise ValidationError('Value out of range. Must be between 0 and 255.')\n\n    return Color(red, green, blue)", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041c\u0435\u0442\u043e\u0434 `.fail ()` - \u044d\u0442\u043e \u044f\u0440\u043b\u044b\u043a \u0434\u043b\u044f \u043f\u043e\u0432\u044b\u0448\u0435\u043d\u0438\u044f `valyationError\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:", "children": [{"text": "The ", "block_type": "TextBlock"}, {"code": ".fail()", "block_type": "CodeSpanBlock"}, {"text": " method is a shortcut for raising ", "block_type": "TextBlock"}, {"code": "ValidationError", "block_type": "CodeSpanBlock"}, {"text": " that takes a message string from the ", "block_type": "TextBlock"}, {"code": "error_messages", "block_type": "CodeSpanBlock"}, {"text": " dictionary. For example:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "default_error_messages = {\n    'incorrect_type': 'Incorrect type. Expected a string, but got {input_type}',\n    'incorrect_format': 'Incorrect format. Expected `rgb(#,#,#)`.',\n    'out_of_range': 'Value out of range. Must be between 0 and 255.'\n}\n\ndef to_internal_value(self, data):\n    if not isinstance(data, str):\n        self.fail('incorrect_type', input_type=type(data).__name__)\n\n    if not re.match(r'^rgb\\([0-9]+,[0-9]+,[0-9]+\\)$', data):\n        self.fail('incorrect_format')\n\n    data = data.strip('rgb(').rstrip(')')\n    red, green, blue = [int(col) for col in data.split(',')]\n\n    if any([col > 255 or col < 0 for col in (red, green, blue)]):\n        self.fail('out_of_range')\n\n    return Color(red, green, blue)", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u042d\u0442\u043e\u0442 \u0441\u0442\u0438\u043b\u044c \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0432\u0430\u0448\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0430\u0445 \u0447\u0438\u0449\u0435 \u0438 \u0431\u043e\u043b\u0435\u0435 \u043e\u0442\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c \u043e\u0442 \u0432\u0430\u0448\u0435\u0433\u043e \u043a\u043e\u0434\u0430, \u0438 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c.", "children": [{"text": "This style keeps your error messages cleaner and more separated from your code, and should be preferred.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "### \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e `source = '*'` `", "children": [{"text": "Using ", "block_type": "TextBlock"}, {"code": "source='*'", "block_type": "CodeSpanBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "\u0417\u0434\u0435\u0441\u044c \u043c\u044b \u0432\u043e\u0437\u044c\u043c\u0435\u043c \u043f\u0440\u0438\u043c\u0435\u0440 \u043c\u043e\u0434\u0435\u043b\u0438 * \u0440\u043e\u0432\u043d\u043e\u0439 * `DataPoint` \u0441 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430\u043c\u0438` x_coordination` \u0438 `y_coordinate`.", "children": [{"text": "Here we'll take an example of a ", "block_type": "TextBlock"}, {"children": [{"text": "flat", "block_type": "TextBlock"}], "block_type": "EmphasisTextBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "DataPoint", "block_type": "CodeSpanBlock"}, {"text": " model with ", "block_type": "TextBlock"}, {"code": "x_coordinate", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "y_coordinate", "block_type": "CodeSpanBlock"}, {"text": " attributes.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "class DataPoint(models.Model):\n    label = models.CharField(max_length=50)\n    x_coordinate = models.SmallIntegerField()\n    y_coordinate = models.SmallIntegerField()", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u043f\u043e\u043b\u044f \u0438 `source = '*' \u041c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\n\u041a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u043d\u0430\u044f \u043f\u0430\u0440\u0430:", "children": [{"text": "Using a custom field and ", "block_type": "TextBlock"}, {"code": "source='*'", "block_type": "CodeSpanBlock"}, {"text": " we can provide a nested representation of\nthe coordinate pair:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "class CoordinateField(serializers.Field):\n\n    def to_representation(self, value):\n        ret = {\n            \"x\": value.x_coordinate,\n            \"y\": value.y_coordinate\n        }\n        return ret\n\n    def to_internal_value(self, data):\n        ret = {\n            \"x_coordinate\": data[\"x\"],\n            \"y_coordinate\": data[\"y\"],\n        }\n        return ret\n\n\nclass DataPointSerializer(serializers.ModelSerializer):\n    coordinates = CoordinateField(source='*')\n\n    class Meta:\n        model = DataPoint\n        fields = ['label', 'coordinates']", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u044d\u0442\u043e\u0442 \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0435 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443.\n\u0427\u0430\u0441\u0442\u0438\u0447\u043d\u043e \u043f\u043e \u044d\u0442\u043e\u0439 \u043f\u0440\u0438\u0447\u0438\u043d\u0435, \u0432\n\u041d\u0430\u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u043f\u0440\u043e\u0435\u043a\u0442, \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u043d\u043e\u0435 \u0433\u043d\u0435\u0437\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043b\u0443\u0447\u0448\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043e \u0441 \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u043c \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u043e\u043c\n\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 `source = '*'`, \u0441 \u0434\u0432\u0443\u043c\u044f \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430\u043c\u0438 `integerfield`, \u043a\u0430\u0436\u0434\u044b\u0439 \u0441\u043e \u0441\u0432\u043e\u0438\u043c \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u043c\u00ab \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u043e\u043c \u00bb\n\u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044f \u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0435 \u043f\u043e\u043b\u0435.", "children": [{"text": "Note that this example doesn't handle validation. Partly for that reason, in a\nreal project, the coordinate nesting might be better handled with a nested serializer\nusing ", "block_type": "TextBlock"}, {"code": "source='*'", "block_type": "CodeSpanBlock"}, {"text": ", with two ", "block_type": "TextBlock"}, {"code": "IntegerField", "block_type": "CodeSpanBlock"}, {"text": " instances, each with their own ", "block_type": "TextBlock"}, {"code": "source", "block_type": "CodeSpanBlock"}, {"text": "\npointing to the relevant field.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041a\u043b\u044e\u0447\u0435\u0432\u044b\u043c\u0438 \u043c\u043e\u043c\u0435\u043d\u0442\u0430\u043c\u0438 \u0438\u0437 \u043f\u0440\u0438\u043c\u0435\u0440\u0430, \u043e\u0434\u043d\u0430\u043a\u043e, \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f:", "children": [{"text": "The key points from the example, though, are:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `to_representation` \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442\u0441\u044f \u0432\u0435\u0441\u044c \u043e\u0431\u044a\u0435\u043a\u0442 DataPoint '\u0438 \u0434\u043e\u043b\u0436\u0435\u043d \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c \u0438\u0437 \u044d\u0442\u043e\u0433\u043e", "children": [{"children": [{"code": "to_representation", "block_type": "CodeSpanBlock"}, {"text": " is passed the entire ", "block_type": "TextBlock"}, {"code": "DataPoint", "block_type": "CodeSpanBlock"}, {"text": " object and must map from that", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "\u043a \u0436\u0435\u043b\u0430\u0435\u043c\u043e\u043c\u0443 \u0432\u044b\u0432\u043e\u0434\u0443.", "children": [{"text": "to the desired output.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": ">>> instance = DataPoint(label='Example', x_coordinate=1, y_coordinate=2)\n    >>> out_serializer = DataPointSerializer(instance)\n    >>> out_serializer.data\n    ReturnDict([('label', 'Example'), ('coordinates', {'x': 1, 'y': 2})])", "language": null, "block_type": "CodeBlock"}, {"translated_data": "* \u0415\u0441\u043b\u0438 \u043d\u0430\u0448\u0435 \u043f\u043e\u043b\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f, `to_internal_value", "children": [{"children": [{"text": "Unless our field is to be read-only, ", "block_type": "TextBlock"}, {"code": "to_internal_value", "block_type": "CodeSpanBlock"}, {"text": " must map back to a dict", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "\u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u0430\u0448\u0435\u0433\u043e \u0446\u0435\u043b\u0435\u0432\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430.\n\u0421 `source = '*'` return \u043e\u0442\n`TO_INTERNAL_VALUE` \u0431\u0443\u0434\u0435\u0442 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0442\u044c \u0432\u0435\u0440\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043a\u043e\u0440\u043d\u0435\u0432\u043e\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0434\u0430\u043d\u043d\u044b\u0445, \u0430 \u043d\u0435 \u043e\u0434\u0438\u043d \u043a\u043b\u044e\u0447.", "children": [{"text": "suitable for updating our target object. With ", "block_type": "TextBlock"}, {"code": "source='*'", "block_type": "CodeSpanBlock"}, {"text": ", the return from\n", "block_type": "TextBlock"}, {"code": "to_internal_value", "block_type": "CodeSpanBlock"}, {"text": " will update the root validated data dictionary, rather than a single key.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": ">>> data = {\n    ...     \"label\": \"Second Example\",\n    ...     \"coordinates\": {\n    ...         \"x\": 3,\n    ...         \"y\": 4,\n    ...     }\n    ... }\n    >>> in_serializer = DataPointSerializer(data=data)\n    >>> in_serializer.is_valid()\n    True\n    >>> in_serializer.validated_data\n    OrderedDict([('label', 'Second Example'),\n                 ('y_coordinate', 4),\n                 ('x_coordinate', 3)])", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0414\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0442\u044b \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u043d\u043e\u0432\u0430 \u0441\u0434\u0435\u043b\u0430\u0435\u043c \u0442\u043e \u0436\u0435 \u0441\u0430\u043c\u043e\u0435, \u043d\u043e \u0441 \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u043c \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u043e\u043c\n\u041f\u043e\u0434\u0445\u043e\u0434 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u043e \u0432\u044b\u0448\u0435:", "children": [{"text": "For completeness lets do the same thing again but with the nested serializer\napproach suggested above:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "class NestedCoordinateSerializer(serializers.Serializer):\n    x = serializers.IntegerField(source='x_coordinate')\n    y = serializers.IntegerField(source='y_coordinate')\n\n\nclass DataPointSerializer(serializers.ModelSerializer):\n    coordinates = NestedCoordinateSerializer(source='*')\n\n    class Meta:\n        model = DataPoint\n        fields = ['label', 'coordinates']", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0417\u0434\u0435\u0441\u044c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u043f\u0430\u0440\u0430\u043c\u0438 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 \u0446\u0435\u043b\u0438 \u0438 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430 (`x` \u0438\n`x_coordinate`,` y` \u0438 `y_coordinate`) \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0432` integerfield`\n\u0434\u0435\u043a\u043b\u0430\u0440\u0430\u0446\u0438\u0438.\n\u042d\u0442\u043e \u043d\u0430\u0448 `nestedCoordinateSerializer`, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442` source = '*' `.", "children": [{"text": "Here the mapping between the target and source attribute pairs (", "block_type": "TextBlock"}, {"code": "x", "block_type": "CodeSpanBlock"}, {"text": " and\n", "block_type": "TextBlock"}, {"code": "x_coordinate", "block_type": "CodeSpanBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"code": "y", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "y_coordinate", "block_type": "CodeSpanBlock"}, {"text": ") is handled in the ", "block_type": "TextBlock"}, {"code": "IntegerField", "block_type": "CodeSpanBlock"}, {"text": "\ndeclarations. It's our ", "block_type": "TextBlock"}, {"code": "NestedCoordinateSerializer", "block_type": "CodeSpanBlock"}, {"text": " that takes ", "block_type": "TextBlock"}, {"code": "source='*'", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041d\u0430\u0448 \u043d\u043e\u0432\u044b\u0439 `DataPointSerializer` \u0434\u0435\u043c\u043e\u043d\u0441\u0442\u0440\u0438\u0440\u0443\u0435\u0442 \u0442\u043e \u0436\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435, \u0447\u0442\u043e \u0438 \u043d\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u043c \u043f\u043e\u043b\u0435\n\u043f\u043e\u0434\u0445\u043e\u0434.", "children": [{"text": "Our new ", "block_type": "TextBlock"}, {"code": "DataPointSerializer", "block_type": "CodeSpanBlock"}, {"text": " exhibits the same behaviour as the custom field\napproach.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0421\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f:", "children": [{"text": "Serializing:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": ">>> out_serializer = DataPointSerializer(instance)\n>>> out_serializer.data\nReturnDict([('label', 'testing'),\n            ('coordinates', OrderedDict([('x', 1), ('y', 2)]))])", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0414\u0435\u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f:", "children": [{"text": "Deserializing:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": ">>> in_serializer = DataPointSerializer(data=data)\n>>> in_serializer.is_valid()\nTrue\n>>> in_serializer.validated_data\nOrderedDict([('label', 'still testing'),\n             ('x_coordinate', 3),\n             ('y_coordinate', 4)])", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041d\u043e \u043c\u044b \u0442\u0430\u043a\u0436\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0443\u044e \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0431\u0435\u0441\u043f\u043b\u0430\u0442\u043d\u043e:", "children": [{"text": "But we also get the built-in validation for free:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": ">>> invalid_data = {\n...     \"label\": \"still testing\",\n...     \"coordinates\": {\n...         \"x\": 'a',\n...         \"y\": 'b',\n...     }\n... }\n>>> invalid_serializer = DataPointSerializer(data=invalid_data)\n>>> invalid_serializer.is_valid()\nFalse\n>>> invalid_serializer.errors\nReturnDict([('coordinates',\n             {'x': ['A valid integer is required.'],\n              'y': ['A valid integer is required.']})])", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041f\u043e \u044d\u0442\u043e\u0439 \u043f\u0440\u0438\u0447\u0438\u043d\u0435 \u043f\u043e\u0434\u0445\u043e\u0434 \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u043e\u0433\u043e \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430 \u0431\u0443\u0434\u0435\u0442 \u043f\u0435\u0440\u0432\u044b\u043c, \u043a\u0442\u043e \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u043b.\n\u0422\u044b\n\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u043f\u043e\u043b\u0435\u0432\u043e\u0439 \u043f\u043e\u0434\u0445\u043e\u0434, \u043a\u043e\u0433\u0434\u0430 \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0439 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0441\u044f \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u043c\n\u0438\u043b\u0438 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0441\u043b\u043e\u0436\u043d\u044b\u0439.", "children": [{"text": "For this reason, the nested serializer approach would be the first to try. You\nwould use the custom field approach when the nested serializer becomes infeasible\nor overly complex.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "# \u0421\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u044b", "children": [{"text": "Third party packages", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "\u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u044b \u0442\u0430\u043a\u0436\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b.", "children": [{"text": "The following third party packages are also available.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## \u0421\u041e\u041e\u0411\u0429\u0415\u041d\u0418\u042f", "children": [{"text": "DRF Compound Fields", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u0430\u043a\u0435\u0442 [drf-compound-fields] (https://drf-compound-fields.readthedocs.io) \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u00ab\u0441\u043e\u0441\u0442\u0430\u0432\u043d\u044b\u0435\u00bb \u043f\u043e\u043b\u044f \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u0441\u043f\u0438\u0441\u043a\u0438 \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043e\u043f\u0438\u0441\u0430\u043d\u044b \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u043f\u043e\u043b\u044f\u043c\u0438, \u0430 \u043d\u0435 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430\u043c\u0438 \u0441\n`mary = true` \u0432\u0430\u0440\u0438\u0430\u043d\u0442.\n\u0422\u0430\u043a\u0436\u0435 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u044b \u043f\u043e\u043b\u044f \u0434\u043b\u044f \u043d\u0430\u043f\u0435\u0447\u0430\u0442\u0430\u043d\u043d\u044b\u0445 \u0441\u043b\u043e\u0432\u0430\u0440\u0435\u0439 \u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043b\u0438\u0431\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c \u0442\u0438\u043f\u043e\u043c, \u043b\u0438\u0431\u043e \u0441\u043f\u0438\u0441\u043a\u043e\u043c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0442\u0430\u043a\u043e\u0433\u043e \u0442\u0438\u043f\u0430.", "children": [{"text": "The ", "block_type": "TextBlock"}, {"children": [{"text": "drf-compound-fields", "block_type": "TextBlock"}], "url": "https://drf-compound-fields.readthedocs.io", "title": null, "block_type": "LinkBlock"}, {"text": " package provides \"compound\" serializer fields, such as lists of simple values, which can be described by other fields rather than serializers with the ", "block_type": "TextBlock"}, {"code": "many=True", "block_type": "CodeSpanBlock"}, {"text": " option. Also provided are fields for typed dictionaries and values that can be either a specific type or a list of items of that type.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043b\u044f DRF", "children": [{"text": "DRF Extra Fields", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u0430\u043a\u0435\u0442 [https://github.com/hipo/drf-extra-fields) (https://github.com/hipo/drf-extra-fields), \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043a\u043b\u0430\u0441\u0441\u044b `base64imagefield` \u0438` pointfield`.", "children": [{"text": "The ", "block_type": "TextBlock"}, {"children": [{"text": "drf-extra-fields", "block_type": "TextBlock"}], "url": "https://github.com/Hipo/drf-extra-fields", "title": null, "block_type": "LinkBlock"}, {"text": " package provides extra serializer fields for REST framework, including ", "block_type": "TextBlock"}, {"code": "Base64ImageField", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "PointField", "block_type": "CodeSpanBlock"}, {"text": " classes.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## djangorestframework-recursive", "children": [{"text": "djangorestframework-recursive", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "[djangorestframework-recurive] (https://github.com/heywbj/django-rest-framework-recurisive) \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u00ab\u0440\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u043e\u0435 \u043f\u043e\u043b\u0435\u00bb \u0434\u043b\u044f \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0438 \u0434\u0435\u0442\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0440\u0435\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u044b\u0445 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440", "children": [{"text": "the ", "block_type": "TextBlock"}, {"children": [{"text": "djangorestframework-recursive", "block_type": "TextBlock"}], "url": "https://github.com/heywbj/django-rest-framework-recursive", "title": null, "block_type": "LinkBlock"}, {"text": " package provides a ", "block_type": "TextBlock"}, {"code": "RecursiveField", "block_type": "CodeSpanBlock"}, {"text": " for serializing and deserializing recursive structures", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## django-rest-framework-gis", "children": [{"text": "django-rest-framework-gis", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u0430\u043a\u0435\u0442 [django-rest-framework-gis] (https://github.com/djangonauts/django-rest-framework-gis) \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0433\u0435\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b REST Django, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440 Geometryfield` \u0438 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440 Geojson.", "children": [{"text": "The ", "block_type": "TextBlock"}, {"children": [{"text": "django-rest-framework-gis", "block_type": "TextBlock"}], "url": "https://github.com/djangonauts/django-rest-framework-gis", "title": null, "block_type": "LinkBlock"}, {"text": " package provides geographic addons for django rest framework like a  ", "block_type": "TextBlock"}, {"code": "GeometryField", "block_type": "CodeSpanBlock"}, {"text": " field and a GeoJSON serializer.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## django-rest-framework-hstore", "children": [{"text": "django-rest-framework-hstore", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0412 \u043f\u0430\u043a\u0435\u0442\u0435 [django-rest-framework-hstore] (https://github.com/djangonauts/django-rest-framework-hstore) \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 `hstorefield` \u0434\u043b\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 [django-hstore] (https://github.com\n/djangonauts/django-hstore) `Dictionaryfield's Model Field.", "children": [{"text": "The ", "block_type": "TextBlock"}, {"children": [{"text": "django-rest-framework-hstore", "block_type": "TextBlock"}], "url": "https://github.com/djangonauts/django-rest-framework-hstore", "title": null, "block_type": "LinkBlock"}, {"text": " package provides an ", "block_type": "TextBlock"}, {"code": "HStoreField", "block_type": "CodeSpanBlock"}, {"text": " to support ", "block_type": "TextBlock"}, {"children": [{"text": "django-hstore", "block_type": "TextBlock"}], "url": "https://github.com/djangonauts/django-hstore", "title": null, "block_type": "LinkBlock"}, {"text": " ", "block_type": "TextBlock"}, {"code": "DictionaryField", "block_type": "CodeSpanBlock"}, {"text": " model field.", "block_type": "TextBlock"}], "block_type": "Paragraph"}]}