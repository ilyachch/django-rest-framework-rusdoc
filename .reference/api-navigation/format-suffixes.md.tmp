{"source": "/home/ilyachch/Projects/OpenSource/django-rest-framework-rusdoc/.reference/api-navigation/format-suffixes.md", "blocks": [{"block_type": "SeparatorBlock"}, {"translated_data": "\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a:", "children": [{"text": "source:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "* urlpatterns.py", "children": [{"children": [{"text": "urlpatterns.py", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# \u0424\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u044b", "children": [{"text": "Format suffixes", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "> \u0412 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 6.2.1 \u043d\u0435 \u0433\u043e\u0432\u043e\u0440\u0438\u0442\u0441\u044f, \u0447\u0442\u043e \u0441\u043e\u0433\u043b\u0430\u0441\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e.\n>\n> - \u0420\u043e\u0439 \u0424\u0438\u043b\u0434\u0438\u043d\u0433, [\u0441\u043f\u0438\u0441\u043e\u043a \u0440\u0430\u0441\u0441\u044b\u043b\u043a\u0438 REST discuss](http://tech.groups.yahoo.com/group/rest-discuss/message/5857)", "children": [{"children": [{"text": "Section 6.2.1 does not say that content negotiation should be used all the time.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"block_type": "NewlineBlock"}, {"children": [{"text": "\u2014 Roy Fielding, ", "block_type": "TextBlock"}, {"children": [{"text": "REST discuss mailing list", "block_type": "TextBlock"}], "url": "http://tech.groups.yahoo.com/group/rest-discuss/message/5857", "title": null, "block_type": "LinkBlock"}], "block_type": "Paragraph"}], "block_type": "BlockQuote"}, {"translated_data": "\u041e\u0431\u0449\u0438\u043c \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u043c \u0434\u043b\u044f \u0432\u0435\u0431-\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0439 \u0438\u043c\u0435\u043d \u0444\u0430\u0439\u043b\u043e\u0432 \u0432 URL-\u0430\u0434\u0440\u0435\u0441\u0430\u0445 \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0439 \u0442\u043e\u0447\u043a\u0438 \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044f. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 'http://example.com/api/users.json' \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f JSON.", "children": [{"text": "A common pattern for Web APIs is to use filename extensions on URLs to provide an endpoint for a given media type. For example, 'http://example.com/api/users.json' to serve a JSON representation.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432 \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u043e\u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u043a \u043a\u0430\u0436\u0434\u043e\u0439 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 URLconf \u0434\u043b\u044f \u0432\u0430\u0448\u0435\u0433\u043e API \u0447\u0440\u0435\u0432\u0430\u0442\u043e \u043e\u0448\u0438\u0431\u043a\u0430\u043c\u0438 \u0438 \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0443 DRY, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 REST framework \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0431\u044b\u0441\u0442\u0440\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u044d\u0442\u0438\u0445 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432 \u0432 URLConf.", "children": [{"text": "Adding format-suffix patterns to each individual entry in the URLconf for your API is error-prone and non-DRY, so REST framework provides a shortcut to adding these patterns to your URLConf.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## format_suffix_patterns", "children": [{"text": "format_suffix_patterns", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "**\u041f\u043e\u0434\u043f\u0438\u0441\u044c**: format_suffix_patterns(urlpatterns, suffix_required=False, allowed=None)", "children": [{"children": [{"text": "Signature", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ": format_suffix_patterns(urlpatterns, suffix_required=False, allowed=None)", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432 URL, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0448\u0430\u0431\u043b\u043e\u043d\u044b \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u043e\u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0430, \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u043a \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0438\u0437 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432 URL.", "children": [{"text": "Returns a URL pattern list which includes format suffix patterns appended to each of the URL patterns provided.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b:", "children": [{"text": "Arguments:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "* **urlpatterns**: \u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f. \u0421\u043f\u0438\u0441\u043e\u043a \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432 URL.\n* **suffix_required**: \u041d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e. \u0411\u0443\u043b\u0435\u0432\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0449\u0435\u0435, \u0434\u043e\u043b\u0436\u043d\u044b \u043b\u0438 \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u044b \u0432 URL \u0431\u044b\u0442\u044c \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u0438\u043b\u0438 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e `False`, \u0447\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u044b \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b.\n* **\u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043e**: \u041d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e. \u0421\u043f\u0438\u0441\u043e\u043a \u0438\u043b\u0438 \u043a\u043e\u0440\u0442\u0435\u0436 \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0445 \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u043e\u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0430. \u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d, \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0448\u0430\u0431\u043b\u043e\u043d \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u0430 \u0444\u043e\u0440\u043c\u0430\u0442\u0430.", "children": [{"children": [{"children": [{"text": "urlpatterns", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ": Required. A URL pattern list.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"children": [{"text": "suffix_required", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ": Optional. A boolean indicating if suffixes in the URLs should be optional or mandatory. Defaults to ", "block_type": "TextBlock"}, {"code": "False", "block_type": "CodeSpanBlock"}, {"text": ", meaning that suffixes are optional by default.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"children": [{"text": "allowed", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ": Optional. A list or tuple of valid format suffixes. If not provided, a wildcard format suffix pattern will be used.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "\u041f\u0440\u0438\u043c\u0435\u0440:", "children": [{"text": "Example:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "from rest_framework.urlpatterns import format_suffix_patterns\nfrom blog import views\n\nurlpatterns = [\n    path('', views.apt_root),\n    path('comments/', views.comment_list),\n    path('comments/<int:pk>/', views.comment_detail)\n]\n\nurlpatterns = format_suffix_patterns(urlpatterns, allowed=['json', 'html'])", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 `format_suffix_patterns`, \u0432\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 `'format'` \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:", "children": [{"text": "When using ", "block_type": "TextBlock"}, {"code": "format_suffix_patterns", "block_type": "CodeSpanBlock"}, {"text": ", you must make sure to add the ", "block_type": "TextBlock"}, {"code": "'format'", "block_type": "CodeSpanBlock"}, {"text": " keyword argument to the corresponding views. For example:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "@api_view(['GET', 'POST'])\ndef comment_list(request, format=None):\n    # do stuff...", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0418\u043b\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0432\u0437\u0433\u043b\u044f\u0434\u043e\u0432, \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u043a\u043b\u0430\u0441\u0441\u0430\u0445:", "children": [{"text": "Or with class-based views:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "class CommentList(APIView):\n    def get(self, request, format=None):\n        # do stuff...\n\n    def post(self, request, format=None):\n        # do stuff...", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0418\u043c\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u043e\u0433\u043e kwarg \u043c\u043e\u0436\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 `FORMAT_SUFFIX_KWARG`.", "children": [{"text": "The name of the kwarg used may be modified by using the ", "block_type": "TextBlock"}, {"code": "FORMAT_SUFFIX_KWARG", "block_type": "CodeSpanBlock"}, {"text": " setting.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0422\u0430\u043a\u0436\u0435 \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e `format_suffix_patterns` \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0441\u043f\u0443\u0441\u043a \u043a \u0448\u0430\u0431\u043b\u043e\u043d\u0430\u043c URL `include`.", "children": [{"text": "Also note that ", "block_type": "TextBlock"}, {"code": "format_suffix_patterns", "block_type": "CodeSpanBlock"}, {"text": " does not support descending into ", "block_type": "TextBlock"}, {"code": "include", "block_type": "CodeSpanBlock"}, {"text": " URL patterns.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "### \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0441 `i18n_patterns`.", "children": [{"text": "Using with ", "block_type": "TextBlock"}, {"code": "i18n_patterns", "block_type": "CodeSpanBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 `i18n_patterns`, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u043c\u043e\u0439 Django, \u0430 \u0442\u0430\u043a\u0436\u0435 `format_suffix_patterns` \u0432\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f `i18n_patterns` \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043a\u0430\u043a \u043a\u043e\u043d\u0435\u0447\u043d\u0430\u044f, \u0438\u043b\u0438 \u043a\u0440\u0430\u0439\u043d\u044f\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:", "children": [{"text": "If using the ", "block_type": "TextBlock"}, {"code": "i18n_patterns", "block_type": "CodeSpanBlock"}, {"text": " function provided by Django, as well as ", "block_type": "TextBlock"}, {"code": "format_suffix_patterns", "block_type": "CodeSpanBlock"}, {"text": " you should make sure that the ", "block_type": "TextBlock"}, {"code": "i18n_patterns", "block_type": "CodeSpanBlock"}, {"text": " function is applied as the final, or outermost function. For example:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "urlpatterns = [\n    \u2026\n]\n\nurlpatterns = i18n_patterns(\n    format_suffix_patterns(urlpatterns, allowed=['json', 'html'])\n)", "language": null, "block_type": "CodeBlock"}, {"block_type": "SeparatorBlock"}, {"translated_data": "## \u0424\u043e\u0440\u043c\u0430\u0442\u044b \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0430", "children": [{"text": "Query parameter formats", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0410\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043e\u0439 \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u0430\u043c \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u043e\u0433\u043e \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u0432 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u0424\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a REST \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u044d\u0442\u043e\u0442 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u0438 \u043e\u043d \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0432 \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0435\u043c\u043e\u043c API \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u043c\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u043c\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u043c\u0438.", "children": [{"text": "An alternative to the format suffixes is to include the requested format in a query parameter. REST framework provides this option by default, and it is used in the browsable API to switch between differing available representations.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0427\u0442\u043e\u0431\u044b \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043e \u0435\u0433\u043e \u043a\u0440\u0430\u0442\u043a\u043e\u043c\u0443 \u0444\u043e\u0440\u043c\u0430\u0442\u0443, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 `format`. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: `http://example.com/organizations/?format=csv`.", "children": [{"text": "To select a representation using its short format, use the ", "block_type": "TextBlock"}, {"code": "format", "block_type": "CodeSpanBlock"}, {"text": " query parameter. For example: ", "block_type": "TextBlock"}, {"code": "http://example.com/organizations/?format=csv", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0418\u043c\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043c\u043e\u0436\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 `URL_FORMAT_OVERRIDE`. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 `None`, \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u044d\u0442\u043e \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435.", "children": [{"text": "The name of this query parameter can be modified using the ", "block_type": "TextBlock"}, {"code": "URL_FORMAT_OVERRIDE", "block_type": "CodeSpanBlock"}, {"text": " setting. Set the value to ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": " to disable this behavior.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"block_type": "SeparatorBlock"}, {"translated_data": "## \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u043f\u0440\u043e\u0442\u0438\u0432 \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u043e\u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0430", "children": [{"text": "Accept headers vs. format suffixes", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u043e\u0445\u043e\u0436\u0435, \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u0438\u0442\u0435\u043b\u0438 \u0432\u0435\u0431-\u0441\u043e\u043e\u0431\u0449\u0435\u0441\u0442\u0432\u0430 \u0441\u0447\u0438\u0442\u0430\u044e\u0442, \u0447\u0442\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u0438\u043c\u0435\u043d \u0444\u0430\u0439\u043b\u043e\u0432 \u043d\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u043c RESTful, \u0438 \u0447\u0442\u043e \u0432\u043c\u0435\u0441\u0442\u043e \u043d\u0438\u0445 \u0432\u0441\u0435\u0433\u0434\u0430 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 `HTTP Accept`.", "children": [{"text": "There seems to be a view among some of the Web community that filename extensions are not a RESTful pattern, and that ", "block_type": "TextBlock"}, {"code": "HTTP Accept", "block_type": "CodeSpanBlock"}, {"text": " headers should always be used instead.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041d\u0430 \u0441\u0430\u043c\u043e\u043c \u0434\u0435\u043b\u0435 \u044d\u0442\u043e \u0437\u0430\u0431\u043b\u0443\u0436\u0434\u0435\u043d\u0438\u0435. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432\u043e\u0437\u044c\u043c\u0435\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0446\u0438\u0442\u0430\u0442\u0443 \u0420\u043e\u044f \u0424\u0438\u043b\u0434\u0438\u043d\u0433\u0430, \u043e\u0431\u0441\u0443\u0436\u0434\u0430\u044e\u0449\u0435\u0433\u043e \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0434\u043e\u0441\u0442\u043e\u0438\u043d\u0441\u0442\u0432\u0430 \u0438\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u0432 \u043c\u0435\u0434\u0438\u0430\u0442\u0438\u043f\u0430 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043f\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044e \u0441 \u0438\u043d\u0434\u0438\u043a\u0430\u0442\u043e\u0440\u0430\u043c\u0438 \u043c\u0435\u0434\u0438\u0430\u0442\u0438\u043f\u0430 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0439 \u0444\u0430\u0439\u043b\u043e\u0432:", "children": [{"text": "It is actually a misconception. For example, take the following quote from Roy Fielding discussing the relative merits of query parameter media-type indicators vs. file extension media-type indicators:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\"\u0412\u043e\u0442 \u043f\u043e\u0447\u0435\u043c\u0443 \u044f \u0432\u0441\u0435\u0433\u0434\u0430 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0438\u0442\u0430\u044e \u0443\u0434\u043b\u0438\u043d\u0438\u0442\u0435\u043b\u0438. \u041d\u0438 \u0442\u043e\u0442, \u043d\u0438 \u0434\u0440\u0443\u0433\u043e\u0439 \u0432\u044b\u0431\u043e\u0440 \u043d\u0435 \u0438\u043c\u0435\u044e\u0442 \u043d\u0438\u043a\u0430\u043a\u043e\u0433\u043e \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u044f \u043a REST\". - \u0420\u043e\u0439 \u0424\u0438\u043b\u0434\u0438\u043d\u0433, [\u0421\u043f\u0438\u0441\u043e\u043a \u0440\u0430\u0441\u0441\u044b\u043b\u043a\u0438 REST discuss](https://groups.yahoo.com/neo/groups/rest-discuss/conversations/topics/14844)", "children": [{"text": "\u201cThat's why I always prefer extensions. Neither choice has anything to do with REST.\u201d \u2014 Roy Fielding, ", "block_type": "TextBlock"}, {"children": [{"text": "REST discuss mailing list", "block_type": "TextBlock"}], "url": "https://groups.yahoo.com/neo/groups/rest-discuss/conversations/topics/14844", "title": null, "block_type": "LinkBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0412 \u0446\u0438\u0442\u0430\u0442\u0435 \u043d\u0435 \u0443\u043f\u043e\u043c\u0438\u043d\u0430\u044e\u0442\u0441\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 Accept, \u043d\u043e \u043e\u043d\u0430 \u044f\u0441\u043d\u043e \u0434\u0430\u0435\u0442 \u043f\u043e\u043d\u044f\u0442\u044c, \u0447\u0442\u043e \u0441\u0443\u0444\u0444\u0438\u043a\u0441\u044b \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043f\u0440\u0438\u0435\u043c\u043b\u0435\u043c\u044b\u043c \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u043c.", "children": [{"text": "The quote does not mention Accept headers, but it does make it clear that format suffixes should be considered an acceptable pattern.", "block_type": "TextBlock"}], "block_type": "Paragraph"}]}