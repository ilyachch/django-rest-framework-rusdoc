{"source": "/home/ilyachch/Projects/OpenSource/django-rest-framework-rusdoc/.reference/api-navigation/generic-views.md", "blocks": [{"block_type": "SeparatorBlock"}, {"translated_data": "\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a:", "children": [{"text": "source:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "* Mixins.py\n* generics.py", "children": [{"children": [{"text": "mixins.py", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"text": "generics.py", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# \u041e\u0431\u0449\u0438\u0435 \u0432\u0438\u0434\u044b", "children": [{"text": "Generic views", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "> \u041e\u0431\u0449\u0438\u0435 \u0432\u0437\u0433\u043b\u044f\u0434\u044b \u0414\u0436\u0430\u043d\u0433\u043e ... \u0431\u044b\u043b\u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u044b \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u044f\u0440\u043b\u044b\u043a\u0430 \u0434\u043b\u044f \u043e\u0431\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f ... \u043e\u043d\u0438 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u044e\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u043e\u0431\u0449\u0438\u0435 \u0438\u0434\u0438\u043e\u043c\u044b \u0438 \u0437\u0430\u043a\u043e\u043d\u043e\u043c\u0435\u0440\u043d\u043e\u0441\u0442\u0438, \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0435 \u0432 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u044f \u0438 \u0430\u0431\u0441\u0442\u0440\u0430\u0433\u0438\u0440\u0443\u044e\u0442 \u0438\u0445, \u0447\u0442\u043e\u0431\u044b \u0432\u044b \u043c\u043e\u0433\u043b\u0438 \u0431\u044b\u0441\u0442\u0440\u043e \u043f\u0438\u0441\u0430\u0442\u044c \u043e\u0431\u0449\u0438\u0435 \u0432\u0437\u0433\u043b\u044f\u0434\u044b \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0435, \u043d\u0435 \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u044f \u0441\u0435\u0431\u044f.\n>\n>-[Django Documentation] (https://docs.djangoproject.com/en/stable/ref/class \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 Views/#base-vs-generic-views)", "children": [{"children": [{"text": "Django\u2019s generic views... were developed as a shortcut for common usage patterns... They take certain common idioms and patterns found in view development and abstract them so that you can quickly write common views of data without having to repeat yourself.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"block_type": "NewlineBlock"}, {"children": [{"text": "\u2014 ", "block_type": "TextBlock"}, {"children": [{"text": "Django Documentation", "block_type": "TextBlock"}], "url": "https://docs.djangoproject.com/en/stable/ref/class-based-views/#base-vs-generic-views", "title": null, "block_type": "LinkBlock"}], "block_type": "Paragraph"}], "block_type": "BlockQuote"}, {"translated_data": "\u041e\u0434\u043d\u0438\u043c \u0438\u0437 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u043f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432 \u0432\u0437\u0433\u043b\u044f\u0434\u043e\u0432 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0442\u043e, \u043a\u0430\u043a \u043e\u043d\u0438 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0432\u0430\u043c \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u0431\u0438\u0442\u044b \u043c\u043d\u043e\u0433\u043e\u0440\u0430\u0437\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f.\nREST Framework \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u044d\u0442\u043e, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044f \u0440\u044f\u0434 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0442 \u0448\u0438\u0440\u043e\u043a\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u044b.", "children": [{"text": "One of the key benefits of class-based views is the way they allow you to compose bits of reusable behavior. REST framework takes advantage of this by providing a number of pre-built views that provide for commonly used patterns.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041e\u0431\u0449\u0438\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 Framework REST, \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0431\u044b\u0441\u0442\u0440\u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f API, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0442\u0435\u0441\u043d\u043e \u0441\u0432\u044f\u0437\u0430\u043d\u044b \u0441 \u0432\u0430\u0448\u0438\u043c\u0438 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445.", "children": [{"text": "The generic views provided by REST framework allow you to quickly build API views that map closely to your database models.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0415\u0441\u043b\u0438 \u043e\u0431\u0449\u0438\u0435 \u0432\u0438\u0434\u044b \u043d\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043d\u043e\u0441\u0442\u044f\u043c \u0432\u0430\u0448\u0435\u0433\u043e API, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u0438\u0439\u0442\u0438 \u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e \u043e\u0431\u044b\u0447\u043d\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 `apiview` \u0438\u043b\u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0438\u043a\u0448\u0438\u043d\u044b \u0438 \u0431\u0430\u0437\u043e\u0432\u044b\u0435 \u043a\u043b\u0430\u0441\u0441\u044b, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043e\u0431\u0449\u0438\u043c\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f\u043c\u0438 \u0434\u043b\u044f \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u043d\u0430\u0431\u043e\u0440\u0430 \u043c\u043d\u043e\u0433\u043e\u0440\u0430\u0437\u043e\u0432\u044b\u0445 \u043e\u0431\u0449\u0438\u0445 \u0432\u0438\u0434\u043e\u0432.", "children": [{"text": "If the generic views don't suit the needs of your API, you can drop down to using the regular ", "block_type": "TextBlock"}, {"code": "APIView", "block_type": "CodeSpanBlock"}, {"text": " class, or reuse the mixins and base classes used by the generic views to compose your own set of reusable generic views.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## \u041f\u0440\u0438\u043c\u0435\u0440\u044b", "children": [{"text": "Examples", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041a\u0430\u043a \u043f\u0440\u0430\u0432\u0438\u043b\u043e, \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u043e\u0431\u0449\u0438\u0445 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u0432\u044b \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432 \u043a\u043b\u0430\u0441\u0441\u0430.", "children": [{"text": "Typically when using the generic views, you'll override the view, and set several class attributes.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "from django.contrib.auth.models import User\nfrom myapp.serializers import UserSerializer\nfrom rest_framework import generics\nfrom rest_framework.permissions import IsAdminUser\n\nclass UserList(generics.ListCreateAPIView):\n    queryset = User.objects.all()\n    serializer_class = UserSerializer\n    permission_classes = [IsAdminUser]", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0414\u043b\u044f \u0431\u043e\u043b\u0435\u0435 \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u0435\u0432 \u0432\u044b \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u0432 \u043a\u043b\u0430\u0441\u0441\u0435 View.\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440.", "children": [{"text": "For more complex cases you might also want to override various methods on the view class. For example.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "class UserList(generics.ListCreateAPIView):\n    queryset = User.objects.all()\n    serializer_class = UserSerializer\n    permission_classes = [IsAdminUser]\n\n    def list(self, request):\n        # Note the use of `get_queryset()` instead of `self.queryset`\n        queryset = self.get_queryset()\n        serializer = UserSerializer(queryset, many=True)\n        return Response(serializer.data)", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0414\u043b\u044f \u043e\u0447\u0435\u043d\u044c \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u0435\u0432 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u0439\u0442\u0438 \u0447\u0435\u0440\u0435\u0437 \u043b\u044e\u0431\u044b\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u043a\u043b\u0430\u0441\u0441\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043c\u0435\u0442\u043e\u0434 `.as_view ()`.\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432\u0430\u0448 UrlConf \u043c\u043e\u0436\u0435\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0432 \u0441\u0435\u0431\u044f \u0447\u0442\u043e -\u0442\u043e \u0432\u0440\u043e\u0434\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0437\u0430\u043f\u0438\u0441\u0438:", "children": [{"text": "For very simple cases you might want to pass through any class attributes using the ", "block_type": "TextBlock"}, {"code": ".as_view()", "block_type": "CodeSpanBlock"}, {"text": " method. For example, your URLconf might include something like the following entry:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "path('users/', ListCreateAPIView.as_view(queryset=User.objects.all(), serializer_class=UserSerializer), name='user-list')", "language": null, "block_type": "CodeBlock"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# \u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 API", "children": [{"text": "API Reference", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "## genericapiview", "children": [{"text": "GenericAPIView", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u042d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0435\u0442 \u043a\u043b\u0430\u0441\u0441 Framework `apiview`, \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044f \u043e\u0431\u044b\u0447\u043d\u043e \u0442\u0440\u0435\u0431\u0443\u0435\u043c\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u0438 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0445 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439.", "children": [{"text": "This class extends REST framework's ", "block_type": "TextBlock"}, {"code": "APIView", "block_type": "CodeSpanBlock"}, {"text": " class, adding commonly required behavior for standard list and detail views.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041a\u0430\u0436\u0434\u044b\u0439 \u0438\u0437 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0431\u0435\u0442\u043e\u043d\u043d\u044b\u0445 \u043e\u0431\u0449\u0438\u0445 \u0432\u0438\u0434\u043e\u0432 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d \u043f\u0443\u0442\u0435\u043c \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f `genericapiview` \u0441 \u043e\u0434\u043d\u0438\u043c \u0438\u043b\u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c\u0438 \u043a\u043b\u0430\u0441\u0441\u0430\u043c\u0438 \u043c\u0438\u043a\u0448\u0438\u043d\u0430.", "children": [{"text": "Each of the concrete generic views provided is built by combining ", "block_type": "TextBlock"}, {"code": "GenericAPIView", "block_type": "CodeSpanBlock"}, {"text": ", with one or more mixin classes.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "### \u0410\u0442\u0440\u0438\u0431\u0443\u0442\u044b", "children": [{"text": "Attributes", "block_type": "TextBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "**\u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438**:", "children": [{"children": [{"text": "Basic settings", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ":", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u0438\u0440\u0443\u044e\u0442 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f.", "children": [{"text": "The following attributes control the basic view behavior.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `Queryset` - Queryset, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0438\u0437 \u044d\u0442\u043e\u0439 \u0442\u043e\u0447\u043a\u0438 \u0437\u0440\u0435\u043d\u0438\u044f.\n\u041a\u0430\u043a \u043f\u0440\u0430\u0432\u0438\u043b\u043e, \u0432\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043b\u0438\u0431\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u044d\u0442\u043e\u0442 \u0430\u0442\u0440\u0438\u0431\u0443\u0442, \u043b\u0438\u0431\u043e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043c\u0435\u0442\u043e\u0434 `get_queryset ()`.\n\u0415\u0441\u043b\u0438 \u0432\u044b \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0435 \u043c\u0435\u0442\u043e\u0434 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u0432\u0430\u0436\u043d\u043e, \u0447\u0442\u043e\u0431\u044b \u0432\u044b \u043d\u0430\u0437\u044b\u0432\u0430\u043b\u0438 `get_queryset ()` \u0432\u043c\u0435\u0441\u0442\u043e \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0440\u0430\u0449\u0430\u0442\u044c\u0441\u044f \u043a \u044d\u0442\u043e\u043c\u0443 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0443 \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e, \u0442\u0430\u043a \u043a\u0430\u043a `Queryset` \u0431\u0443\u0434\u0435\u0442 \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0434\u0438\u043d \u0440\u0430\u0437, \u0438 \u044d\u0442\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0431\u0443\u0434\u0443\u0442 \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432.\n* `serializer_class` - \u043a\u043b\u0430\u0441\u0441 Serializer, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0438 \u0434\u0435\u0441\u0435\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u0432\u0432\u043e\u0434\u0430, \u0438 \u0434\u043b\u044f \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0432\u044b\u0432\u043e\u0434\u0430.\n\u041a\u0430\u043a \u043f\u0440\u0430\u0432\u0438\u043b\u043e, \u0432\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043b\u0438\u0431\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u044d\u0442\u043e\u0442 \u0430\u0442\u0440\u0438\u0431\u0443\u0442, \u043b\u0438\u0431\u043e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043c\u0435\u0442\u043e\u0434 `get_serializer_class ()`.\n* `lookup_field` - \u043f\u043e\u043b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432 \u043c\u043e\u0434\u0435\u043b\u0438.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u00abpk\u00bb.\n\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 API -\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0433\u0438\u043f\u0435\u0440\u0441\u0441\u044b\u043b\u043a\u0438 \u0432\u0430\u043c \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u0441\u044f, \u0447\u0442\u043e\u0431\u044b * \u043e\u0431\u0430 * \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f API * \u0438 * \u043a\u043b\u0430\u0441\u0441\u044b \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430 \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u044e\u0442 \u043f\u043e\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430, \u0435\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\n* `lookup_url_kwarg` - \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 URL, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432.\nURL CONF \u0434\u043e\u043b\u0436\u0435\u043d \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u044d\u0442\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e.\n\u0415\u0441\u043b\u0438 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043d\u0435 \u043f\u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u0435\u0441\u044c \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e \u0436\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0447\u0442\u043e \u0438 `lookup_field`.", "children": [{"children": [{"code": "queryset", "block_type": "CodeSpanBlock"}, {"text": " - The queryset that should be used for returning objects from this view. Typically, you must either set this attribute, or override the ", "block_type": "TextBlock"}, {"code": "get_queryset()", "block_type": "CodeSpanBlock"}, {"text": " method. If you are overriding a view method, it is important that you call ", "block_type": "TextBlock"}, {"code": "get_queryset()", "block_type": "CodeSpanBlock"}, {"text": " instead of accessing this property directly, as ", "block_type": "TextBlock"}, {"code": "queryset", "block_type": "CodeSpanBlock"}, {"text": " will get evaluated once, and those results will be cached for all subsequent requests.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "serializer_class", "block_type": "CodeSpanBlock"}, {"text": " - The serializer class that should be used for validating and deserializing input, and for serializing output. Typically, you must either set this attribute, or override the ", "block_type": "TextBlock"}, {"code": "get_serializer_class()", "block_type": "CodeSpanBlock"}, {"text": " method.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "lookup_field", "block_type": "CodeSpanBlock"}, {"text": " - The model field that should be used for performing object lookup of individual model instances. Defaults to ", "block_type": "TextBlock"}, {"code": "'pk'", "block_type": "CodeSpanBlock"}, {"text": ". Note that when using hyperlinked APIs you'll need to ensure that ", "block_type": "TextBlock"}, {"children": [{"text": "both", "block_type": "TextBlock"}], "block_type": "EmphasisTextBlock"}, {"text": " the API views ", "block_type": "TextBlock"}, {"children": [{"text": "and", "block_type": "TextBlock"}], "block_type": "EmphasisTextBlock"}, {"text": " the serializer classes set the lookup fields if you need to use a custom value.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "lookup_url_kwarg", "block_type": "CodeSpanBlock"}, {"text": " - The URL keyword argument that should be used for object lookup. The URL conf should include a keyword argument corresponding to this value. If unset this defaults to using the same value as ", "block_type": "TextBlock"}, {"code": "lookup_field", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "** \u0441\u0442\u0440\u0430\u0434\u0430\u043d\u0438\u0435 **:", "children": [{"children": [{"text": "Pagination", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ":", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435\u0439 \u043f\u0440\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u0441 \u0432\u0438\u0434\u0430\u043c\u0438 \u0441\u043f\u0438\u0441\u043a\u043e\u0432.", "children": [{"text": "The following attributes are used to control pagination when used with list views.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `pagination_class` - \u043a\u043b\u0430\u0441\u0441 \u0441\u0442\u0440\u0430\u043d\u0438\u0446, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u043b\u0438\u0441\u0442\u0430.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043a \u0442\u043e\u043c\u0443 \u0436\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e, \u0447\u0442\u043e \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 `default_pagination_class`, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f` 'rest_framework.pagination.pageNumberPagination'.\n\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 `pagination_class = none` \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u043d\u0430 \u044d\u0442\u043e\u0439 \u0442\u043e\u0447\u043a\u0435.", "children": [{"children": [{"code": "pagination_class", "block_type": "CodeSpanBlock"}, {"text": " - The pagination class that should be used when paginating list results. Defaults to the same value as the ", "block_type": "TextBlock"}, {"code": "DEFAULT_PAGINATION_CLASS", "block_type": "CodeSpanBlock"}, {"text": " setting, which is ", "block_type": "TextBlock"}, {"code": "'rest_framework.pagination.PageNumberPagination'", "block_type": "CodeSpanBlock"}, {"text": ". Setting ", "block_type": "TextBlock"}, {"code": "pagination_class=None", "block_type": "CodeSpanBlock"}, {"text": " will disable pagination on this view.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "** \u0424\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f **:", "children": [{"children": [{"text": "Filtering", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ":", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `filter_backends` - \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0431\u044d\u043a\u044d\u043d\u0434 \u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u043a \u0442\u043e\u043c\u0443 \u0436\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044e, \u0447\u0442\u043e \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 `default_filter_backends`.", "children": [{"children": [{"code": "filter_backends", "block_type": "CodeSpanBlock"}, {"text": " - A list of filter backend classes that should be used for filtering the queryset. Defaults to the same value as the ", "block_type": "TextBlock"}, {"code": "DEFAULT_FILTER_BACKENDS", "block_type": "CodeSpanBlock"}, {"text": " setting.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "### \u041c\u0435\u0442\u043e\u0434\u044b", "children": [{"text": "Methods", "block_type": "TextBlock"}], "level": 3, "block_type": "HeadingBlock"}, {"translated_data": "** \u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b **:", "children": [{"children": [{"text": "Base methods", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ":", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "#### `get_queryset (self)`", "children": [{"code": "get_queryset(self)", "block_type": "CodeSpanBlock"}], "level": 4, "block_type": "HeadingBlock"}, {"translated_data": "\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u0441\u043f\u0438\u0441\u043a\u043e\u0432, \u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043e\u0441\u043d\u043e\u0432\u044b \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u0432 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0438.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u043c `Queryset '.", "children": [{"text": "Returns the queryset that should be used for list views, and that should be used as the base for lookups in detail views. Defaults to returning the queryset specified by the ", "block_type": "TextBlock"}, {"code": "queryset", "block_type": "CodeSpanBlock"}, {"text": " attribute.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u042d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434 \u0432\u0441\u0435\u0433\u0434\u0430 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f, \u0430 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f \u043a `self.queryset` \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e, \u0442\u0430\u043a \u043a\u0430\u043a` self.queryset '\u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0440\u0430\u0437, \u0438 \u044d\u0442\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043a\u044d\u0448\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432.", "children": [{"text": "This method should always be used rather than accessing ", "block_type": "TextBlock"}, {"code": "self.queryset", "block_type": "CodeSpanBlock"}, {"text": " directly, as ", "block_type": "TextBlock"}, {"code": "self.queryset", "block_type": "CodeSpanBlock"}, {"text": " gets evaluated only once, and those results are cached for all subsequent requests.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435, \u0442\u0430\u043a\u043e\u0435 \u043a\u0430\u043a \u0432\u043e\u0437\u0432\u0440\u0430\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u043d\u044b\u043c \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0434\u0435\u043b\u0430\u044e\u0449\u0435\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441.", "children": [{"text": "May be overridden to provide dynamic behavior, such as returning a queryset, that is specific to the user making the request.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:", "children": [{"text": "For example:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "def get_queryset(self):\n    user = self.request.user\n    return user.accounts.all()", "language": null, "block_type": "CodeBlock"}, {"block_type": "SeparatorBlock"}, {"translated_data": "** \u041f\u0420\u0418\u041c\u0415\u0427\u0410\u041d\u0418\u0415.\n\u0427\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0435 n+1 \u0438 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0443\u043f\u043e\u043c\u044f\u043d\u0443\u0442\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432, \u0441\u043c. \u0421\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0439 \u0440\u0430\u0437\u0434\u0435\u043b \u0432 [Django Documentation] (https://docs.djangoproject.com/en/3.1/ref/models/querysets/#django.db\n.models.query.queryset.select_related).", "children": [{"children": [{"text": "Note:", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " If the ", "block_type": "TextBlock"}, {"code": "serializer_class", "block_type": "CodeSpanBlock"}, {"text": " used in the generic view spans orm relations, leading to an n+1 problem, you could optimize your queryset in this method using ", "block_type": "TextBlock"}, {"code": "select_related", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "prefetch_related", "block_type": "CodeSpanBlock"}, {"text": ". To get more information about n+1 problem and use cases of the mentioned methods refer to related section in ", "block_type": "TextBlock"}, {"children": [{"text": "django documentation", "block_type": "TextBlock"}], "url": "https://docs.djangoproject.com/en/3.1/ref/models/querysets/#django.db.models.query.QuerySet.select_related", "title": null, "block_type": "LinkBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"block_type": "SeparatorBlock"}, {"translated_data": "#### `get_object (self)`", "children": [{"code": "get_object(self)", "block_type": "CodeSpanBlock"}], "level": 4, "block_type": "HeadingBlock"}, {"translated_data": "\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043e\u0431\u044a\u0435\u043a\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0445 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 `lookup_field` \u0434\u043b\u044f \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438 \u0431\u0430\u0437\u043e\u0432\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430.", "children": [{"text": "Returns an object instance that should be used for detail views. Defaults to using the ", "block_type": "TextBlock"}, {"code": "lookup_field", "block_type": "CodeSpanBlock"}, {"text": " parameter to filter the base queryset.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0431\u043e\u043b\u0435\u0435 \u0441\u043b\u043e\u0436\u043d\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435, \u0442\u0430\u043a\u043e\u0435 \u043a\u0430\u043a \u043f\u043e\u0438\u0441\u043a \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0431\u043e\u043b\u0435\u0435 \u0447\u0435\u043c \u043e\u0434\u043d\u043e\u0433\u043e URL Kwarg.", "children": [{"text": "May be overridden to provide more complex behavior, such as object lookups based on more than one URL kwarg.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:", "children": [{"text": "For example:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "def get_object(self):\n    queryset = self.get_queryset()\n    filter = {}\n    for field in self.multiple_lookup_fields:\n        filter[field] = self.kwargs[field]\n\n    obj = get_object_or_404(queryset, **filter)\n    self.check_object_permissions(self.request, obj)\n    return obj", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u0432\u0430\u0448 API \u043d\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043d\u0438\u043a\u0430\u043a\u0438\u0445 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u043d\u0430 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u043e\u0431\u044a\u0435\u043a\u0442\u0430, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u0438 \u0436\u0435\u043b\u0430\u043d\u0438\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0438\u0442\u044c `self.check_object_permissions` \u0438 \u043f\u0440\u043e\u0441\u0442\u043e \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442 \u0438\u0437 \u043f\u043e\u0438\u0441\u043a\u0430` get_object_or_404`.", "children": [{"text": "Note that if your API doesn't include any object level permissions, you may optionally exclude the ", "block_type": "TextBlock"}, {"code": "self.check_object_permissions", "block_type": "CodeSpanBlock"}, {"text": ", and simply return the object from the ", "block_type": "TextBlock"}, {"code": "get_object_or_404", "block_type": "CodeSpanBlock"}, {"text": " lookup.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "#### `filter_queryset (self, queryset)`", "children": [{"code": "filter_queryset(self, queryset)", "block_type": "CodeSpanBlock"}], "level": 4, "block_type": "HeadingBlock"}, {"translated_data": "\u0423\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u0437\u0430\u043f\u0440\u043e\u0441, \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u0443\u0439\u0442\u0435 \u0435\u0433\u043e \u0441 \u043b\u044e\u0431\u044b\u043c\u0438 \u0431\u044d\u043a\u044d\u043d\u0430\u043c\u0438 \u0444\u0438\u043b\u044c\u0442\u0440\u0430, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044f \u043d\u043e\u0432\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441.", "children": [{"text": "Given a queryset, filter it with whichever filter backends are in use, returning a new queryset.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:", "children": [{"text": "For example:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "def filter_queryset(self, queryset):\n    filter_backends = [CategoryFilter]\n\n    if 'geo_route' in self.request.query_params:\n        filter_backends = [GeoRouteFilter, CategoryFilter]\n    elif 'geo_point' in self.request.query_params:\n        filter_backends = [GeoPointFilter, CategoryFilter]\n\n    for backend in list(filter_backends):\n        queryset = backend().filter_queryset(self.request, queryset, view=self)\n\n    return queryset", "language": null, "block_type": "CodeBlock"}, {"translated_data": "#### `get_serializer_class (self)`", "children": [{"code": "get_serializer_class(self)", "block_type": "CodeSpanBlock"}], "level": 4, "block_type": "HeadingBlock"}, {"translated_data": "\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0430\u0442\u0440\u0438\u0431\u0443\u0442 `serializer_class`.", "children": [{"text": "Returns the class that should be used for the serializer. Defaults to returning the ", "block_type": "TextBlock"}, {"code": "serializer_class", "block_type": "CodeSpanBlock"}, {"text": " attribute.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0434\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435, \u0442\u0430\u043a\u043e\u0435 \u043a\u0430\u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0441\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0434\u043b\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 \u0447\u0442\u0435\u043d\u0438\u044f \u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u043b\u0438 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u043e\u0432 \u0434\u043b\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.", "children": [{"text": "May be overridden to provide dynamic behavior, such as using different serializers for read and write operations, or providing different serializers to different types of users.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:", "children": [{"text": "For example:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "def get_serializer_class(self):\n    if self.request.user.is_staff:\n        return FullAccountSerializer\n    return BasicAccountSerializer", "language": null, "block_type": "CodeBlock"}, {"translated_data": "** \u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0438 \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u043a\u0440\u044e\u0447\u043a\u0438 **:", "children": [{"children": [{"text": "Save and deletion hooks", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ":", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043a\u043b\u0430\u0441\u0441\u0430\u043c\u0438 Mixin \u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0442 \u043b\u0435\u0433\u043a\u043e\u0435 \u043f\u0435\u0440\u0435\u043e\u0446\u0435\u043d\u043a\u0443 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f.", "children": [{"text": "The following methods are provided by the mixin classes, and provide easy overriding of the object save or deletion behavior.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `exective_create (self, serializer)` - \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f `createmodelmixin` \u043f\u0440\u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0438 \u043d\u043e\u0432\u043e\u0433\u043e \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u0430.\n* `refect_update (self, serializer)` - \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f `updatemodelmixin` \u043f\u0440\u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0438 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u0430.\n* `exective_destroy (self, exant)` - \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f `destressmodelmixin` \u043f\u0440\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u0430.", "children": [{"children": [{"code": "perform_create(self, serializer)", "block_type": "CodeSpanBlock"}, {"text": " - Called by ", "block_type": "TextBlock"}, {"code": "CreateModelMixin", "block_type": "CodeSpanBlock"}, {"text": " when saving a new object instance.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "perform_update(self, serializer)", "block_type": "CodeSpanBlock"}, {"text": " - Called by ", "block_type": "TextBlock"}, {"code": "UpdateModelMixin", "block_type": "CodeSpanBlock"}, {"text": " when saving an existing object instance.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "perform_destroy(self, instance)", "block_type": "CodeSpanBlock"}, {"text": " - Called by ", "block_type": "TextBlock"}, {"code": "DestroyModelMixin", "block_type": "CodeSpanBlock"}, {"text": " when deleting an object instance.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"translated_data": "\u042d\u0442\u0438 \u043a\u0440\u044e\u0447\u043a\u0438 \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u044b \u0434\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0434\u0440\u0430\u0437\u0443\u043c\u0435\u0432\u0430\u044e\u0442\u0441\u044f \u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0435, \u043d\u043e \u043d\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0447\u0430\u0441\u0442\u044c\u044e \u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0430\u0442\u0440\u0438\u0431\u0443\u0442 \u043d\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u0435 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438\u043b\u0438 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430 \u043a\u043b\u044e\u0447\u0435\u0432\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430 URL.", "children": [{"text": "These hooks are particularly useful for setting attributes that are implicit in the request, but are not part of the request data. For instance, you might set an attribute on the object based on the request user, or based on a URL keyword argument.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "def perform_create(self, serializer):\n    serializer.save(user=self.request.user)", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u042d\u0442\u0438 \u0442\u043e\u0447\u043a\u0438 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0442\u0430\u043a\u0436\u0435 \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u044b \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0434\u043e \u0438\u043b\u0438 \u043f\u043e\u0441\u043b\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043f\u043e \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f \u0438\u043b\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f.", "children": [{"text": "These override points are also particularly useful for adding behavior that occurs before or after saving an object, such as emailing a confirmation, or logging the update.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "def perform_update(self, serializer):\n    instance = serializer.save()\n    send_email_confirmation(user=self.request.user, modified=instance)", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0412\u044b \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u0438 \u043a\u0440\u044e\u0447\u043a\u0438 \u0434\u043b\u044f \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438, \u043f\u043e\u0434\u043d\u044f\u0432 `valyationError ()`.\n\u042d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u043b\u0435\u0437\u043d\u043e, \u0435\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u0430 \u043a\u0430\u043a\u0430\u044f -\u0442\u043e \u043b\u043e\u0433\u0438\u043a\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0434\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432 \u0442\u043e\u0447\u043a\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445.\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:", "children": [{"text": "You can also use these hooks to provide additional validation, by raising a ", "block_type": "TextBlock"}, {"code": "ValidationError()", "block_type": "CodeSpanBlock"}, {"text": ". This can be useful if you need some validation logic to apply at the point of database save. For example:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "def perform_create(self, serializer):\n    queryset = SignupRequest.objects.filter(user=self.request.user)\n    if queryset.exists():\n        raise ValidationError('You have already signed up')\n    serializer.save(user=self.request.user)", "language": null, "block_type": "CodeBlock"}, {"translated_data": "** \u0414\u0440\u0443\u0433\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u044b **:", "children": [{"children": [{"text": "Other methods", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ":", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041e\u0431\u044b\u0447\u043d\u043e \u0432\u0430\u043c \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u044b, \u0445\u043e\u0442\u044f \u0432\u0430\u043c \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u0438\u0445, \u0435\u0441\u043b\u0438 \u0432\u044b \u043f\u0438\u0448\u0435\u0442\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f `genericapiview '.", "children": [{"text": "You won't typically need to override the following methods, although you might need to call into them if you're writing custom views using ", "block_type": "TextBlock"}, {"code": "GenericAPIView", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "* `get_serializer_context (self)` - \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043b\u043e\u0432\u0430\u0440\u044c, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u043b\u044e\u0431\u043e\u0439 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0443.\n\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c `'request' ',`' view '' '\u0438 `' format '' \u043a\u043b\u0430\u0432\u0438\u0448\u0438.\n* `get_serializer (self, encement = none, data = none, \u043c\u043d\u043e\u0433\u043e = false, partial = false)` - \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430.\n* `get_pagination_response (self, data)` - \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 \u043e\u0442\u0432\u0435\u0442\u0430 `` `` `` `` `` \u043e\u0431\u044a\u0435\u043a\u0442.\n* `paginate_queryset (self, queryset)` - Paginate queryset, \u0435\u0441\u043b\u0438 \u044d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u043b\u0438\u0431\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b, \u043b\u0438\u0431\u043e `none`, \u0435\u0441\u043b\u0438 \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043d\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u043e.\n* `filter_queryset (self, queryset)` - \u0423\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u0437\u0430\u043f\u0440\u043e\u0441, \u043e\u0442\u0444\u0438\u043b\u044c\u0442\u0440\u043e\u0432\u0430\u043b \u0435\u0433\u043e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u0430\u043a\u0438\u0445 -\u043b\u0438\u0431\u043e \u0431\u044d\u043a\u044d\u043d\u0434\u043e\u0432 \u0444\u0438\u043b\u044c\u0442\u0440\u0430, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044f \u043d\u043e\u0432\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441.", "children": [{"children": [{"code": "get_serializer_context(self)", "block_type": "CodeSpanBlock"}, {"text": " - Returns a dictionary containing any extra context that should be supplied to the serializer. Defaults to including ", "block_type": "TextBlock"}, {"code": "'request'", "block_type": "CodeSpanBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"code": "'view'", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "'format'", "block_type": "CodeSpanBlock"}, {"text": " keys.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "get_serializer(self, instance=None, data=None, many=False, partial=False)", "block_type": "CodeSpanBlock"}, {"text": " - Returns a serializer instance.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "get_paginated_response(self, data)", "block_type": "CodeSpanBlock"}, {"text": " - Returns a paginated style ", "block_type": "TextBlock"}, {"code": "Response", "block_type": "CodeSpanBlock"}, {"text": " object.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "paginate_queryset(self, queryset)", "block_type": "CodeSpanBlock"}, {"text": " - Paginate a queryset if required, either returning a page object, or ", "block_type": "TextBlock"}, {"code": "None", "block_type": "CodeSpanBlock"}, {"text": " if pagination is not configured for this view.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}, {"children": [{"code": "filter_queryset(self, queryset)", "block_type": "CodeSpanBlock"}, {"text": " - Given a queryset, filter it with whichever filter backends are in use, returning a new queryset.", "block_type": "TextBlock"}], "nested_children": [], "level": 1, "block_type": "ListItemBlock"}], "ordered": false, "level": 1, "start": null, "block_type": "ListBlock"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# \u041c\u0438\u043a\u0448\u0438\u043d\u044b", "children": [{"text": "Mixins", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "\u041a\u043b\u0430\u0441\u0441\u044b Mixin \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0442 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u044f \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0433\u043e \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f.\n\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u043a\u043b\u0430\u0441\u0441\u044b \u043c\u0438\u043a\u0448\u0438\u043d\u0430 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u043c\u0435\u0442\u043e\u0434\u044b \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f, \u0430 \u043d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0442 \u043c\u0435\u0442\u043e\u0434\u044b \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a `.get ()` \u0438 `.post ()`, \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e.\n\u042d\u0442\u043e \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0431\u043e\u043b\u0435\u0435 \u0433\u0438\u0431\u043a\u0438\u0439 \u0441\u043e\u0441\u0442\u0430\u0432 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f.", "children": [{"text": "The mixin classes provide the actions that are used to provide the basic view behavior. Note that the mixin classes provide action methods rather than defining the handler methods, such as ", "block_type": "TextBlock"}, {"code": ".get()", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": ".post()", "block_type": "CodeSpanBlock"}, {"text": ", directly. This allows for more flexible composition of behavior.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041a\u043b\u0430\u0441\u0441\u044b Mixin \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0438\u0437 `rest_framework.mixins`.", "children": [{"text": "The mixin classes can be imported from ", "block_type": "TextBlock"}, {"code": "rest_framework.mixins", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## listmodelmixin", "children": [{"text": "ListModelMixin", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043c\u0435\u0442\u043e\u0434 `.List (\u0437\u0430\u043f\u0440\u043e\u0441, *args, ** kwargs), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430.", "children": [{"text": "Provides a ", "block_type": "TextBlock"}, {"code": ".list(request, *args, **kwargs)", "block_type": "CodeSpanBlock"}, {"text": " method, that implements listing a queryset.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0415\u0441\u043b\u0438 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d, \u044d\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u00ab200 OK\u00bb \u0441 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0442\u0435\u043b\u0430 \u043e\u0442\u0432\u0435\u0442\u0430.\n\u0414\u0430\u043d\u043d\u044b\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e \u0431\u044b\u0442\u044c \u0441\u0442\u0440\u0430\u0441\u0442\u043d\u044b\u043c\u0438.", "children": [{"text": "If the queryset is populated, this returns a ", "block_type": "TextBlock"}, {"code": "200 OK", "block_type": "CodeSpanBlock"}, {"text": " response, with a serialized representation of the queryset as the body of the response. The response data may optionally be paginated.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## createmodelmixin", "children": [{"text": "CreateModelMixin", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043c\u0435\u0442\u043e\u0434. Create (\u0437\u0430\u043f\u0440\u043e\u0441, *args, ** kwargs), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u043c\u043e\u0434\u0435\u043b\u0438.", "children": [{"text": "Provides a ", "block_type": "TextBlock"}, {"code": ".create(request, *args, **kwargs)", "block_type": "CodeSpanBlock"}, {"text": " method, that implements creating and saving a new model instance.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0415\u0441\u043b\u0438 \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u043e\u0431\u044a\u0435\u043a\u0442, \u044d\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u00ab201\u00bb, \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439, \u0441 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043a\u0430\u043a \u0442\u0435\u043b\u0430 \u043e\u0442\u0432\u0435\u0442\u0430.\n\u0415\u0441\u043b\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043a\u043b\u044e\u0447 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u00aburl\u00bb, \u0442\u043e \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a \u00ab\u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u00bb \u043e\u0442\u0432\u0435\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d \u044d\u0442\u0438\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c.", "children": [{"text": "If an object is created this returns a ", "block_type": "TextBlock"}, {"code": "201 Created", "block_type": "CodeSpanBlock"}, {"text": " response, with a serialized representation of the object as the body of the response. If the representation contains a key named ", "block_type": "TextBlock"}, {"code": "url", "block_type": "CodeSpanBlock"}, {"text": ", then the ", "block_type": "TextBlock"}, {"code": "Location", "block_type": "CodeSpanBlock"}, {"text": " header of the response will be populated with that value.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0415\u0441\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430, \u0431\u044b\u043b\u0438 \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438, \u0431\u0443\u0434\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d \u043e\u0442\u0432\u0435\u0442 `400 Bad Request`, \u0430 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u043e\u0448\u0438\u0431\u043a\u0438 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0442\u0435\u043b\u0430 \u043e\u0442\u0432\u0435\u0442\u0430.", "children": [{"text": "If the request data provided for creating the object was invalid, a ", "block_type": "TextBlock"}, {"code": "400 Bad Request", "block_type": "CodeSpanBlock"}, {"text": " response will be returned, with the error details as the body of the response.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## retivemodelmixin", "children": [{"text": "RetrieveModelMixin", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043c\u0435\u0442\u043e\u0434 `.retrieve (\u0437\u0430\u043f\u0440\u043e\u0441, *args, ** kwargs), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 \u0432 \u043e\u0442\u0432\u0435\u0442\u0435.", "children": [{"text": "Provides a ", "block_type": "TextBlock"}, {"code": ".retrieve(request, *args, **kwargs)", "block_type": "CodeSpanBlock"}, {"text": " method, that implements returning an existing model instance in a response.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0415\u0441\u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d, \u044d\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 `200 OK`, \u0441 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043a\u0430\u043a \u0442\u0435\u043b\u0430 \u043e\u0442\u0432\u0435\u0442\u0430.\n\u0412 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u043d \u0432\u0435\u0440\u043d\u0435\u0442 `404 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e.", "children": [{"text": "If an object can be retrieved this returns a ", "block_type": "TextBlock"}, {"code": "200 OK", "block_type": "CodeSpanBlock"}, {"text": " response, with a serialized representation of the object as the body of the response. Otherwise, it will return a ", "block_type": "TextBlock"}, {"code": "404 Not Found", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## Updatemodelmixin", "children": [{"text": "UpdateModelMixin", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043c\u0435\u0442\u043e\u0434.", "children": [{"text": "Provides a ", "block_type": "TextBlock"}, {"code": ".update(request, *args, **kwargs)", "block_type": "CodeSpanBlock"}, {"text": " method, that implements updating and saving an existing model instance.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0422\u0430\u043a\u0436\u0435 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043c\u0435\u0442\u043e\u0434 `.partial_update (\u0437\u0430\u043f\u0440\u043e\u0441, *args, ** kwargs), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u0435\u043d \u043c\u0435\u0442\u043e\u0434\u0443` update`, \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0432\u0441\u0435 \u043f\u043e\u043b\u044f \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0431\u0443\u0434\u0443\u0442 \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438.\n\u042d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b http `patch '.", "children": [{"text": "Also provides a ", "block_type": "TextBlock"}, {"code": ".partial_update(request, *args, **kwargs)", "block_type": "CodeSpanBlock"}, {"text": " method, which is similar to the ", "block_type": "TextBlock"}, {"code": "update", "block_type": "CodeSpanBlock"}, {"text": " method, except that all fields for the update will be optional. This allows support for HTTP ", "block_type": "TextBlock"}, {"code": "PATCH", "block_type": "CodeSpanBlock"}, {"text": " requests.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0415\u0441\u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442\u0441\u044f, \u044d\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 `200 OK` \u0441 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043a\u0430\u043a \u0442\u0435\u043b\u0430 \u043e\u0442\u0432\u0435\u0442\u0430.", "children": [{"text": "If an object is updated this returns a ", "block_type": "TextBlock"}, {"code": "200 OK", "block_type": "CodeSpanBlock"}, {"text": " response, with a serialized representation of the object as the body of the response.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0415\u0441\u043b\u0438 \u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430, \u0431\u044b\u043b\u0438 \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438, \u0431\u0443\u0434\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d \u043e\u0442\u0432\u0435\u0442 `400 Bad Request`, \u0430 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u043e\u0448\u0438\u0431\u043a\u0438 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0442\u0435\u043b\u0430 \u043e\u0442\u0432\u0435\u0442\u0430.", "children": [{"text": "If the request data provided for updating the object was invalid, a ", "block_type": "TextBlock"}, {"code": "400 Bad Request", "block_type": "CodeSpanBlock"}, {"text": " response will be returned, with the error details as the body of the response.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## Dissultmodelmixin", "children": [{"text": "DestroyModelMixin", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043c\u0435\u0442\u043e\u0434.", "children": [{"text": "Provides a ", "block_type": "TextBlock"}, {"code": ".destroy(request, *args, **kwargs)", "block_type": "CodeSpanBlock"}, {"text": " method, that implements deletion of an existing model instance.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0415\u0441\u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442 \u0443\u0434\u0430\u043b\u0435\u043d, \u044d\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 `204 \u041d\u0435\u0442 \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430 ', \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u043d \u0432\u0435\u0440\u043d\u0435\u0442` 404 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e'.", "children": [{"text": "If an object is deleted this returns a ", "block_type": "TextBlock"}, {"code": "204 No Content", "block_type": "CodeSpanBlock"}, {"text": " response, otherwise it will return a ", "block_type": "TextBlock"}, {"code": "404 Not Found", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# Contrent View Clesess", "children": [{"text": "Concrete View Classes", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "\u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u044b \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0431\u0435\u0442\u043e\u043d\u043d\u044b\u043c\u0438 \u043e\u0431\u0449\u0438\u043c\u0438 \u0432\u0438\u0434\u0430\u043c\u0438.\n\u0415\u0441\u043b\u0438 \u0432\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435 \u043e\u0431\u0449\u0438\u0435 \u0432\u0438\u0434\u044b, \u044d\u0442\u043e \u043e\u0431\u044b\u0447\u043d\u043e, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0432\u044b \u0431\u0443\u0434\u0435\u0442\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c, \u0435\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0435 \u043d\u0443\u0436\u043d\u043e \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435.", "children": [{"text": "The following classes are the concrete generic views. If you're using generic views this is normally the level you'll be working at unless you need heavily customized behavior.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041a\u043b\u0430\u0441\u0441\u044b \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0438\u0437 `rest_framework.generics`.", "children": [{"text": "The view classes can be imported from ", "block_type": "TextBlock"}, {"code": "rest_framework.generics", "block_type": "CodeSpanBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## createApiview", "children": [{"text": "CreateAPIView", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f ** \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f ** \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0445 \u0442\u043e\u0447\u0435\u043a.", "children": [{"text": "Used for ", "block_type": "TextBlock"}, {"children": [{"text": "create-only", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " endpoints.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043c\u0435\u0442\u043e\u0434\u0430 \u00abpost\u00bb.", "children": [{"text": "Provides a ", "block_type": "TextBlock"}, {"code": "post", "block_type": "CodeSpanBlock"}, {"text": " method handler.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "Extends: [genericapiview] (#genericapiview), [createmodelmixin] (#createmodelmixin)", "children": [{"text": "Extends: ", "block_type": "TextBlock"}, {"children": [{"text": "GenericAPIView", "block_type": "TextBlock"}], "url": "#genericapiview", "title": null, "block_type": "LinkBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"children": [{"text": "CreateModelMixin", "block_type": "TextBlock"}], "url": "#createmodelmixin", "title": null, "block_type": "LinkBlock"}], "block_type": "Paragraph"}, {"translated_data": "## listapiview", "children": [{"text": "ListAPIView", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f ** \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f ** \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0445 \u0442\u043e\u0447\u0435\u043a \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f ** \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u043c\u043e\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432 **.", "children": [{"text": "Used for ", "block_type": "TextBlock"}, {"children": [{"text": "read-only", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " endpoints to represent a ", "block_type": "TextBlock"}, {"children": [{"text": "collection of model instances", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043c\u0435\u0442\u043e\u0434\u0430 `get '.", "children": [{"text": "Provides a ", "block_type": "TextBlock"}, {"code": "get", "block_type": "CodeSpanBlock"}, {"text": " method handler.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "Extends: [genericapiview] (#genericapiview), [listmodelmixin] (#listmodelmixin)", "children": [{"text": "Extends: ", "block_type": "TextBlock"}, {"children": [{"text": "GenericAPIView", "block_type": "TextBlock"}], "url": "#genericapiview", "title": null, "block_type": "LinkBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"children": [{"text": "ListModelMixin", "block_type": "TextBlock"}], "url": "#listmodelmixin", "title": null, "block_type": "LinkBlock"}], "block_type": "Paragraph"}, {"translated_data": "## retiveiePiview", "children": [{"text": "RetrieveAPIView", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f ** \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0447\u0442\u0435\u043d\u0438\u044f ** \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0445 \u0442\u043e\u0447\u0435\u043a \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f ** \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u0435\u0434\u0438\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 **.", "children": [{"text": "Used for ", "block_type": "TextBlock"}, {"children": [{"text": "read-only", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " endpoints to represent a ", "block_type": "TextBlock"}, {"children": [{"text": "single model instance", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043c\u0435\u0442\u043e\u0434\u0430 `get '.", "children": [{"text": "Provides a ", "block_type": "TextBlock"}, {"code": "get", "block_type": "CodeSpanBlock"}, {"text": " method handler.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "Extends: [genericapiview] (#genericapiview), [retivemodelmixin] (#retivemodelmixin)", "children": [{"text": "Extends: ", "block_type": "TextBlock"}, {"children": [{"text": "GenericAPIView", "block_type": "TextBlock"}], "url": "#genericapiview", "title": null, "block_type": "LinkBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"children": [{"text": "RetrieveModelMixin", "block_type": "TextBlock"}], "url": "#retrievemodelmixin", "title": null, "block_type": "LinkBlock"}], "block_type": "Paragraph"}, {"translated_data": "## dissomeapiview", "children": [{"text": "DestroyAPIView", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f ** \u0442\u043e\u043b\u044c\u043a\u043e \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f ** \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0445 \u0442\u043e\u0447\u0435\u043a \u0434\u043b\u044f ** \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u0441 \u043e\u0434\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u044c\u044e **.", "children": [{"text": "Used for ", "block_type": "TextBlock"}, {"children": [{"text": "delete-only", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " endpoints for a ", "block_type": "TextBlock"}, {"children": [{"text": "single model instance", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u043c\u0435\u0442\u043e\u0434\u0430 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f.", "children": [{"text": "Provides a ", "block_type": "TextBlock"}, {"code": "delete", "block_type": "CodeSpanBlock"}, {"text": " method handler.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "Extends: [genericapiview] (#genericapiview), [destressmodelmixin] (#destressmodelmixin)", "children": [{"text": "Extends: ", "block_type": "TextBlock"}, {"children": [{"text": "GenericAPIView", "block_type": "TextBlock"}], "url": "#genericapiview", "title": null, "block_type": "LinkBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"children": [{"text": "DestroyModelMixin", "block_type": "TextBlock"}], "url": "#destroymodelmixin", "title": null, "block_type": "LinkBlock"}], "block_type": "Paragraph"}, {"translated_data": "## UpdateApiview", "children": [{"text": "UpdateAPIView", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f ** \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f ** \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0435 \u0442\u043e\u0447\u043a\u0438 \u0434\u043b\u044f ** \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u0441 \u043e\u0434\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u044c\u044e **.", "children": [{"text": "Used for ", "block_type": "TextBlock"}, {"children": [{"text": "update-only", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " endpoints for a ", "block_type": "TextBlock"}, {"children": [{"text": "single model instance", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 Pat '\u0438 `patch`.", "children": [{"text": "Provides ", "block_type": "TextBlock"}, {"code": "put", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "patch", "block_type": "CodeSpanBlock"}, {"text": " method handlers.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "Extends: [genericapiview] (#genericapiview), [updatemodelmixin] (#updateModelmixin)", "children": [{"text": "Extends: ", "block_type": "TextBlock"}, {"children": [{"text": "GenericAPIView", "block_type": "TextBlock"}], "url": "#genericapiview", "title": null, "block_type": "LinkBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"children": [{"text": "UpdateModelMixin", "block_type": "TextBlock"}], "url": "#updatemodelmixin", "title": null, "block_type": "LinkBlock"}], "block_type": "Paragraph"}, {"translated_data": "## listcreateapiview", "children": [{"text": "ListCreateAPIView", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f ** readwrite ** \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0435 \u0442\u043e\u0447\u043a\u0438, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c ** \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044e \u043c\u043e\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432 **.", "children": [{"text": "Used for ", "block_type": "TextBlock"}, {"children": [{"text": "read-write", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " endpoints to represent a ", "block_type": "TextBlock"}, {"children": [{"text": "collection of model instances", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 \u2018get` \u0438` post`.", "children": [{"text": "Provides ", "block_type": "TextBlock"}, {"code": "get", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "post", "block_type": "CodeSpanBlock"}, {"text": " method handlers.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "Extends: [genericapiview] (#genericapiview), [listmodelmixin] (#listmodelmixin), [createmodelmixin] (#createmodelmixin)", "children": [{"text": "Extends: ", "block_type": "TextBlock"}, {"children": [{"text": "GenericAPIView", "block_type": "TextBlock"}], "url": "#genericapiview", "title": null, "block_type": "LinkBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"children": [{"text": "ListModelMixin", "block_type": "TextBlock"}], "url": "#listmodelmixin", "title": null, "block_type": "LinkBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"children": [{"text": "CreateModelMixin", "block_type": "TextBlock"}], "url": "#createmodelmixin", "title": null, "block_type": "LinkBlock"}], "block_type": "Paragraph"}, {"translated_data": "## retiveupdateapiview", "children": [{"text": "RetrieveUpdateAPIView", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f ** \u0427\u0438\u0442\u0430\u0442\u044c \u0438\u043b\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 ** \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0435 \u0442\u043e\u0447\u043a\u0438 \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f ** \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u0435\u0434\u0438\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 **.", "children": [{"text": "Used for ", "block_type": "TextBlock"}, {"children": [{"text": "read or update", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " endpoints to represent a ", "block_type": "TextBlock"}, {"children": [{"text": "single model instance", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 `get ',` put' \u0438 `patch '.", "children": [{"text": "Provides ", "block_type": "TextBlock"}, {"code": "get", "block_type": "CodeSpanBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"code": "put", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "patch", "block_type": "CodeSpanBlock"}, {"text": " method handlers.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "Extends: [genericapiview] (#genericapiview), [retievemodelmixin] (#retivemodelmixin), [updatemodelmixin] (#updatemodelmixin)", "children": [{"text": "Extends: ", "block_type": "TextBlock"}, {"children": [{"text": "GenericAPIView", "block_type": "TextBlock"}], "url": "#genericapiview", "title": null, "block_type": "LinkBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"children": [{"text": "RetrieveModelMixin", "block_type": "TextBlock"}], "url": "#retrievemodelmixin", "title": null, "block_type": "LinkBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"children": [{"text": "UpdateModelMixin", "block_type": "TextBlock"}], "url": "#updatemodelmixin", "title": null, "block_type": "LinkBlock"}], "block_type": "Paragraph"}, {"translated_data": "## retrendestroyapiview", "children": [{"text": "RetrieveDestroyAPIView", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f ** \u0427\u0438\u0442\u0430\u0442\u044c \u0438\u043b\u0438 \u0443\u0434\u0430\u043b\u0438\u0442\u044c ** \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0435 \u0442\u043e\u0447\u043a\u0438, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u0438\u0442\u044c ** \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043e\u0434\u0438\u043d\u043e\u0447\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 **.", "children": [{"text": "Used for ", "block_type": "TextBlock"}, {"children": [{"text": "read or delete", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " endpoints to represent a ", "block_type": "TextBlock"}, {"children": [{"text": "single model instance", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u043c\u0435\u0442\u043e\u0434\u0430 `get '\u0438` delete'.", "children": [{"text": "Provides ", "block_type": "TextBlock"}, {"code": "get", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "delete", "block_type": "CodeSpanBlock"}, {"text": " method handlers.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "Extends: [genericapiview] (#genericapiview), [retievemodelmixin] (#retievemodelmixin), [destressmodelmixin] (#destropmodelmixin)", "children": [{"text": "Extends: ", "block_type": "TextBlock"}, {"children": [{"text": "GenericAPIView", "block_type": "TextBlock"}], "url": "#genericapiview", "title": null, "block_type": "LinkBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"children": [{"text": "RetrieveModelMixin", "block_type": "TextBlock"}], "url": "#retrievemodelmixin", "title": null, "block_type": "LinkBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"children": [{"text": "DestroyModelMixin", "block_type": "TextBlock"}], "url": "#destroymodelmixin", "title": null, "block_type": "LinkBlock"}], "block_type": "Paragraph"}, {"translated_data": "## retiveupdatedErsoyapiview", "children": [{"text": "RetrieveUpdateDestroyAPIView", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f ** read-write-delete ** \u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0435 \u0442\u043e\u0447\u043a\u0438 \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f ** \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u0441 \u043e\u0434\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u044c\u044e **.", "children": [{"text": "Used for ", "block_type": "TextBlock"}, {"children": [{"text": "read-write-delete", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": " endpoints to represent a ", "block_type": "TextBlock"}, {"children": [{"text": "single model instance", "block_type": "TextBlock"}], "block_type": "StrongTextBlock"}, {"text": ".", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 `get`,` put`, `patch` \u0438` delete '\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u043c\u0435\u0442\u043e\u0434\u0430.", "children": [{"text": "Provides ", "block_type": "TextBlock"}, {"code": "get", "block_type": "CodeSpanBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"code": "put", "block_type": "CodeSpanBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"code": "patch", "block_type": "CodeSpanBlock"}, {"text": " and ", "block_type": "TextBlock"}, {"code": "delete", "block_type": "CodeSpanBlock"}, {"text": " method handlers.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "Extends: [genericapiview] (#genericapiview), [retievemodelmixin] (#retievemodelmixin), [updatemodelmixin] (#updatemodelmixin), [destropmodelmixin] (#destroymodelmixin)", "children": [{"text": "Extends: ", "block_type": "TextBlock"}, {"children": [{"text": "GenericAPIView", "block_type": "TextBlock"}], "url": "#genericapiview", "title": null, "block_type": "LinkBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"children": [{"text": "RetrieveModelMixin", "block_type": "TextBlock"}], "url": "#retrievemodelmixin", "title": null, "block_type": "LinkBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"children": [{"text": "UpdateModelMixin", "block_type": "TextBlock"}], "url": "#updatemodelmixin", "title": null, "block_type": "LinkBlock"}, {"text": ", ", "block_type": "TextBlock"}, {"children": [{"text": "DestroyModelMixin", "block_type": "TextBlock"}], "url": "#destroymodelmixin", "title": null, "block_type": "LinkBlock"}], "block_type": "Paragraph"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043e\u0431\u0449\u0438\u0445 \u0432\u0438\u0434\u043e\u0432", "children": [{"text": "Customizing the generic views", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "\u0427\u0430\u0441\u0442\u043e \u0432\u044b \u0437\u0430\u0445\u043e\u0442\u0438\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u043e\u0431\u0449\u0438\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f.\n\u0415\u0441\u043b\u0438 \u0432\u044b \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u0442\u0435, \u0447\u0442\u043e \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435 \u043a\u0430\u043a\u043e\u0435 -\u0442\u043e \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043c\u0435\u0441\u0442\u0430\u0445, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0435\u0440\u0435\u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u0432 \u043e\u0431\u0449\u0438\u0439 \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u043a \u043b\u044e\u0431\u043e\u043c\u0443 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044e \u0438\u043b\u0438 \u0441\u0431\u043e\u0440\u0443 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u043f\u043e \u043c\u0435\u0440\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438.", "children": [{"text": "Often you'll want to use the existing generic views, but use some slightly customized behavior. If you find yourself reusing some bit of customized behavior in multiple places, you might want to refactor the behavior into a common class that you can then just apply to any view or viewset as needed.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u043c\u0438\u043a\u0448\u0438\u043d\u043e\u0432", "children": [{"text": "Creating custom mixins", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0435\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0438\u0441\u043a\u0430\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043f\u043e\u043b\u0435\u0439 \u0432 URL Conf, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043b\u0430\u0441\u0441 Mixin, \u043a\u0430\u043a \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435:", "children": [{"text": "For example, if you need to lookup objects based on multiple fields in the URL conf, you could create a mixin class like the following:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "class MultipleFieldLookupMixin:\n    \"\"\"\n    Apply this mixin to any view or viewset to get multiple field filtering\n    based on a `lookup_fields` attribute, instead of the default single field filtering.\n    \"\"\"\n    def get_object(self):\n        queryset = self.get_queryset()             # Get the base queryset\n        queryset = self.filter_queryset(queryset)  # Apply any filter backends\n        filter = {}\n        for field in self.lookup_fields:\n            if self.kwargs.get(field): # Ignore empty fields.\n                filter[field] = self.kwargs[field]\n        obj = get_object_or_404(queryset, **filter)  # Lookup the object\n        self.check_object_permissions(self.request, obj)\n        return obj", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0417\u0430\u0442\u0435\u043c \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u044d\u0442\u043e\u0442 \u043c\u0438\u043a\u0448\u0438\u043d \u043a \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044e \u0438\u043b\u0438 \u0441\u0431\u043e\u0440\u0443 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430 \u0432 \u043b\u044e\u0431\u043e\u0435 \u0432\u0440\u0435\u043c\u044f, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435.", "children": [{"text": "You can then simply apply this mixin to a view or viewset anytime you need to apply the custom behavior.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "class RetrieveUserView(MultipleFieldLookupMixin, generics.RetrieveAPIView):\n    queryset = User.objects.all()\n    serializer_class = UserSerializer\n    lookup_fields = ['account', 'username']", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u043c\u0438\u043a\u0448\u0438\u043d\u043e\u0432 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0445\u043e\u0440\u043e\u0448\u0438\u043c \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u043c, \u0435\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c.", "children": [{"text": "Using custom mixins is a good option if you have custom behavior that needs to be used.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u0431\u0430\u0437\u043e\u0432\u044b\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432", "children": [{"text": "Creating custom base classes", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "\u0415\u0441\u043b\u0438 \u0432\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435 \u043c\u0438\u043a\u0448\u0438\u043d \u0434\u043b\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u043e\u0432, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u044d\u0442\u043e\u0442 \u0448\u0430\u0433 \u0434\u0430\u043b\u044c\u0448\u0435 \u0438 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0441\u0432\u043e\u0439 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0439 \u043d\u0430\u0431\u043e\u0440 \u0431\u0430\u0437\u043e\u0432\u044b\u0445 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0437\u0430\u0442\u0435\u043c \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043d\u0430 \u043f\u0440\u043e\u0442\u044f\u0436\u0435\u043d\u0438\u0438 \u0432\u0441\u0435\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430.\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:", "children": [{"text": "If you are using a mixin across multiple views, you can take this a step further and create your own set of base views that can then be used throughout your project. For example:", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"code": "class BaseRetrieveView(MultipleFieldLookupMixin,\n                       generics.RetrieveAPIView):\n    pass\n\nclass BaseRetrieveUpdateDestroyView(MultipleFieldLookupMixin,\n                                    generics.RetrieveUpdateDestroyAPIView):\n    pass", "language": null, "block_type": "CodeBlock"}, {"translated_data": "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u0431\u0430\u0437\u043e\u0432\u044b\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0445\u043e\u0440\u043e\u0448\u0438\u043c \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u043c, \u0435\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043d\u0435\u0438\u0437\u043c\u0435\u043d\u043d\u043e \u043d\u0443\u0436\u043d\u043e \u043f\u043e\u0432\u0442\u043e\u0440\u044f\u0442\u044c \u0432\u043e \u043c\u043d\u043e\u0433\u0438\u0445 \u0432\u0438\u0434\u0430\u0445 \u043d\u0430 \u043f\u0440\u043e\u0442\u044f\u0436\u0435\u043d\u0438\u0438 \u0432\u0441\u0435\u0433\u043e \u0432\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430.", "children": [{"text": "Using custom base classes is a good option if you have custom behavior that consistently needs to be repeated across a large number of views throughout your project.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# \u041f\u043e\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f", "children": [{"text": "PUT as create", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "\u0414\u043e \u0432\u0435\u0440\u0441\u0438\u0438 3.0 \u043c\u0438\u043a\u0448\u0438\u043d\u044b REST Framework \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u043b\u0438 `put` \u043a\u0430\u043a \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0438\u043b\u0438 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f, \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0442\u043e\u0433\u043e, \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u043b\u0438 \u043e\u0431\u044a\u0435\u043a\u0442 \u0438\u043b\u0438 \u043d\u0435\u0442.", "children": [{"text": "Prior to version 3.0 the REST framework mixins treated ", "block_type": "TextBlock"}, {"code": "PUT", "block_type": "CodeSpanBlock"}, {"text": " as either an update or a create operation, depending on if the object already existed or not.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u00abput\u00bb \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430\u0442\u0438\u0447\u043d\u044b\u043c, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043e\u043d \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0440\u0430\u0441\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u0438\u0438 \u0438\u043b\u0438 \u043d\u0435\u0431\u044b\u0432\u0430\u043d\u0438\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432.\n\u0422\u0430\u043a\u0436\u0435 \u043d\u0435 \u043e\u0447\u0435\u0432\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u043f\u0440\u043e\u0437\u0440\u0430\u0447\u043d\u0430\u044f \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0432\u043e\u0441\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0440\u0430\u043d\u0435\u0435 \u0443\u0434\u0430\u043b\u0435\u043d\u043d\u044b\u0445 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0443\u0447\u0448\u0438\u043c \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435\u043c \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u0447\u0435\u043c \u043f\u0440\u043e\u0441\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u0435 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u00ab404\u00bb.", "children": [{"text": "Allowing ", "block_type": "TextBlock"}, {"code": "PUT", "block_type": "CodeSpanBlock"}, {"text": " as create operations is problematic, as it necessarily exposes information about the existence or non-existence of objects. It's also not obvious that transparently allowing re-creating of previously deleted instances is necessarily a better default behavior than simply returning ", "block_type": "TextBlock"}, {"code": "404", "block_type": "CodeSpanBlock"}, {"text": " responses.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u041e\u0431\u0430 \u0441\u0442\u0438\u043b\u044f \u00abPut\u00bb \u043a\u0430\u043a 404 \u00bb\u0438\u00ab put \u00bb\u043a\u0430\u043a \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435\u00bb \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u0432 \u0440\u0430\u0437\u043d\u044b\u0445 \u043e\u0431\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430\u0445, \u043d\u043e \u0441 \u0432\u0435\u0440\u0441\u0438\u0438 3.0 \u043c\u044b \u0442\u0435\u043f\u0435\u0440\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 404 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0434\u0435\u0444\u043e\u043b\u0442\u0430, \u043f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043e\u043d \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0431\u043e\u043b\u0435\u0435 \u043f\u0440\u043e\u0441\u0442\u044b\u043c \u0438 \u0431\u043e\u043b\u0435\u0435 \u043e\u0447\u0435\u0432\u0438\u0434\u043d\u044b\u043c.", "children": [{"text": "Both styles \"", "block_type": "TextBlock"}, {"code": "PUT", "block_type": "CodeSpanBlock"}, {"text": " as 404\" and \"", "block_type": "TextBlock"}, {"code": "PUT", "block_type": "CodeSpanBlock"}, {"text": " as create\" can be valid in different circumstances, but from version 3.0 onwards we now use 404 behavior as the default, due to it being simpler and more obvious.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "\u0415\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u043e\u0431\u0449\u0435\u0435 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435, \u043a\u0430\u043a \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0447\u0442\u043e-\u0442\u043e \u0432\u0440\u043e\u0434\u0435 [this `allyputAscreatemixin` class] (https://gist.github.com/tomchristie/a2ace4577aff2c603b1b) \u0432 \u0432\u0438\u0434\u0435 \u043c\u0438\u043a\u0448\u0438\u043d\u0430 \u0441 \u0432\u0430\u0448\u0438\u043c\u0438 \u0432\u0437\u0433\u043b\u044f\u0434\u0430\u043c\u0438.", "children": [{"text": "If you need to generic PUT-as-create behavior you may want to include something like ", "block_type": "TextBlock"}, {"children": [{"text": "this ", "block_type": "TextBlock"}, {"code": "AllowPUTAsCreateMixin", "block_type": "CodeSpanBlock"}, {"text": " class", "block_type": "TextBlock"}], "url": "https://gist.github.com/tomchristie/a2ace4577eff2c603b1b", "title": null, "block_type": "LinkBlock"}, {"text": " as a mixin to your views.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"block_type": "SeparatorBlock"}, {"translated_data": "# \u0421\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u044b", "children": [{"text": "Third party packages", "block_type": "TextBlock"}], "level": 1, "block_type": "HeadingBlock"}, {"translated_data": "\u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u044b \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043e\u0431\u0449\u0438\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430.", "children": [{"text": "The following third party packages provide additional generic view implementations.", "block_type": "TextBlock"}], "block_type": "Paragraph"}, {"translated_data": "## django rete \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043c\u043e\u0434\u0435\u043b\u0435\u0439", "children": [{"text": "Django Rest Multiple Models", "block_type": "TextBlock"}], "level": 2, "block_type": "HeadingBlock"}, {"translated_data": "[Django Rest \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043c\u043e\u0434\u0435\u043b\u0435\u0439] (https://github.com/mattbroach/djangorestmultiplemodels) \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0431\u0449\u0438\u0439 \u0432\u0438\u0434 (\u0438 \u043c\u0438\u043a\u0441\u0438\u043d) \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0438/\u0438\u043b\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 \u043e\u0434\u0438\u043d \u0437\u0430\u043f\u0440\u043e\u0441 API.", "children": [{"children": [{"text": "Django Rest Multiple Models", "block_type": "TextBlock"}], "url": "https://github.com/MattBroach/DjangoRestMultipleModels", "title": null, "block_type": "LinkBlock"}, {"text": " provides a generic view (and mixin) for sending multiple serialized models and/or querysets via a single API request.", "block_type": "TextBlock"}], "block_type": "Paragraph"}]}